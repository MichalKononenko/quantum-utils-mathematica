(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    379844,       7324]
NotebookOptionsPosition[    373883,       7135]
NotebookOutlinePosition[    375341,       7182]
CellTagsIndexPosition[    374995,       7171]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["LindbladSolver Documentation", "Chapter",
 CellChangeTimes->{{3.6333515346579514`*^9, 3.63335154627586*^9}, {
  3.633364320690548*^9, 3.63336432261762*^9}, {3.633781291117386*^9, 
  3.633781292159832*^9}, {3.633781364287074*^9, 3.633781398056273*^9}, {
  3.6337814322542763`*^9, 3.633781434518094*^9}, {3.6340531526945267`*^9, 
  3.63405315482905*^9}}],

Cell[CellGroupData[{

Cell["Preamble", "Section",
 CellChangeTimes->{{3.633351558518317*^9, 3.633351560041299*^9}, {
  3.6337812001050663`*^9, 3.633781202247016*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<LindbladSolver`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.633351696261045*^9, 3.633351701530016*^9}, {
  3.633781146956828*^9, 3.633781148275402*^9}, {3.633781294331254*^9, 
  3.633781296275483*^9}, {3.633781369011711*^9, 3.633781370275049*^9}, {
  3.633781401233733*^9, 3.633781430288822*^9}, {3.634053158386031*^9, 
  3.634053167318838*^9}}],

Cell["\<\
The following packages are needed to run some code found in this \
documentation notebook.\
\>", "Text",
 CellChangeTimes->{{3.633781139005548*^9, 3.6337811426309013`*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<QuantumChannel`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<QuantumSystems`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6340531704112883`*^9, 3.634053177667268*^9}, {
  3.634055826057991*^9, 3.634055830454028*^9}}]
}, Open  ]],

Cell["Introduction and Overview", "Section",
 CellChangeTimes->{{3.633351563673402*^9, 3.633351567143589*^9}}],

Cell[CellGroupData[{

Cell["Simulation of First order ODE", "Section",
 CellChangeTimes->{{3.63335202563237*^9, 3.6333520385490847`*^9}, {
  3.633441643373975*^9, 3.633441643471745*^9}, {3.634053212341383*^9, 
  3.634053268949163*^9}, {3.634053975370884*^9, 3.634053984123803*^9}}],

Cell[CellGroupData[{

Cell["ODE Solver", "Subsection",
 CellChangeTimes->{{3.633352631378475*^9, 3.6333526519246817`*^9}, {
  3.63405336428334*^9, 3.634053367003808*^9}}],

Cell[TextData[{
 StyleBox["ODESolver[mat,{init,t0_,tf_},opts]", "Input"],
 " numerically solves the matrix first order ODE ",
 StyleBox["x\[CloseCurlyQuote][t] = mat[t].x[t]", "Input"],
 " from time ",
 StyleBox["t0", "Input"],
 " to ",
 StyleBox["tf", "Input"],
 " for initial condition ",
 StyleBox["x[t0]=init", "Input"],
 ".\n",
 StyleBox["mat", "Input"],
 " may be either a matrix, or a pure function of a single variable which \
evaluates to a matrix, this variable corresponds to ",
 StyleBox["t", "Input"],
 ". This is done by calling ",
 StyleBox["NDSolveValue", "Input"],
 ", and returns the interpolation function for the coefficients of the vector \
",
 StyleBox["x", "Input"],
 ". These may be put into the form of a function of time by calling ",
 StyleBox["Through[sol[t]] ", "Input"],
 "on the solution ",
 StyleBox["sol", "Input"],
 ".\n\n",
 StyleBox["ODESolver[mat,{init,t0},opts]", "Input"],
 " attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " rather than ",
 StyleBox["NDSolveValue", "Input"],
 " for initial condition ",
 StyleBox["x[t0]=init", "Input"],
 ".\nIf successful it returns the solution vector ",
 StyleBox["x", "Input"],
 " as a function of time.\n\n",
 StyleBox["ODESolver[mat,opts] ", "Input"],
 "attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " without an initial condition. \nIf successful it returns the solution \
vector ",
 StyleBox["x", "Input"],
 " as a function of time in terms of constants ",
 StyleBox["C[j]", "Input"],
 " which can later be evaluated for different initial conditions.\n\n",
 StyleBox["NDSolveValue ", "Input"],
 "and ",
 StyleBox["DSolveValue", "Input"],
 " options will be passed to the respective function.\nThere is an additional \
option ",
 StyleBox["Symbol\[Rule]\[CloseCurlyDoubleQuote]x\[CloseCurlyDoubleQuote]", 
  "Input"],
 " which allows for specififying a custom symbol to be used for the elements \
of the vector ",
 StyleBox["x", "Input"],
 " in the solution.\nThis can be used to pass custom options to ",
 StyleBox["NDSolveValue", "Input"],
 " such as ",
 StyleBox["EvaluationMonitor", "Input"],
 " in terms of these coefficients."
}], "Text",
 CellChangeTimes->{{3.634053795518072*^9, 3.6340538093881903`*^9}, {
  3.6340538576282587`*^9, 3.6340539471115*^9}, {3.6340540279985647`*^9, 
  3.6340540332529993`*^9}, {3.634054123511153*^9, 3.634054123669038*^9}},
 CellTags->"ODESolver::usage"],

Cell[CellGroupData[{

Cell["Utility Functions", "Subsubsection",
 CellChangeTimes->{{3.6340582380688953`*^9, 3.6340582398809223`*^9}}],

Cell[TextData[{
 StyleBox["ODECoefficients[{d,sym}] ", "Input"],
 "yields the list of coefficients",
 StyleBox[" {sym[1], sym[2],...,sym[d]}", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6340582284051657`*^9, 3.634058283125029*^9}},
 CellTags->"ODECoefficients::usage"],

Cell[TextData[{
 StyleBox["ODEVariables[{d,t,sym}]", "Input"],
 " yields the list of time dependent coefficients ",
 StyleBox["{sym[1][t], sym[2][t], ..., sym[d][t]}", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6340582982227077`*^9, 3.634058328395055*^9}},
 CellTags->"ODEVariables::usage"],

Cell[TextData[{
 StyleBox["ODEInitialConditions[init,{t0,sym}]", "Input"],
 " yields the inital condition equation ",
 StyleBox["sym[j][t0]==init[[j]] ", "Input"],
 "for each component of the vector ",
 StyleBox["init", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634058340752*^9, 3.634058452528825*^9}},
 CellTags->"ODEInitialConditions::usage"],

Cell[TextData[{
 StyleBox["ODEFirstOrderSystem[mat,{t,sym}]", "Input"],
 " yields the set of first order ODE equations ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["sym[j]\[CloseCurlyQuote][t]==mat[[j,1]][t].sym[1][t]+mat[[j,2]][t].\
sym[2][t]", "Input",
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "for the matrix ",
 StyleBox["mat", "Input",
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.63405847071898*^9, 3.6340586667057657`*^9}},
 CellTags->"ODEFirstOrderSystem::usage"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.633354110058621*^9, 3.633354110780126*^9}}],

Cell[BoxData[GridBox[{
   {
    StyleBox["Option", "Text",
     FontWeight->Bold], 
    StyleBox[
     RowBox[{"Default", " ", "Value"}], "Text",
     FontWeight->Bold], 
    StyleBox["Description", "Text",
     FontWeight->Bold]},
   {"Symbol", "\"\<x\>\"", 
    StyleBox[
     RowBox[{
     "Symbol", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "ODESolver", " ", "that", " ", "sets", " ", "the", " ", "symbol", " ", 
      "used", " ", "internally", " ", "for", " ", "the", " ", "ODE", " ", 
      "coefficients", " ", "used", " ", "to", " ", "set", " ", "up", " ", 
      "the", " ", "system", " ", "of", " ", 
      RowBox[{"equations", ".", " "}]}], "Text"]}
  },
  GridBoxAlignment->{"Columns" -> {{Left}}},
  GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {Automatic, Automatic, {
       Scaled[0.5]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.6340534976943207`*^9, 3.634053779534758*^9}, {
  3.634054244208025*^9, 3.634054249515648*^9}}],

Cell["DSolveValue options may be used when solving symbolically", "Text",
 CellChangeTimes->{{3.634054198313026*^9, 3.634054208977447*^9}}],

Cell[BoxData[GridBox[{
   {
    StyleBox["Option", "Text",
     FontWeight->Bold], 
    StyleBox[
     RowBox[{"Default", " ", "Value"}], "Text",
     FontWeight->Bold], 
    StyleBox["Description", "Text",
     FontWeight->Bold]},
   {"DependentVariables", "Automatic", 
    StyleBox[
     RowBox[{
     "DependentVariables", " ", "is", " ", "an", " ", "option", " ", "for", 
      " ", "NDSolve", " ", "and", " ", "other", " ", "functions", " ", "that",
       " ", "specifies", " ", "the", " ", "list", " ", "of", " ", "all", " ", 
      "objects", " ", "that", " ", "should", " ", "be", " ", "considered", 
      " ", "as", " ", "dependent", " ", "variables", " ", "in", " ", 
      "equations", " ", "that", " ", "have", " ", "been", " ", 
      RowBox[{"supplied", "."}]}], "Text"]},
   {"DiscreteVariables", 
    RowBox[{"{", "}"}], 
    StyleBox[
     RowBox[{
     "DiscreteVariables", " ", "is", " ", "an", " ", "option", " ", "for", 
      " ", "NDSolve", " ", "and", " ", "other", " ", "functions", " ", "that",
       " ", "specifies", " ", "variables", " ", "that", " ", "only", " ", 
      "change", " ", "at", " ", "discrete", " ", "times", " ", "in", " ", "a",
       " ", "temporal", " ", 
      RowBox[{"integration", "."}]}], "Text"]},
   {"GeneratedParameters", "C", 
    StyleBox[
     RowBox[{
     "GeneratedParameters", " ", "is", " ", "an", " ", "option", " ", "that", 
      " ", "specifies", " ", "how", " ", "parameters", " ", "generated", " ", 
      "to", " ", "represent", " ", "the", " ", "results", " ", "of", " ", 
      "various", " ", "symbolic", " ", "operations", " ", "should", " ", "be",
       " ", 
      RowBox[{"named", ".", " "}]}], "Text"]},
   {"Method", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "Method", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
       "various", " ", "algorithm"}], "-", 
      RowBox[{
      "intensive", " ", "functions", " ", "that", " ", "specifies", " ", 
       "what", " ", "internal", " ", "methods", " ", "they", " ", "should", 
       " ", 
       RowBox[{"use", "."}]}]}], "Text"]}
  },
  GridBoxAlignment->{"Columns" -> {{Left}}},
  GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {Automatic, Automatic, {
       Scaled[0.5]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
    "RowsIndexed" -> {}}]], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6340541953089113`*^9}],

Cell["NDSolveValue options may be used when solving numerically.", "Text",
 CellChangeTimes->{{3.634054153143497*^9, 3.634054171661447*^9}}],

Cell[BoxData[GridBox[{
   {
    StyleBox["Option", "Text",
     FontWeight->Bold], 
    StyleBox[
     RowBox[{"Default", " ", "Value"}], "Text",
     FontWeight->Bold], 
    StyleBox["Description", "Text",
     FontWeight->Bold]},
   {"AccuracyGoal", "Automatic", 
    StyleBox[
     RowBox[{
     "AccuracyGoal", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "various", " ", "numerical", " ", "operations", " ", "which", " ", 
      "specifies", " ", "how", " ", "many", " ", "effective", " ", "digits", 
      " ", "of", " ", "accuracy", " ", "should", " ", "be", " ", "sought", 
      " ", "in", " ", "the", " ", "final", " ", 
      RowBox[{"result", ".", " "}]}], "Text"]},
   {"Compiled", "Automatic", 
    StyleBox[
     RowBox[{
     "Compiled", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "various", " ", "numerical", " ", "and", " ", "plotting", " ", 
      "functions", " ", "which", " ", "specifies", " ", "whether", " ", "the",
       " ", "expressions", " ", "they", " ", "work", " ", "with", " ", 
      "should", " ", "automatically", " ", "be", " ", 
      RowBox[{"compiled", ".", " "}]}], "Text"]},
   {"DependentVariables", "Automatic", 
    StyleBox[
     RowBox[{
     "DependentVariables", " ", "is", " ", "an", " ", "option", " ", "for", 
      " ", "NDSolve", " ", "and", " ", "other", " ", "functions", " ", "that",
       " ", "specifies", " ", "the", " ", "list", " ", "of", " ", "all", " ", 
      "objects", " ", "that", " ", "should", " ", "be", " ", "considered", 
      " ", "as", " ", "dependent", " ", "variables", " ", "in", " ", 
      "equations", " ", "that", " ", "have", " ", "been", " ", 
      RowBox[{"supplied", "."}]}], "Text"]},
   {"DiscreteVariables", 
    RowBox[{"{", "}"}], 
    StyleBox[
     RowBox[{
     "DiscreteVariables", " ", "is", " ", "an", " ", "option", " ", "for", 
      " ", "NDSolve", " ", "and", " ", "other", " ", "functions", " ", "that",
       " ", "specifies", " ", "variables", " ", "that", " ", "only", " ", 
      "change", " ", "at", " ", "discrete", " ", "times", " ", "in", " ", "a",
       " ", "temporal", " ", 
      RowBox[{"integration", "."}]}], "Text"]},
   {"EvaluationMonitor", "None", 
    StyleBox[
     RowBox[{
     "EvaluationMonitor", " ", "is", " ", "an", " ", "option", " ", "for", 
      " ", "various", " ", "numerical", " ", "computation", " ", "and", " ", 
      "plotting", " ", "functions", " ", "that", " ", "gives", " ", "an", " ",
       "expression", " ", "to", " ", "evaluate", " ", "whenever", " ", 
      "functions", " ", "derived", " ", "from", " ", "the", " ", "input", " ",
       "are", " ", "evaluated", " ", 
      RowBox[{"numerically", ".", " "}]}], "Text"]},
   {"InterpolationOrder", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "InterpolationOrder", " ", "is", " ", "an", " ", "option", " ", "for", 
       " ", "Interpolation"}], ",", " ", 
      RowBox[{"as", " ", "well", " ", "as", " ", "ListLinePlot"}], ",", " ", 
      "ListPlot3D", ",", " ", "ListContourPlot", ",", " ", 
      RowBox[{"and", " ", "related", " ", "functions"}], ",", " ", 
      RowBox[{
      "that", " ", "specifies", " ", "what", " ", "order", " ", "of", " ", 
       "interpolation", " ", "to", " ", 
       RowBox[{"use", "."}]}]}], "Text"]},
   {"MaxStepFraction", 
    FractionBox["1", "10"], 
    StyleBox[
     RowBox[{
     "MaxStepFraction", " ", "is", " ", "an", " ", "option", " ", "to", " ", 
      "functions", " ", "like", " ", "NDSolve", " ", "that", " ", "specifies",
       " ", "the", " ", "maximum", " ", "fraction", " ", "of", " ", "the", 
      " ", "total", " ", "range", " ", "to", " ", "cover", " ", "in", " ", 
      "a", " ", "single", " ", 
      RowBox[{"step", "."}]}], "Text"]},
   {"MaxSteps", "Automatic", 
    StyleBox[
     RowBox[{
     "MaxSteps", " ", "is", " ", "an", " ", "option", " ", "to", " ", 
      "functions", " ", "like", " ", "NDSolve", " ", "that", " ", "specifies",
       " ", "the", " ", "maximum", " ", "number", " ", "of", " ", "steps", 
      " ", "to", " ", "take", " ", "in", " ", "generating", " ", "a", " ", 
      RowBox[{"result", "."}]}], "Text"]},
   {"MaxStepSize", "Automatic", 
    StyleBox[
     RowBox[{
     "MaxStepSize", " ", "is", " ", "an", " ", "option", " ", "to", " ", 
      "functions", " ", "like", " ", "NDSolve", " ", "that", " ", "specifies",
       " ", "the", " ", "maximum", " ", "size", " ", "of", " ", "a", " ", 
      "single", " ", "step", " ", "used", " ", "in", " ", "generating", " ", 
      "a", " ", 
      RowBox[{"result", "."}]}], "Text"]},
   {"Method", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "Method", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
       "various", " ", "algorithm"}], "-", 
      RowBox[{
      "intensive", " ", "functions", " ", "that", " ", "specifies", " ", 
       "what", " ", "internal", " ", "methods", " ", "they", " ", "should", 
       " ", 
       RowBox[{"use", "."}]}]}], "Text"]},
   {"NormFunction", "Automatic", 
    StyleBox[
     RowBox[{
     "NormFunction", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "functions", " ", "such", " ", "as", " ", "FindFit", " ", "and", " ", 
      "NDSolve", " ", "which", " ", "gives", " ", "a", " ", "function", " ", 
      "to", " ", "be", " ", "minimized", " ", "in", " ", "generating", " ", 
      RowBox[{"results", "."}]}], "Text"]},
   {"PrecisionGoal", "Automatic", 
    StyleBox[
     RowBox[{
     "PrecisionGoal", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "various", " ", "numerical", " ", "operations", " ", "which", " ", 
      "specifies", " ", "how", " ", "many", " ", "effective", " ", "digits", 
      " ", "of", " ", "precision", " ", "should", " ", "be", " ", "sought", 
      " ", "in", " ", "the", " ", "final", " ", 
      RowBox[{"result", ".", " "}]}], "Text"]},
   {"StartingStepSize", "Automatic", 
    StyleBox[
     RowBox[{
     "StartingStepSize", " ", "is", " ", "an", " ", "option", " ", "to", " ", 
      "NDSolve", " ", "and", " ", "related", " ", "functions", " ", "that", 
      " ", "specifies", " ", "the", " ", "initial", " ", "step", " ", "size", 
      " ", "to", " ", "use", " ", "in", " ", "trying", " ", "to", " ", 
      "generate", " ", 
      RowBox[{"results", "."}]}], "Text"]},
   {"StepMonitor", "None", 
    StyleBox[
     RowBox[{
     "StepMonitor", " ", "is", " ", "an", " ", "option", " ", "for", " ", 
      "iterative", " ", "numerical", " ", "computation", " ", "functions", 
      " ", "that", " ", "gives", " ", "an", " ", "expression", " ", "to", " ",
       "evaluate", " ", "whenever", " ", "a", " ", "step", " ", "is", " ", 
      "taken", " ", "by", " ", "the", " ", "numerical", " ", "method", " ", 
      RowBox[{"used", ".", " "}]}], "Text"]},
   {"WorkingPrecision", "MachinePrecision", 
    StyleBox[
     RowBox[{
     "WorkingPrecision", " ", "is", " ", "an", " ", "option", " ", "for", " ",
       "various", " ", "numerical", " ", "operations", " ", "that", " ", 
      "specifies", " ", "how", " ", "many", " ", "digits", " ", "of", " ", 
      "precision", " ", "should", " ", "be", " ", "maintained", " ", "in", 
      " ", "internal", " ", 
      RowBox[{"computations", ".", " "}]}], "Text"]}
  },
  GridBoxAlignment->{"Columns" -> {{Left}}},
  GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {Automatic, Automatic, {
       Scaled[0.5]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
    "RowsIndexed" -> {}}]], "Text",
 CellChangeTimes->{{3.6340534976943207`*^9, 3.634053522123747*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6333526560119343`*^9, 3.633352677447281*^9}, {
  3.634054926538601*^9, 3.634054937348922*^9}, {3.6340571634354753`*^9, 
  3.6340571643006887`*^9}, {3.634059261305579*^9, 3.634059261415814*^9}}],

Cell[TextData[{
 "We can numerically solve an ODE corresponding to schrodingers equaiton with \
Hamiltonian ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "X"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for a given inital state {0,1} from time 0 to 2\[Pi]."
}], "Text",
 CellChangeTimes->{{3.6340549834844017`*^9, 3.634055025098344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"odeSol1", "=", 
  RowBox[{"ODESolver", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "I"}], "*", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.634054654423455*^9, 3.6340546586979227`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6340545447608747`*^9, 3.634054660242456*^9}]
}, Open  ]],

Cell["\<\
To convert this solution to a function of time we may use the function Through\
\>", "Text",
 CellChangeTimes->{{3.6340550344357977`*^9, 3.634055045078841*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"odeSol1", "[", "t", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.634055051372814*^9}]
}, Open  ]],

Cell["\<\
We plot the populations (squared norm) of the two basis vectors for this \
evolution\
\>", "Text",
 CellChangeTimes->{{3.634055054833449*^9, 3.634055075588835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"Through", "[", 
       RowBox[{"odeSol1", "[", "t", "]"}], "]"}], "]"}], "^", "2"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633700383016532*^9, 3.6337004137633038`*^9}, {
  3.634054367563903*^9, 3.6340544042897*^9}, {3.634054462989506*^9, 
  3.6340544977282743`*^9}, {3.634054541947618*^9, 3.634054543257167*^9}, {
  3.634054663942766*^9, 3.63405466566203*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
qj+Yq3xe4PEkoqkfu9zF7/sB817/TB4vInrEqHgmrswXrndzcPE8pOlxzpt4
StsH5EzFRkkBROThyjWWIvgARmVmYklBRNQrfwOL77wPMbsLz5BCiKipdbjd
44UnrDerfSCGE1FAXoHAsJQ7VJ+2COGKIaJsEbPauHIXuCfGD1yxRHRFyb23
veAOiDH9XeSMJ6Lfu3//nL90G0Kqb57nfE3zS7O3f3/4DVBNkSNyJhORuq1O
IlOFE1AerX3fnUpEQfFia83Uq2Cq9lhmdwYRzcda3WF54wCMAnpjHFlE1KaJ
+/sf0R5K13fHc+QQ0bW2v1EDEZdg78dXuzjyiejEVapVwb3z0Bxz6SP7eyKS
PTHVPt9iAw/dxJ3ZC2n5pTLt59C1hmG5oi62UiJygLeCowlm8JzrfijbR5r/
noJeqe4moD2njtjKiWith2M1dMgQ1loYlwkVtP67FW6YQtKHnLzGbEIlzR/B
77VBAafBNizyAuELEUmIck6cOnESOG5YkgjVRHTDlkg/IKkBX3QF6llriKjB
zvNEQoUquEoMe7N+p+V/MZhDPUUJRFmyZFnriUi7wCQ+lUkeusacx/GNRPRr
IHMm4Zc0BNXIv8I3ExHjisz90FdioJxGNcK3EBHrmMVusr0QzPhWMeJbiejT
G7vGKPM98PrikzJcOxGNTlnVhdUQwBj0b+E6aPrp/7p+9vOWOv0+rgO4LiKq
bHZj0xj8p1642dXN0kNEwSeMApmWvqg79CeEsfQR0T/xB6lzQ9Hqe8ova7AM
ENFFlmdO+T296vWxEivMg0T0UdR+v+vrJXUvD0oO8xAROerjkkUvM4GUZbEd
8zAR7bBkV4yfIMKgghc38ygRCftpnSFW80MkCTUwjRORs0nK19r0A6C5wPSQ
aYL2/sqwuBy4dhiWWpvkmKaIiPLu26enPLKQ8S7qH+MMTa/dzmy/3BXBOtwq
gZFCRIdshwx+WykDq7OgCeMcEYV1XY/N/AhQoT/CxLhARANgqR7TrAlC+Nu3
d60QURI3067Mm7pAz24oQF0lIuNLvkEm+DMwzCndQKHS4r9p3cpyMYY08rRI
3xYRUff6taVmmsNjgcafP3eISL7D5mLsnCU4CGV719KTkIO8+08Z67MgJnG1
6z0TCcmNGCwj/wvAIqXtn8FCQtfkePrPpl2EiaMHZRLwJCS+XF9ix30ZspVG
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 1.0000000891050005`}}, {{0, 6.283185307179586}, {
     0., 1.0000000891050005`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.633700407751464*^9, 3.633700465940259*^9, 3.634054405496962*^9, {
   3.634054469100629*^9, 3.634054498328768*^9}, 3.634054546040921*^9, 
   3.634054666234695*^9}]
}, Open  ]],

Cell["\<\
We can solve the previous equation symbolically by not specifying the final \
time for the evolution.\
\>", "Text",
 CellChangeTimes->{{3.634054956518426*^9, 3.634054979851375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ODESolver", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "I"}], "*", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], "]"}], "[", "t", 
  "]"}]], "Input",
 CellChangeTimes->{{3.634054515822648*^9, 3.634054529053061*^9}, {
   3.634054668566139*^9, 3.634054695091888*^9}, 3.634057169509429*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{"Cos", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.634054521302121*^9, 3.634054571399281*^9}, {
   3.63405467049277*^9, 3.634054702136794*^9}, 3.6340571704814034`*^9}]
}, Open  ]],

Cell["\<\
We can also solve it generally for any initial conditions by not specifying \
an initial state.\
\>", "Text",
 CellChangeTimes->{{3.634054876205716*^9, 3.634054887612527*^9}, {
  3.6340550876368017`*^9, 3.634055105355893*^9}, {3.634057177216601*^9, 
  3.634057193347464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"odeSol1sym", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"ODESolver", "[", 
    RowBox[{
     RowBox[{"-", "I"}], "*", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}], "[", "t", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.634054515822648*^9, 3.634054529053061*^9}, {
  3.634054584018363*^9, 3.6340546109645042`*^9}, {3.63405464868896*^9, 
  3.634054680478094*^9}, {3.634054714926259*^9, 3.634054729665011*^9}, {
  3.634057184904166*^9, 3.634057214735238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"C", "[", "2", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"C", "[", "1", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.634054521302121*^9, 3.63405461138953*^9}, {
  3.634054648975647*^9, 3.6340546808096867`*^9}, {3.6340547160486813`*^9, 
  3.634054740897026*^9}, {3.634057195112096*^9, 3.634057215906683*^9}}]
}, Open  ]],

Cell["\<\
The constants in the above solution can then be replaced by different initial \
conditions.\
\>", "Text",
 CellChangeTimes->{{3.6340548915491533`*^9, 3.6340549165363092`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"odeSol1init1", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"odeSol1sym", "[", "0", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"odeSol1init2", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"odeSol1sym", "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "I"}], "}"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6340546226685343`*^9, 3.6340546255666943`*^9}, {
  3.63405468761425*^9, 3.634054720259753*^9}, {3.634054752928482*^9, 
  3.634054842141143*^9}, {3.634057220203657*^9, 3.6340572281918173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.634054810370158*^9, 3.634054842685623*^9, 
  3.6340572286050034`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
    FractionBox["1", 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
    FractionBox["\[ImaginaryI]", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.634054810370158*^9, 3.634054842685623*^9, 
  3.6340572286108303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"odeSol1sym", "[", "t", "]"}], "/.", 
  "odeSol1init1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"odeSol1sym", "[", "t", "]"}], "/.", "odeSol1init2"}]}], "Input",
 CellChangeTimes->{{3.634057238378529*^9, 3.6340572548511*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.63405723990797*^9, 3.634057255095766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", "t", "]"}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "t", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.63405723990797*^9, 3.6340572551018677`*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Schrodinger\[CloseCurlyQuote]s Equation Solver", "Subsection",
 CellChangeTimes->{{3.633352631378475*^9, 3.6333526519246817`*^9}, {
  3.63405336428334*^9, 3.634053367003808*^9}, {3.634055129533885*^9, 
  3.634055133100127*^9}, {3.634057098667377*^9, 3.6340571065534678`*^9}}],

Cell[TextData[{
 StyleBox["SchrodingerSolver[ham,{init,t0_,tf_},opts]", "Input"],
 " numerically solves the Schrodinger equation ",
 StyleBox["x\[CloseCurlyQuote][t] = -I*ham.x[t]", "Input"],
 " from time ",
 StyleBox["t0", "Input"],
 " to ",
 StyleBox["tf", "Input"],
 " for initial condition ",
 StyleBox["x[t0]=init", "Input"],
 ".\n",
 StyleBox["ham", "Input"],
 " may be either a matrix, or a pure function of a single variable which \
evaluates to a matrix, this variable corresponds to ",
 StyleBox["t", "Input"],
 ". This is done by calling ",
 StyleBox["ODESolver", "Input"],
 " which in turn calls ",
 StyleBox["NDSolveValue", "Input"],
 ", and returns the interpolation function for the coefficients of the vector \
",
 StyleBox["x", "Input"],
 ". These may be put into the form of a function of time by calling ",
 StyleBox["Through[sol[t]]", "Input"],
 " on the solution ",
 StyleBox["sol", "Input"],
 ".\n\n",
 StyleBox["SchrodingerSolver[ham,{init,t0},opts]", "Input"],
 " attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " rather than ",
 StyleBox["NDSolveValue", "Input"],
 " for initial condition ",
 StyleBox["x[t0]=init", "Input"],
 ".\nIf successful it returns the solution vector ",
 StyleBox["x", "Input"],
 " as a function of time.\n\n",
 StyleBox["ShrodingerSolver[ham,opts] ", "Input"],
 "attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " without an initial condition. \nIf successful it returns the solution \
vector ",
 StyleBox["x", "Input"],
 " as a function of time in terms of constants ",
 StyleBox["C[j]", "Input"],
 " which can later be evaluated for different initial conditions.\n\n",
 StyleBox["NDSolveValue ", "Input"],
 "and ",
 StyleBox["DSolveValue", "Input"],
 " options will be passed to the respective function.\nThere is an additional \
option ",
 StyleBox["Symbol\[Rule]\[CloseCurlyDoubleQuote]x\[CloseCurlyDoubleQuote]", 
  "Input"],
 " which allows for specififying a custom symbol to be used for the elements \
of the vector ",
 StyleBox["x", "Input"],
 " in the solution.\nThis can be used to pass custom options to ",
 StyleBox["NDSolveValue", "Input"],
 " such as ",
 StyleBox["EvaluationMonitor", "Input"],
 " in terms of these coefficients."
}], "Text",
 CellChangeTimes->{{3.634053795518072*^9, 3.6340538093881903`*^9}, {
  3.6340538576282587`*^9, 3.6340539471115*^9}, {3.6340540279985647`*^9, 
  3.6340540332529993`*^9}, {3.634054123511153*^9, 3.634054123669038*^9}, {
  3.634055142854011*^9, 3.634055146723548*^9}, {3.634055178415902*^9, 
  3.634055209210918*^9}, {3.634055361007695*^9, 3.63405539834165*^9}},
 CellTags->"SchrodingerSolver::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.633354110058621*^9, 3.633354110780126*^9}}],

Cell[TextData[{
 "The options to ",
 StyleBox["SchrodingerSolver", "Input"],
 " are the same as for ",
 StyleBox["ODESolver", "Input"]
}], "Text",
 CellChangeTimes->{{3.634055230153615*^9, 3.634055239422497*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 1 - Single spin with time dependent control field", \
"Subsubsection",
 CellChangeTimes->{{3.6333526560119343`*^9, 3.633352677447281*^9}, {
  3.634054926538601*^9, 3.634054937348922*^9}, {3.634055947904758*^9, 
  3.6340559724960213`*^9}}],

Cell[TextData[{
 "We can numerically solve an ODE corresponding to schrodingers equaiton with \
a time dependent Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     SubscriptBox["\[Sigma]", "z"], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], 
      SubscriptBox["\[Sigma]", "X"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for a given inital state {0,1} from time 0 to 10\[Pi]."
}], "Text",
 CellChangeTimes->{{3.6340549834844017`*^9, 3.634055025098344*^9}, {
  3.6340552622276993`*^9, 3.634055322089252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"schrodSol1", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"SchrodingerSolver", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Spin", "[", "Z", "]"}], "[", 
         RowBox[{"1", "/", "2"}], "]"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "#", "]"}], "*", 
         RowBox[{
          RowBox[{"Spin", "[", "X", "]"}], "[", 
          RowBox[{"1", "/", "2"}], "]"}]}]}], ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"QState", "[", 
        RowBox[{"Zm", ",", 
         RowBox[{"VectorQ", "\[Rule]", "True"}]}], "]"}], ",", "0", ",", 
       RowBox[{"10", "\[Pi]"}]}], "}"}]}], "]"}], "[", "t", "]"}]}]], "Input",\

 CellChangeTimes->{{3.634054654423455*^9, 3.6340546586979227`*^9}, {
  3.634055325936964*^9, 3.6340553375933733`*^9}, {3.634055407579997*^9, 
  3.6340554356130667`*^9}, {3.634055624570182*^9, 3.634055635984147*^9}, {
  3.6340559784544477`*^9, 3.634056017925571*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "31.41592653589793`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "31.41592653589793`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 31.4159}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "31.41592653589793`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "31.41592653589793`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 31.4159}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6340545447608747`*^9, 3.634054660242456*^9, {3.634055421709552*^9, 
   3.634055437145179*^9}, {3.6340556210676813`*^9, 3.634055637150737*^9}, {
   3.634056000044784*^9, 3.634056036114216*^9}}]
}, Open  ]],

Cell["\<\
We plot the populations (squared norm) of the two basis vectors for this \
evolution\
\>", "Text",
 CellChangeTimes->{{3.634055054833449*^9, 3.634055075588835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"schrodSol1", "[", "t", "]"}], "]"}], "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"10", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633700383016532*^9, 3.6337004137633038`*^9}, {
  3.634054367563903*^9, 3.6340544042897*^9}, {3.634054462989506*^9, 
  3.6340544977282743`*^9}, {3.634054541947618*^9, 3.634054543257167*^9}, {
  3.634054663942766*^9, 3.63405466566203*^9}, {3.634055650881971*^9, 
  3.634055669225996*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUl3c81f8Xx5FRQvbK3uPiXtJAzkmZqSgiokVGSHZSSaUyIzskkvIVkmRF
2VtWQ5I97rVSRkV+n99f9/F8fN7v9znndcZ9vyXPXjzqyEBHR7fCTEf3/986
j8j3J29m67qwVK5tmdXZ28fe+2mx4ib8ZsvQKTi+qlseJtzVWPEAPBefjV+w
FIQwjoM7E5LTwGby/f7j9sqg0vz2UFFFFnR2e9bVmO8G3q3Hg5Nzn0FW8qb0
znU9WDOdKwpOfgFs7w8IOFkeBC/D2kWNAy8hR2muVzvxKJx33haRU/EKpkRk
Ndv3W4PNPVvZ7RolwO9+jiO5wB4O5+ZUReWWQp3SSmf/zFnQa/1pxSBVAVfX
T4hGD52HnTPwwzf5LSg/SOk/oX4B4pkN6n02vwP7T9tl0ocvwjaBmRjVA+/B
7+qe9c9+XrBp927lzIpaUPT5+bOALQCCjAZXbFfqILrk8tei7Vdg2fpWHZ9G
A6Qry0Tes7oG1Msf7O7lNkGG8KG3M89DwCHMT2n/RDMsLlvm/3fvFgymiKys
SbaCJN9+4S/XQqG7wvm+Z3I70G88HDr3LAxM2zjslPo6YOpfRgFpIALOefTz
em3+AOlqX59oyUTDt2vBw8oHumC16vC3uZUY6HrUFvioogdebAztG9JMBI5n
4meCTvRChuSov2RqEpgUehmeWOkFhz8xj0W3pkDdO0FeHo2PILVDSvsaQxqU
Dju8CM39DH+jG83inj2GDOn17+7J38Ab0lrq0p/BN2WzBpNdg9DxeZMrS/hz
EN6RlSffNwhRxp+jxy7ngknmk0rPzUPww/H55UX7PKgrMrmndGAY7lzflxYo
WQilPQlS6RWjcFL057CvcjEIVjHokrnGoKEpu0ymvBgCnnmcqDk/BmfrSccp
xq9hz1WD+xNc45BhcDWa17kEyuWW11WdJ+Ccbc/1z09LofKy5Zdq3mlwD6aV
xgm8BRGH97/MXadhV/NBPu6stxB0WIVzrHoazvCx/HunUgV7pZkMN1+gwpdL
D3suYjVUtRUXm72nQRtT0/snee/gvTjv/WH3OSgtEd9YyK4BKdbg/7xr52As
tvVRxnANhPyiNTAJzUNnC9MvX5Fa0GuuXVesmwd5ktPeK9G1cLasTHNP5ALw
PP+4eNa1DmLzL+5nKF0Aa/GvVwvS66AmS9a8dWQBDEedyv501YFUVIyb3e4f
kPe3jnxNsx5Gz7pk3Rj9AR4HJi4NzNcDr7X4SxOOReAk706p3t4ABw71VfHs
WYTi7rLEuwYN8GTXvv7sqEWAQLnNdUkN0EtamfQoWwTBA3yaGu8agFHqxdKu
sUWYurQ/6MZEAziwCXG17PkJlZSb30rUGiGOvlPsgcNPYKbUUFKPNkLd8i3S
yeifYF/5k9fOpxFkhhcM58Z+Ard81k3P4kYYf910jfv+L1DOtK6fkGsCOvfT
r5lKfwG3g90sPTSBsMwqbfX7L0iICCmTPN4EZrHyJ76rLUGVZxKfz40mcDWu
ju62WoJbHeeeP49vgtt0Vg3115fgxQHr7ulnTVDuEaqR17kEYgb9b2LamqBX
Vsz10coSeArFVKwPNMH8wOuMWPFl0LatHAmaaQLWuEOfbhsuA1/F3xdcf5tA
5uA4++WLy3Cq/2Zt1eZm0GW4esAtcRmoD079C+VrhhNlvFdOVS+D56iOh7tk
M0TJH5jS37YCJltyhh7vbIZng1/F9uxagaNWR98sQzPUxntbkk6twLmXvBf8
jZph0HRrhPidFQCXuWp5s2ZY3ZRVw12wAnNLb9K2WjUDd4XWb6ZPK6Ddu49T
3q4ZVLy61X7/W4Er263Mrp1tBiNF1/Mzcqtw1yLhPZ9TM5wdok/7fngVvOk4
p3+4NkNQYnJPt98qNKj3ugt4NEPiYQprQ/oqCHZ1CIZ7NkMRUzOWNazCbe0n
veZezdBWedo/b24VPttFvfD0boYJ79UXj/h/ww1Fra4ZgumV74/F6v6GVfOK
qFaCRUbkt4ee/w1uBhY23ATvTK42vxz1GyrbXJsaLjWDmZnVXbeS37Bp70TY
3MVmuMAyX3Vq8DecDg/yinZvhtCq0KWjzH+gpuuqRwHhb4avGMlA9Q947sqI
sCDiKSeVnN1z/A/E7WxbvXWuGfpGDyWTrv0BV5heMzjVDAsp453iT/+AX3AR
3WObZmA9epWZp+MPWDvb3ku2bAaZLXx7mZf/wDvlcvIuQl94l+f9W/QvvDOa
ehZs0gw+qgND393/wu2Y09bqukQ+WLUr8tjX4ChPYGCfFJGP990/HmmuAdLz
vo7f3gw8l10VHtitAZ/03TEtXkL/yeT4yy/WQGtzhfhRJkLP2tWLBofWoYj7
rWvYZBO0Bd5/usd3HUIi8oWMhppgkqLwjZS2DlrTGtUKX5pAJMPKhGd2HT74
lh/xbm2CnVbzwcx8/2A11sV9tq4JzDnuvPmt8w8GfLVGc6uaIDSoRGYo4h+E
ZNAHcL5qAqPt+m9Zi/+BnZF54siLJthS3mOp+fUffK3EAd7nTdBifXbuFMMG
fJW5KFrwpAkiVhZCwxQ3IGtzrVZZRhMcTrgu/tpsAxqVGEW105qAU5Oj9Lv/
Blj+9H2tk9IE3T2pZqyPNqBm/vRSfWITPPBSnt7RsAFeBuoFg0S/WXCV3zg1
uwGORQ9fRMU1wVZrGXZ9VjoUv6rz9tuDJnDLuXCiX5QOXftl8noIbl8uyr5I
ocMeehvjAGK9qsGfH4z6dEim2Dr0EOdFxe/TTbGmQ+mknLYZwt782N0wNTc6
LCHpm7cR/pjt+PCx7joddjkbvbuc3gQvbwpI2zygw+GFkxNrmU3A3WN/cf4p
HV6lMt2zI/rfW+ppxa1yOlR6ogtZ+UT/X5plEe6gw+TCipt9r5tA8/0Oi4Jh
Ogzbq970920TJHAGZRxYokP7mlkf0cYmWD5VO/NlMz2WTOpP7etqAqsC1j0X
Regx6QufnycxP0r/md9mJNPjwCZNp8KpJhA8nNyVvJ8e2fb8WN283ASX04ZE
1azoMW5/2MkbjM3QPyPvWudKjy7D+SUSRP1o61wsOXGNHvvqj4vMyTRDangJ
w3wMPW6UrTkvEPPDXkn/oVAZPc64S+rk2zdD9eWIyfw2ehReeNvp59MMEs09
GgeG6PHKx6MOUeHNMOJ0ts2DhQFNnV+V1b5thv1vngsybmdAoe7UvtnPzfCE
+YdDsioDXpx6nnN9qRkcs6+v11oyYIkM4/ZF9RZo+NVgfMKFAQecfpAGj7WA
3AGOhLkgBuSgN8k08muBqZFUVaEnDOjU1ar5oroF3CTKT3ksMuAL1yHpvY6t
0H6RPm8T8yZsFTpnkR3bCqrVRqtJQptQnWPl4sv3rbBg9+l+LW7C5xdKLtbL
tIH3w1/vBaM34aaDx7bv3WiDXqo2R37mJkylL1iT12qHHVo3bfaXbMIG8/OP
Pvi1w/Jnrp/u3zbhRuv2IIeldgjkV5OpVWbEcNmze9tZOuHCRqgN/T5G7GQ7
+kHaqhNOTg3eh+OMyBdSx5vwrBOgPGq9Ipj4Xhb6d1LhAzDaz30s7mPEE3ve
urcNfoBlAwP2n1RGDJL0tJrk6IJJtfT9FDombFNIvsKBXdBCf7jwhRITcs8a
7Lua3QXR2S/uPb3OhA+SbrwvCeqG4Cimd2NxTHijmyGM43U3ePnbLUvlMiHP
piWR83PdYGHMfu5RLxOmLaae2urQA8KzbjpJisy49f0T4VGbXniygzR/r4cZ
Je+73pj2/ggJordkm6aY8bLdMcXO8o9wh3nAlvkfM2Y/WysIYvgErp/Dm0IU
WPCx3ld1kbhPoBZEe3zlKgsq7uxrHqz+DOW1uRbu8ptxr8nSvdQdX6HzqGK5
2ZUteKXm9s5ijSEoEVlklInegqL539cUbYcgdaL8yErmFpTd81cxI2QIXAJN
x9NatuBPS2m7kK4h2JR5kZMmxIo0yYTodo9h2PXj9fnbpaxY/VWnlCN7BMQq
rr20bmNFsRdnPLRaR4DxtuGa8hAr6g7IOGr9GIEuwS8x3SxbseWBR0Sezihc
wLVKcauteOp+zRJ/1yg8itbjKV/ainVrRat/Z8cg9MRW+8gtbHjl/U66I5zj
4Cbd++y0KBuGP9utf1R9HPa8cdRl0WdD2r/wPWd9x6Fn8K6LRRwbqmff+893
ZRxYVDur59TZsb73dCczdQLmVhJZawzYsUymJzmZeRJ635+2jLdhR57JZtF6
qUl4bLlI1Q5hxy97N+hHTkyC9lU+/ntd7Ch/4qyOSO0kXGyzdZP25MD/ymy9
eW9MwYSa5uNHtznwUapr74ukKTj5gOPj9occ+HL3fe26gikwsXkPvA0c2MLV
4e08MAVyU3I8TCLb8IH+CesHatOQdpDO6AZlG35vv+IktH8aeAu+BK0bbMOH
92fPiB2fBga/iImlS9vwJHf1Wk7gNAxuWiybaNyGXvbJcR/eToOlU+vc2W/b
UFekx9mhfRraWp5If1/chmbdC9uuDUzDt6b/GmgcnPjscLiw4e9pSAoUHH4u
xImg+mBxlZkKFqTbf51kOJEcOhCoyUuF1mh78tgeTlxMa99noUKF0H2tJpkH
OPH+WLnrnj1U0Pu5y/H0EU7UqJEWLDhAhbLjXCkDDpw4Zdy9+6gNFXJE6zb1
RXPiIebjMdnBVDjbSRZ7kMKJK7HbG3XuUUHsRtpu82xOnPFx2+sVQ4W4MT/3
9nJOVBt4c786gwpmCaN3wus5kVrIf+xrDhW2GpllGn/gxB3+gRJp+VQI+U/x
U/04JybbWq0KV1BB1y7hx80Fwl/ONdWv76jwm2MTm95fTjzyMLXCuIEKxe8u
ytExc2Fjj1uFcysVPL0GsIqTC9+IDJtrfaACScbYNmg7F45fvPfsXS8VJvte
+2rJcaFz08zc+mcq2O+Jzi3R5kKuy39knw5RQZj2t87HgAv/3tsXyzdGhb5U
5+/q5lwoW5swfmCSCvcP9/1esOVCma8zl3ZSqWBKp8dbcJ4LS8MbvWdmqLC5
KF/V/RIXpq4qS7nMU6H23HZj5SAuNBkoKM3/QYVrfHfPTYdyodbaCf/qn1TQ
avx1NSeGC+9QQzLTlqiwHHAmyTGVCwt5S0IOrlDhpVJHkXQOcb74A4fWVSq4
DWi1D7/kwvCYgiTxP1RQiMqZfFTJhfGNAd4mf6kwBrwM9o1cWKTFf+jwGhUe
/QgWEenmwlirsmCVdSrYZM3u7B8g9CmuMqYSzG9pY540yYVTPsldof+oUPHu
wAGZRS7crN26a9MGFU6T1HYVrnHhEcn9hQ4EMycJKemwcKPfGevDLwj+bxOj
aBMXN57sqpT/TrDZxbltFiLcSO9/3mKN4OX+zwxDctwYf+jyHDMdDR4a1C5d
oHDjoDaFm55gLHoxtaLNjYnabd9miPUToklfbxpwo9vXfZfaCA6/F9KxzZwb
/xPe6HpMMHnJ7f1DW278VZv9zYPgj6etiuXPcxP9puGpSfCVtn05rzy5sYCn
6PwKEY/EblIKXOFG1ln5RyUEX9hGH2x1nxszs6OO7iCY8wrNazSFG9Vi+iKX
CT1KJvocL2Zz4wv6tPC3BNsefWf9t4Abc53aVcIJpqvKPXinnIhHdfT4GYKf
Ksbr8tRzY1Mp6ds+gg/GX6c86uTGssM29qoEL9C5yij3c6N0VqCzAsEJbhYC
b8a4cWBjzz0KwdqfdVn3z3NjRn7voYMED+1XXO/4zY3t/lv2+xMcWsCzYMPI
gyK72JZKCFbe/m9kgoMHL4UGzG8l/P8QOtXnJcSDXtcOvPUn2G+xu+mfNA9a
Rr6a+kvwdvu3FWGqPOhzzvhvMqHPu+acfP49PLhAFb1yjNDfUTP2ceZ+Hvy5
rbJKkZ4GrI+D4lQP86C8leBPUQYaFLI53Sm35kGPP8x6lE00sAwwDzQ4x4PU
ndd6HBhp8GdU273bnQefHIhoL2OiQcYRudP2ATx4z/WQBYWFBvoVnMeoITzY
pTpyr20zDahyf/X9InmwNcsxKoKVBtGx47sZknhwa9fodS82Guz416kclcmD
LHvMAq9z0KDfpVxM+AUPRl3yTSzmpMH1vidcT9/w4N7Rz5+5eWggsy+aUb2G
ByddFhke8tGgJe/yyts2Hjw1X9F+SJAGvLcOf+sb5sGeqUe8O8VoUDa/+8OZ
GR6MEf817yZJA3tb6drZZR7c7HZKqUuGBs/VV58xsfHi8H/eljIkGhxOH3kY
w8+LiS3L93jJNPi1pT1KVJIXV0O1snfsoIHu8GMfzZ28uBHNnMu8lwZjphFO
75EXI64nqJXto8G9Uj+bQwd5cULwOVOaAQ16ow+i42leVPj8+dJvMxq46C5t
jQ/jRT6VuNEtzjS4Kyx470IcLy4ZabkNutPg2bIWs146LzbLnvk06E2Dqfxg
uvmXvJi2M2z7uWAaOIuzLRl9Ifzt2rjn/ZDY/1fVS3yUF4+i1u3MTGL/J/P5
pRle3J1YWPD3ObE/OnE6k44P1cwKTJXLiP100oNr8nxo+TH6ru8XYv+Avm0P
hQ939fe+oA0T+0udPz/X5kOpX4nX71KJ/Z753ceP8GHinYksjTUaOA3vaSz0
48NG4JfbKzkD52vMCh3q+bAuYeGk16UZCE33VtHu5EP5P78W/1yZgaeBCblc
X/hwQ+iBRFroDEyoDzypmuHDlJ2K25RSZ8AxyylZkJcfT6h4xBs2zYDDrWsh
bWf50X+7ps9d6Vk4a5BnsYNOAN9nh2SuDsyCycVPBt9ZBdBkdn1q3/QsqCcx
7AnjE8Cc4OFK/6VZYKBaiw4pCeC2Tf7CmexzkBXJNBFuKYAS/0oaqnXmIKKE
/HnnaQFcNs6o0jaaA5/vti3DrgLoduNse/yxOThAKcrfFSyAds+THg64zMFY
r73/aK4AhlpKS4fGzUHb+j2XqNcCeFXL1bsmfQ6K5V7b7nkngNfGv93ufDYH
twK2YnSfANJ92uRoWTkHsiKlm7XpBDHrllvX8NAccOiP/hlnFcTSx8qjftNz
sOzOMXufTxBvRHJkfPgxBw3VDl0TSoJo0y68s51+Hs6f40qJtRTE93feMDeJ
zcPhCJ2IvacFUWt6pPSU7DzsfO10bcpVEBmtnbmKlOeBmaXqrG6wIH4+EtoR
smse5tSmLabDCHsVK7UbOvPw0ZrXMC5eEIf1zZR36M1DTq6rMjVXEAsPPL34
7uA83O+JF41/LYgceve+8JvNQ8Dau234ThArjQ06JS3m4bTsDD2tRRDNnZLi
hqzmweiwwK/4PkF8Pm/sdtR2Hsj+ehM4JIh4zCTJz34eBDPcP9Oogti3ffWy
6Zl5oGtOaklYEsTx+uDBnnPzMPWjtnIfnRAeiRJ+znZ+Hj4Iz+fPsArhf/MW
lctO81C6X/hxIp8Q7v4m9CfGZR4y3PQf6EkIYYNrwf5B13m4G+95e1ZJCJlG
yi5/vTAPnlUP/ZM0hbDngG7QPbd5sJ5scNmPQjisk600RTByLtrOmQihc0DV
uRWCFfaIHk62FEI1nzqmNwRznjXCA6eFcO3f0z9yBK+GeavPuwqhm3ZWjCFx
/tCrdJkUXyG8cy7noBBhv2mgmV8/WAjn0el5qvM8FDItbV4IE8K5ez+Vuol4
klQl/qbEC2GW0/Mj5Q7zEGx1cFY/QwgZLkklWJ6dB5dgv+8LuUJYKiwb9OTU
PLQJ9dtOFAuhUyz+N3ByHlRf7f38tYo4P/D59p4T8xBj+tiiq0kIi0uvUe4e
n4df44xdDd1C2Gmsa7Z2dB6OX3c+VDkghOd1fm2oHZmHMsG25pcTQig0xSIg
Q+T32sEHNal/hDCoLXbZjMj/8NiybiyjMFrnYGD43nk4cM2m4g6HMAq8Dv96
b/c8bHkpWewlJYzI35zRpzIPcfyF2UYmwhj86037O755WCngkdK1EEYlrskV
yrZ5sDH2T9ewF8Zt6htKHpvnQTxIN1HMSxg/P5lIM/0zB7nDbXd/JQvj+QTB
qdqvc8B+hcxEzRJGiUn5hIKeOfDkjbvx/YUw1hXs/3uxdQ40DW0DW94Lo4zI
9Tjv8jl4lzd9IWNaGAPldk8+T5gDaYNDU/E/hfFdw/XNpyLnIPR7oUP4ujDG
Fovl/bw5Bwe5A+z8uLZjv8qi/HvPOfjoz3zEdM92XBKXp/EYzwFNT1p99e52
Yp5K0H0h5gf/l5OrRxRE8HrQJV55E2L+kHQP8aiL4PS7eIYWmIWC6+KZH7VF
MK79g9FlzVkwkhs5aHdEBLeX2zyhl5yFQG+nR65+IiiZ3fTsy+oMDLJ7Gdyu
E8FC/R/qiXkzoHTm2EOjDhG00R8OuJk1A/7FOxa2fhbB4ybiyREpM8Bpu5Ic
SxPBGEuVJ6t3Z0DvWdDsI25R7LIs8jvkRMxTvTtx5adF0Z3rifgNpRlYjHee
vuoqitbf1D9FSc8ATBvr7vMRRfb6BLlakRn4HM021XhHFCs/ybE/3jYDrN9i
tPvyRdGAjc9Ye4UGx8ne95NKRTHGZKA99AcNsm5ajNvWiOL72aNDf2g00FES
iB7pE8UNybtfThL/Dx7+qSPza6IYfNT61uYOGpS3XN31ilkMr3MWLyc104BF
7FSEH6cYyt2KWDCvJ+4HdZI716XF8D8bMtPetzSYEdgU/k5FDLeX+kZ4EP9H
ey6Mfb+5Swyn5H8mN76mQTdXzj3Wg2L4ZXSpcy6fBmKOdwfbLcTw2sUNzcr/
aHCh1EUjxl4MjW8cTit4RgPGU6RvAl5iaHopq505iwbmRezqX6+I4UL41mqX
DBqkM82Hpt8Ww5qimww/0miwK+8lWTZZDNesbJNck2lgavrwT2WWGF6d+Xme
nEiD0zO36izyxXDf7j9LovE0ILyMmikVw9J6OKT+gAZhJGvrW7Vi6LGg4uUW
Q5zftk9KpEMM2Tk7nFqjafDKTXnm1WcxdK7pUj0cRYMmNr6Sg6Ni+MDiYf3P
CBoM5P27PjorhjMmBgoV4TT4YTplfGVVDGFzoVlWGA2YZ7t4eDaJY/eD4J3/
3aOBcGTFt1x2cfTQPV/fdZcGairZOXqC4nj0YFwuH8EH2qMu9UuJY0Jid6Dv
HRpYuwdoe6mI45bJV83zoTRwZz/LxLpbHKvCXyjeJDjkxcHOx3riOBcrTVIl
OPGQZvKeQ+K4ebPvmfnbNMibFTvXZSWOsoc3n6gn+F3kZhWXs+KYGm31OJ/g
PpXFZTp3Yv/+9cbnBFPbv75L8hfHpdZ3J14T/M+9PowcIo69gmNDnQTzcBRY
NEWI48/zqZUrBCvkJ4mdThRHJZUNCWXC/t7DIVMrj8XR77YDOhN8dO5CUXSe
OD6RMzv0guArqmBQ/V4c89eY/hoS8d3vUOC0ahNH/4MGDCkEP/Hg7p/7KI4V
94XrZgjuyB93F5sRxxBjV+NIQp/Rw527SpbF8aywhf8ngoP8B+hy6CRw/WW/
5HZC31DDrvFFJgm82s2pdZzg+wINLbpbJfB9tfx/oQSnTJYXhHFKYKZ6x5lc
grPfFMR95JPAtUZ902qCC+88uSy1XQJpjwJsagkut0q295CQQDaVbdeKCa6T
j9pfLiuBwxqhufcJ7lwJUWBWlkDTPwf6LAnub/RnP0qWQKWcV0v0BI8lui2m
aUrgjy5zpgeEv3NOZz5Na0ngadvlP8wEr+46XqmJEsT93SrHloiXYfPBxzf0
JXBrmGNnFKEX+2cIbTeRwKHARO10Qm/BZzsuCJlJYL+ow5s7t2ggFaBo5mgp
gfmhp7iMb9KAZCSm+dKGsLfj+PahGzTYKcgjvH5KAnfPOueaEPdNnGLZMHKU
wKxPComh12hwsHRtNM5VAjnGXr2NCSLmx90fTUMXJTDdu2vdJZDoH+uJFyRf
CRQ6XaHFHkADV4WvsQGBEnjlZon+ZV+in1Y7/euuS2BAGMPYf140CG6qO8l5
WwKNnlBHMi8S/ZVUtu9kmARurBrxnnSjQZxzvtyzaAkUCMg53Efcl9N3Z239
FSeBf/6edmdzJPrtc0Rf+CMJbNFWHfzvJPE+GUrbCHoigVPesvvOWNNAbzpf
0eO5BOa05U33HSPmy+8PV81eSSCz+bDzsjHRXwwjOftKJfA+bX48/QANzrD+
7FJ/K4GPhxw30QENFoT55PgaJTBhF3vJuDoNdkvLmTG3SeDHv9eknIj3QrDy
rsCVDxIocZh9MEWWBtt0TnR86ZdAl+G/8jwCNFC1S/NLnyPqh13JR3SZeK85
5mdE/5TAHt/FFJZZKrx1r24JXpXAgSWqe9IoFUyvDYudY5BEhyNPWZ53UiEu
dNHIgkUSa9q2WMrVU2EgapO3PpskJozznNQvJ963j2Qb5fklsUs6f+pcFhWK
cnb+ENwuic7fBeTPJFLhT4HhdlYJSbyvyB3zN4wKYe9cLs4oSqL2iEvmpktU
eDb8QuDlXkn01jpZor+beL9OV+3L1JNE3/6cw1yKVNi12HnhgaEkTqfNC3kL
UaGBYbHa15xYP8b1dHl1GsaldzprOUpiwZPQ8pmiaSCRDGOVXSUxJa5g0Dpj
Gnx2WFeKXJTEibsrn45HTgOjfiDnRoAk7lxfKGM5Pw1S56tKayMkMW0lflWL
expcPTpHimMkkQs2DmqsTUGR3xDb0wRJbOz6LPx2fAr23WE4czdDEu0OH75/
+80UnH5msOVQsSS6ihdnLVhOQRq148THr5L4lxfGX12bBCMhhyrKMBHvoHhu
2KlJ+GX4WypyQhIDFWGcCpNgmi09s/+HJNIzvXM4vDEBa6cCrr1klkI22p7b
3QETYNMnmRVBkULf+ZZAP+tx4H/nM6N3RwrV9BZvWH8dgZq5LebpEVIYQZnv
y3k5Ah6ij17/jpFCeO673nVnBOoDm68VpkphlmrYTK3GCPhoinGJFUmh8DXR
iyFhw9Cd26j5e0AK+ZfMLO7sHIKoeOHrBerSaP9v40Sb3ldQezzX+WOXNL40
OhCjuNQPH/JqJHbslcYSw0Fnnmf9wFXnWlNqKI03k3caZW3rh7jFcqaak9Lo
PGYdeXDiMyQfsY3oDZVGxy5OmnLJR9CyVfvGHyGNzSzKolXeH6H//CbVEzHS
2Mu/8VtR/SOIXPuv89tDaZwml1imveyD9Ly/3JOF0rjRcPe+WUUvPNmSmvy7
XxqjmFvYT6x1wwE+T6r2kDT+GrPaOtPUDeMSB7SvjUvjnOA90xsJ3SC3e2aA
YUEaH5aegjc7uuH5eR0JNiYZLLF9qepytQtMvDgvHWaVwTNH40Lkj3YB9erY
+/vbZPBv174js/JdQIqPOMcnLIPG4Tp5UR8/QH7twFMxNRk8ESvtL4If4Ehn
4crpHTJ4rI8hdKvoB1jov2WUtUcG+S9+evpnqRMoiySq/AEZhA/aUU3endC9
TqftaixD6HPpc55mJ3ht6QvPOyyDBxsdasJ+d0CxxFUVygkZvH/X4ZjMnQ6w
IJlf87aXwQPBdkOfzDpgaZds5+tzMvgiRbbfR6QDdh5p99TykMHsI5Gx1mXt
UHZVtHj/TRm0tfhdumdLOyS8ZzdRviuDQorShkZjbeDD9O87d6QMao9fEPz6
rg3IkYNbRxJksN0l3DjgWhtwdHU8bn4og8u2D2r9T7XBDG/1rpcZMjhiKlUy
vq8NnqU+OhecK4Nzi01My6xtEDoU/dupQAZNpSgZET9awUEmOPpIsQyqbe1X
DfzSCnrOnrK7ygg9thSHlda0gkTe6QqxKhlk+yGhs+9FK/ybNzNnrpXBtOf1
CezJrTCgsW9ytlEGJ7NzB/hDWyGpQpLnbZcMdtyU/V53rhX8NrieP/kog18U
pTtsLVrBYj8DRHyVwb0cWhy8Bq2gfmex13tIBm98Go+d2N0KnK0jrrbjMhio
GryvjdQKcxw9dPupRPxcrT/eSrZC29HaBKV5GRyvDvIoFmiF3IRXJO5fMshp
MuvzjKMV7vZn1fxelUGNt9QHscytcF4sznp4XQb9Vv1kL2y0wIGzt+aaGGSx
K6vjitLvFpB66nOrkEUW81inxpp+tgAd1UE4iU0WlWJpubrzLTCoYll4nUsW
zVVf8N6itUDlJX0DJ35ZLOuTOx8z1QIprzUHDm+XRZZfP4fsJ1og4Les104J
gr+2142NtcDxvfybxWRl8Y76FrPtBO+4wZzOpCSLfed53/0ZbQHu+mWNWVVZ
5Of6aX6F+L6webK5V0MWUxMUNOLHW6DD9NOpyt2y2Ci/ch4nWyDvfuNS1l5Z
3OdcNOcz3QJhvW/Cw/VkMYb3VrfSTAs4Cz6T9DaUxUG7bkkbwn+Dk0lvbExl
kfTt6c8/iy0gk3H3kJ65LB4U43diWmkBhrGAUcXjsshWk5N16W8LDMm7XOay
lcX9u6u/7KJrhaoLJ7b9PiWLMlxM+82YWiG1wDh7yEEWyRMfpF6xtoL1LqWu
Ag9Z3CuhcGMPfyvsvCLslOgti89im6MPibQCbzXr+rUAWQz5mkmJlGqFDwY0
hcMhstia4xfkqdYKRsfzgmfiZZH3mfXyT+NWkEtJ5e9NkUXj1oWV+2atwDgY
kVfxiIjvX+CYqFUrvHN0/xz2XBa9yQH/qER9pT+38/DKl0Wd/bXMoq6tEDR7
iNHmlSyKxOvnSHm2wi5fVbLiW1lcWTdjiLzSCoHfM+mu1MiiCXtIssWNVqg0
Fuhqa5RFsS2Rho1E/f57Ff5YrF0W3yq35g+EtwKK0Xl5dsviruz0BxH3WyHk
ro9ezSdZpKa3DXTEtULd4hQ37zdZ3F376cHDpFZgtrMbdRyRRT1j23HqQyK+
xq5XbyZlsfZXjcjr9FYIoxjc2jIri8qk+JTFDKKeH5Zb2C7KooZ0G/VhZitw
MKvJvliRRb5Tk++fZ7WCmWfW0r81gouerPE+aYXYfoEGMwY5PJS6J+Mj8b33
QERCJoscpu2N7J8k9vMX0Dn9YpPD8s9eDHqPifwI+e4y4JZD+8mxxEHCfsrN
aZYkATmMrsYDbwj/BmbtPk+LyCFnS0h/fWIriFl3P9OWksOf2R7HGR+0wuka
g8uR8nI4xFv00S2yFTJJFcbfSXL4V72/9Deh11iCmjBFXQ5FRs5HZF8n8kf/
hBqySw7NuVfZL/i3gssFwYpeHTl8ecNVXt+jFfL6IsLl9ORwn/LSvKoD0d9A
fzLAUA4XHAzzpE+0AjnXl9RiKocP8nI6xA61ghcvdW37UTnkluFZ2Y6tUHzN
vt3dSg6jKu1+8qu3wvJUd1r1STlM4TxWvVWayO/bCt1zTnJIUkjP66En8itP
3vbajVjv5bP+iOiHfzFPvjN7yeH81lY764EWCDkfGZwbJIcy4XnjN4paoO4D
vfnaDTncufnfh9mHLcCs7Sd5+I4c3j5/9pj2LaLftp2q+REjh0q0vCIv8xZo
u9wTuz9RDoNet3RZ72wBjjHDc/Gpcthfe4dVSLgFYkvJjHty5FDtCNMW6cFm
eHiGwSC4Ug6PJp81OGjdDIOtfvzd7wn9w7xOzGo0g8RO2oR0oxwaRHKynedo
hiesvXcau+RQwGhZ61t1E+S9ym7mmJRDOw3D9DXeJpgTFU45PSOHtX5XeNwn
G4F8N8q16IcchpQ/yK8qbYTik/5bj6/JYd7nsRUO60aoZDI+lMYlj7Ff0tYL
7zWAzrMvZ+P45XFI4+3L7VYNUGHiGhC+XR4Nbx069Fi6Acqjw7Muy8ojl66O
w9byengj1PHbco88DvRKdNYN1EGRyrGnHGfk8YHqxp5r6zXwzNJu43qhPJa4
+JiyZL0FhdVZXv/X8vit5+uypcBbyEm5puRRLo9sWkcKdcMr4en3R5Yn6+Tx
/aZqDSGvCshyGflv92d5dHjw9UfS3jJIv+pk/WNDHv8+bHYp/lIMYhKr7lOM
Cni5H4Jph4shrebuze9bFDDosxSttO4VpLLk5rfzKOBenr8ZJ4qKIDlmhjFX
XgGzVIzwZmIhxGVfenn2iAIaLhoZaqk9hwCPUPo6CwV0b/9UESb/DGx3PTSX
tVHAt0/UZB9K54BUc92PSQcFYj7uPRUvnw2FMwLq7oEKeD5Llv/f2ccQ95oU
0nFdAdf/cAqduZoB/tf2davdVsAK6fd2h/Y8Al3OC16L0QpoYrK9pKb3IbRp
VBX5ZytgjemJDY2IeChc62b4kquAHp7h9/fwx8GD+smjWoUKOPxJiHHpv1iw
seL6uVaugGprum/ql6NBV0Juv/07BXz/+MvBFddIkJzWelBdr4AfntzZrLYa
BlOBDhohHxSQv2Rxk/SpUGjbf/nmaB/hb+6adeSeW1DAFtVz4KsCrp2j/Dih
GgKxfZnST4cU0JQ9sqZ3bzD4pb/xZplQQJs0rYiwD0Fg49RW60xTwH0LI8MD
tpdhL3mYp2VBAe2W2GxFxfyAsYa1OOKvAh7POTCrauwJU2HijHN0ijhoH670
0PECtB7bYXGEWRF/jf/Tnnp+HvJFjJ8UblVEy3bBopFTZyF23O4XF5ciWjn5
PFLktAO/fK8D3vyKWFHzo5eqfxxO+N+J692uiM/rL1V3njEDHUwd05RURDeK
ndpCkwFIbHm5I1FOEV8YUbZ77dkLjN31t1aVFfFEZJu31nUyTKb0956gKKLO
3rfvIqJFoeXcvEzFTkXcYf9KPt3/n24+idFXREcRE1xiud0GMnVjlwTrr+5T
xNAsv2zue2u6vlUqfN8NFLFpKWvnmQgRsL6j54iminhLxE4onZ8MOmZWrx+b
KyJsmgGpDB2QEHJj2mRFsGwmE5O9AWwaCbZ0OKmIsnQj6neFzGAiNz67/owi
fncK4zs/YQkt3rlLck6K2Kpu46gXdxLydar177opYuVXpuwOzrMQw9QbP31J
EcW+nHZwNjgPPh1T4yb+iji851LmZqorWCeua+YFKaLW25kDZX8ugs5p7lD2
EEX8plBtV1bhBeKK8h897ihi8KGM2cgCX5goN/OjxCqin2dLNGoGQctNx4bY
REXUvG6yqb/+OrwwDeT/laqIBYKxgi/rboDPYFZJSY4iCtvEzCr33AbTWyuL
//II+/yPhJp+3QFZpYNqhkWKyNzhcyJAJQw++i7mfKpURMbc2bbrI1Gwi31f
8mqXIi4bScS/zIkDzldxffhJEdu/GAutcCTAlPUU170BRfTNKKpkCU6EpCfR
YUKTiqh2Rmxb5LUU+KM9eEVrTRHPcs/XrnllQPcwpTSEXgmVr49naJs8hv/u
3P7VwqyEfNNWdMdlM+FkD8ndlksJx1tIw1ETWfDW9Yp9kJwSboq5Hb0tJgeC
kwX3VZkp4Um3/4rOOhaANbhdZT6uhGGCT5yu7CgEynh12WFbJRTUV//O9KYQ
RshO6t8dlfCY+Johe9VL2N/0WpruihL+M3zT3N71CphXjjLrZSvhREAZZ/bG
G4i0iGyt/62EefuLCn1WqyFTfd301T8lNNyfpZOp8Q5KOd07MjYp49NlQRkv
13cw1mbadYVdGZXiKg00P74DLX22TxRJZRQlV7JUZb8HM+kga3E5Zfx6m+7O
10/v4Tz9zBc2ZWU8dtSzTHtLDcS8bR2Y3KGM7x8K1ha71MCUZvhImpEySrj5
Z0tL1sI/nr/nwg8p4yelasqCaS3wLrqOBxxVxqYh1fBR/1qAfJOpYyeVMYHO
5YpGay0kyLHObfFUxm8CceO7neogjzHw4oqPMs7NKSr8Dq+D9yPTC2OXlbGT
9lGys6AOZtKbf1bfVMaAV2XnSn7VwX6Be799E5VR3/Qmo7l3PVgvrQaeS1XG
lsSb99Lu14NHj/Oa2WNlHGxQvrmaVw8p0UYbyv8pIzRcePFlpB4K3UuDhQqV
0ewxs/TptXqoP6jAwPJaGV+buyUu8TbAAstmppEqZVQ4cibyyP4GYJ7wD+2s
VUa/b96efCcaQKRukuVtkzLKdAXwzbo3gGFwI2tStzL+lT/D8zGuAU7a74q4
/YnQ/5G7MfVpA3jp5LB7DyjjS/njX/lKGyB9NZTz8IQyvnAOCi//1ADFH5dj
tGnKeIjtZtWuiQZoKT7Po7igjLcZqH69PxtgKPZjHP+SMrZ5nBZ4QNcIS54G
/Ix/lNFk5qusH1sjsB4pSfzxTxlFzjw4GCzQCBIqckLfN5Ew2PCPRbFkI+zc
mpDStpmE3O6VFD7lRjCdZhIpZyeh2ZQ6/VONRjjb6JuWw01CNaEQMVftRvDP
HheLFyChad9/jI56jRBx0zIjRISE+YGWZilGjZB5pl7SU5KEY2cKq9kPN0Ip
aGbZyZEw3thevfZoI3SIZsscVCahtNzx51XHG2HsL+/T3WQSnrZsNmC0aYTf
X27Jy2mS0HnnlsNJJxvBazBg9KoWCV/4PrPPsG+EmRG3R31AwuErAmkjpxrh
/ORpWxV9Ej7qt//rcLoRhmgWArdNSNh/UfGxCsE2C0Y9A0dImNNsPKdHrO/9
pRO9w5KEH68mOf1n1wiHf5MPRtiQ0EvdrcLdthGa1mVYxk6RMLHa6v194r6i
xyBUq+1IQs3HQ5e3WxL3F2b26w9cSaiyrMnBZ/5//ei1aRdJ2MM21XnLtBEK
ti0t6/mS8GVQxm4vw0ZQ4J0uSgkkYUV7//TYPkIfwW8ei9dJWJWXljdG6Jkg
WT/xOIyEIoHhx/5TbQROubLM39Ek7OP8cC1EvhHClF7Ym8eT8IksSZ9FohGu
asR/pMsg4b2M6EhtzkZw0HdsOPWahNoDPY/2zzXAoPGJkDflJNzMGWZ0ZbwB
rA8f0t32jlifrfgsZ6ABTK00S6paCP8rYlUYWxtAw4XpqegQCcuflvV8fNYA
ee6/z/iOkzB15GVhVUYDyHnNirZTSej9uNdmKqkBMvyGv8gskDCtLKzbLqYB
hK/0xQctkdAw+7eyYlgDxF1vNu/9Q8LHX3yiLG42AMett+wkOhXsUfUhUYMa
4O7dl803mVTwwpkciV9+DcAQmX37K6sK7vZivhV0qQGCYpL3aXCqoCyD6eVI
twZYjo9cD+NTQY2wvSSKcwN4ptwoGxFWwT9bfn245NAA0+m+vloSKii2IZt1
4kwDnM1yocTKquB/2V7ji/YNMJBjNzutpIIeN/KHDO0a4Hie+fN9ZBXUJVNG
z55sgA+F+o7JmipIvi2Dhwk2eb1H8oeWCsal7j3IS6yvK1P5ZoQqGFu7olxN
nKdbJZmcoa+Cqpt/jlsT9t7U8FmumqjgrNSgL43wh9y4hcvMTAX5WbEr2KUB
clvX23IsVTBxJXNc6mIDyHz4cXfDRgXbwt8nfvUl+r13/IDVaRV0Yi+pKb7a
AIJfvtAVOKqgXYPyrtLQBoj91l7JfEEF66/Gls/fbwC2kfcB9p4q2M5hweyY
2gChE693lPiq4GYu8wbJ5w1AR3u+wH5FBT3LrDzV3jRA4HxanmOwCsr9V6ac
2NAA7qu3ZfjCVbDqbPBk0jThj2aCLPd9FXR3j52m/iX0uvRUblu8CrIaSwve
29YID/JL5NlSVHCErSUwUKYRTGgNClseEf5onNzUoNUI9AqfFJmfqKB6rEWk
F9HfpQ6TSpueq+BtP51voRcaQW6QRWW9SAWPBPY60Wc2wjdhQdU/b1TQSpwW
4FPdCHFWCmorlSrYrJXS6TzYCAxdRpQfDSoo+r00fkaiCcrYT6jPtaogw6uH
FncONIGniYsG7YMKJnQ2Lpe5NMFg7T3N8X4VvBrFsGmttAni6VJ2jnxXQe6c
3Md8o01gujd31/cxon6+vQz/Srxnykta9nyZU8Eoo+Bt1y80w6Wf/Voff6rg
tP7SZcfUZlAg07R7VlUw0/9L6pbOZkh8vlW3nUEVm5RcU5P3tMDhie3QwqKK
WlsmD0ZcIt5n0iRsZFNFysxFa5P/WsAn1VTvPb8qrh/5ILZDhng/R0cavFZS
xdR3WmWMpDZgaUszLFJTxUI+huZkrzao2pxvVLBDFdt8Zuq2VrQBcZs3ea6r
irt3qKqGmbfDFt9tR9KOqiJPgfrcelwHvHspbpZipYphOU+571E7IGBOzTzx
pCoe5bBOW9zXCRNOZsdizquigP8XI7vlTqixibG6HaiKtbMvZV6Vf4DLiY+t
Q66rIqfSFpnBmQ9A7n154votVZSr7/m+IN4F6Ye6bS9HqSLOZlk23u2CK8hz
2j1TFS2tHjQyOXbDDrl4Z8sWVTyj3bPQoN8LQzBmuadTFUlDn+6r3OqFiBMa
+0V7VbE8Le27aW0vjEV0iY5/U8X5xpviz/b3QdxP9h6fH6q4zB8r7276EX69
C90bJ6iGGn6PgpsDP0OxbQB3z3k1fGwzbcej/A1O+zZulFxQw9eeaZ3OAd+A
LZp/NsVTDTWTklzG6r+BQ01x49lANeSOv5Kw+8wg8Cr+CFqMVMPMl5c9K5K+
g8+yyyTXazXc3Hi1WXHTMKQ0qdg/oyfjyO9tio62o5DpLOB1hJGM7hG6q4dC
RiF3M33oMjMZhTSChmnPRqHcqPfFATYy3pRSW9BeGoX+psD1IX4yNrUsfZ66
NwbbmxtThUhkZEw6LeP+eBxkXF4WvlMl43r+QbW7NeNA2vKwzolCRp/sdD7N
0XHQMfaYeb2TjJoC3010pSfgZDOvztF9ZFwzExYdT5uA1OYzX8OOk/HwhYUY
/6BJeOJycJ5ygoyLA4PlggmTkLdFc9MXWzIOZ0fu1S6YhErjzcryZ8j4SLfH
m2FoEgaa8wNrL5DRo0hO44H2FIy5JEW5epDR2fGGzm7zKZjZEpLJdYmM1nUH
/tidn4I1Y8uWU35k/F73O5MUPQWiLX+F1oLJuC989OxQ/xTIuY6rZN0ko0Gj
x+u4mSlQZe3cZxJKxsYqEff29SnQNcl0SQon4/jDivhOsWkwoIZfhSgytl3+
O5aiOg2Hw3xjJu6TkdRSYjm3dxrsW4zKdiSQMYGPoZ5iOw3nXdXbvyaRUXjq
0IK0yzR4sIoMhzwkY7afcUKm3zRcM5nf3JVBRgvqNgWT+9OQ3hJv7f4fEf/6
js2uVdNQH8q+bfIFGZkSWnfvbJqGGb3b9acLyZjvr9Ge0zUNeyp81C1ek7Fj
5JtX8Og0nPafmWp/Q9gfMdSh0qYhVMPhkWE5GSv+pH/593Maev87xqZdTcan
jNrHVDdR4Y9Ta03xezJKOU3vMmWlgqTM/suqdWRcemhDE+aigkeq+oRkMxlP
G7cvfRClQrx1burDVjJe76r0rZCmQiWv1DG+DjKmLwjy2ylSYUsk17vNPWQs
1T6i16ZBBbLxPb+QPjIWMyWKp+2mwnEmepW1T0T9sC5XK++lwtX3AaO+/WRc
fczy+fI+Kjy5upA8P0DGlqT98vf0qdCyx9nM5TsZjzL+dbE1psKPpe/Mo8Nk
/LKJzWLRlAq6Hp3eHyfIKOHHwuB7jAqOSoZKZtNknB9r2edwnAoRE1VDzTQy
3hp2lxA/QYWizJ2J++cI/ybcHHNsqfDFPv/Q2wUyhpUvfP1nRwW67XKMu36S
UU+i7Kj8aSrIfUorL1wi48G3LKlSZ6lw6AHfJaVVIn/k8MjFc1TwORIp/+QP
GWNWlumTHanwcCvToOg6GRMZ+JsEnKhQ0xgUl7hBxlwTplRPZypM3fxlwsVA
QcnP9DrZLlTYhm704YwUNH6y4fzGlQo710bfMLJQ0PtS4sSzC1Q4WWrrcW0L
BW82/wq84kaFmz49MqtbKcgkXTdHdqdCLvng10scFHxOkmRvJbhrpiaGxknB
/XA766AHFVafaRk58hC8/PpGMcFijkX/BvkoWDz36jLLRSroSyq9thak4Pit
qVMGBLt9e3yhW5iCywOfV7wIjk0WkjIVpeBVjd6JKILLLGM+14tTULXGpush
wUNcW6JBioIKT1zs/s8sHcH6ZTIUNLzgph5NsGrY6l91eQq+7FD9HUCwhYFn
UZ4iBX28OmxtCL7CMOUsR6Lg7qY8Jk2CM6tOiWeoUlBiy5ksVoKbAj/1CVEo
WGaUOzJA+M//s0GPfScFT825M1wjWKdA93fobgrO3X1LMSP43IWSAjptCl7j
k/eTJThMXvV84F4KHrt6DDcIfQpHs0V+AQXbz2vRfyf40yPRHnc9Ct4d4Fdq
IPifbfy9yQMUfMB4klRCsIwgO54xpCDf1PPLhQQf7L213G9MQa2DNTf///1J
lm7LPVMKvvo3sP5//de8VtN2HyHiuTTVskiwpV7RpUlzCs4ebn9PIvzJ53LT
T7CgoADru9IrBLMMywrpW1GwMuDj2WGCTxd+n/l5goLx42d0T/1f7+vJ7zJP
UtCz9VjdMsHcR47FmZ8i8n3nnNtzTypcEGN3pjtLwUYu+hcBl6hQN9ugXeBA
QbYOw7+OXlQQeRu8zd6JgsxXfrR4eVPBN0JrlM2VgiJaxlEZPlTosP1VUuFG
wa2vxEoWfIl6V84Pc71IwZCjZS8d/Klw/Y+TvZAXBZ8dq5tbD6DC52ZJ9SYf
Ckq7fqp5G0gFSvJXJn9/Cgbr6h3IDiL0do7/IhtIwfL640Gvr1FhZNeRF71B
FPwlcuvSfDAVtFm23Lh5nYIMyabyFjepEPexxkI9hIJ7GXXSx25TYSY7SGH4
FgWbWAd7Ht+lQvqBhU7dMAr6dqmdfRpFhRWe3KzZCAqq52Y+nY+hgtnoOf/U
aEIvN50bLvFUoA/5JPYnjoJCbEn6i6lUsDGPWXyWSEGvLt7TDI+J/pc42GCV
QsEB1tI8/WwqOFRXub9+RNTncO2EUz4V3kYF7HPIpGDd5fp2w1dEvdmr8/Fk
U9BSk6//ZCkVGteyKz1zKfg0/baUQi0VJNpO3Rd/QcHvNf3q35uoEPBQyKGj
gMjPoXq29g4qKGlFbiW9puAd1tnsQ1+J/t1i+L3/DVHPpjSvoWEqDHyme3Wv
nILm+YqQO0WFSH8fm8lqCoYby78YWabCQrHt88wWCkYWT7uO8dHA+BbfVfN2
Ci7ym06RxGiQeazTjO4DBe1//TH/T44Gxxb1Vu36iPo03UlntJsGJWpKhkJD
FPyts9T+w44GQbmrY9FLhP0P2dE+RTQ4MtWlqr5KzJfoqDcP39JASu6/gN4/
FFzbXulCa6JB82M7NiE6dZzTVt5NN0QD/uQajUxWdaT/Szo1tG0GCu9EhBSL
qyNTzZvrZ3xnYNRBQuKLsTqyb3+wbcuhWSjJ/O1yxVQdKbcvdqXZzELYUPcr
0SPqaNZfTlJ2ngXyyduGZy3U8cqzlFcKN2ch6BjVg2avjmMHuV4Glc4Cv17x
23VvddwdbD4zIzYH09cjWTL81LHZMyVJQ3kOKt+eN9e7rI68lXj5+K45OLdH
aDz0GuGv7O4GxSNzUEi+xsZ5Tx1vSzXu6guag5seVseLwtXROzeC3H5njngv
kTMsotSR//uwVVzsHKzLj2okP1DHpo9nXMJy5sBE3MhWKl0dw+Xfn5vpmAOd
ywWGiRnqaP2Cvjzh0xyo9vDvYMtSR03+eWe2oTngvjPOtpyjjhZtnDbHF+aA
cdj0t2uuOh5f/vpbYXUOlrWKx7/nqaMti0ZK7cYcfJkLqWp+qY7d5MLQQxzz
0GJEzdUtVsegEhcZbb55qMw0T3xVoo4aAn8dZ7fPQ8ZxCc+0CnV8eWfBJVVh
HmIL75zkrlJHqupOn0TV/1Vc5vFQvl0YlyQkW5IUlaR+0mbGrGbOIZVUQqio
aJOsCWkhS0IRikQpS0hCi0KFLDNkGVsIabGVGcNIVES9z/vn9/Nc97nPuc45
tyGCEBmRSVjZ//vx+eUesgicSktWeHL1cO6Y9Oh8EIGt6iq5r9V6WHA6c/E8
YxHsPB05ZVurR/w+OlldbSICdv2Pr431euhL3R23eZcINmrbvTNu1MPaVQ/V
LlqIQDOw4s3LZj0Mjl4zfsZaBMpd/+Wsb9XDWz/7X67bL4Jf136HqHbqIcsj
3eWdvQgGv9l7XvtA3Je/Iqz8iAi6DKsPin/Sw6QeiVGX4yKov7Pe1PeLHpJP
T5xrOSGC0ombFGGvHsohiT5xUgRPds9oHh7Qw3+D0ltaXUSQ9vCYfPs3PWx6
6P3cw00EcbPr/5gK9PCr7eJ71e4iCD1IGnwj1MOdjzerdnuI4Gzh7VaySA9X
F3yh5Z4SgbOiePnD73r4/N75hUxPERxwOZmrMa6HD0vJlZcJNuM2Jcb+1EPZ
D9U21wjGZbRQqUk9vJR/sd+CYL1zyaf9/+ihwt29ge+IeFrvJO3HZvTQVf/+
YSWCF65z33FCjITzk4rl5In7JcPaqN3iJLR0llStJfL9/cVAy2IOCSW/+c43
dhWBgJGuUDWXhDF+kRf9nUXQHTdvhiFDQiU/0tQZJxE0jJzmP5Yl4bZ1ZXKb
HEVQZtLVpiVPwmNru7bnHBURv2cMKxIVSZgr507jO4ggfTorT06ZhHJH7zkO
HhRBvI3CnUsqJPQYem6fbSuC8Ce+Yb9VSfhzk3Lehr0icDm21aFXnYRrjST+
hO4m/CjN3bl3OQnDyK4dtjsIP1QX0us1Sbhz3/0LE1uJ+uv7FAtWk3D6XvBo
MIuoX3vHXx0dEs5akJHrSxOBSuAzQbIuCRNa98+lkkQwRQqqvLKJqP+G1L7F
xLyW39HwOcgkofmara2h8iLol3p7cS6bhO4RtrdtpUQgdcYz/CmS8H0jJ35S
TATm5pw7c7aScMW3vJTk7yPwRcK5ItechJuMZ5sXNY2AmPsL+b/HSajnHrIs
mNhnrQ+HFmc5kVBc4697nf8ImJhIrbR0IaHIaP+jKa8RiNG0o2SeIvI/NrtO
0WEElr0XO2h2gah/SqvSkng/2Lgz+14MCcVsXhx+1jcMR3In8k1iSTg8vEZ7
XecwhKoll4zdJKHrjHP5w4ZhaBj/3rT1Dgn/xt0xfvxyGA49vPVrJIOoNygd
FscMg79SnzG8JuHYa12PChiGlIBIM34JCQezxfMXUYaBI9TfF1tGQp25H9+E
6g6DbHW4yzcuCUOtZnQLFw9D0oX1N6KbSLj9Qc2j4AkhFPef+/x5gIQ1c32d
cvKF8NftacSBQRLx/keFJecIwfDXILVTQEKhz3h2QYYQqqT3xbSISNi0znHz
ngQhNK2nGHInSaieH0uxCBCCUpHbsOE0Ce12K7w7dU4I1oYZiaV/SRj+L829
0EsIXXuUxwpnk9Fcoef2KychDJwdS8ueT8bSMJmse1ZCWCOus3u1Ahlv22XJ
TO8WgnPE4T/3lcjo6q9yKWiHEEbvNu25u4iMdpOv1ktsFoLeaikxNTUysm3v
q8wCIfg8gZz4pWR8srHMfxVTCFMVeRIxK8i4xeabfD9JCAY7vz6R1SKjOmll
u/9GIQS0qR+8ok3G34zfFux1QpAYjHwRvJaMqrF15/VWC2GrJ+fwv3VkfO+m
fe64lhCuTP2Z77eRjFIy7wtKVghBbr6Lo48+GXPDubkflgrBPD5NaYxKxsdu
cpiiJoTYZV2l7gwyzozVVoapCqE9S9FlyIDIx+t98nUVIajqbV/kBGTskm2l
lSgLwfZ1YGW/IRkvC9Z8l14ghLvGRR6HjckYninzn6+iEL7wREs+bSWjxNuL
bAkFIWjuXf3WdjsZL73bHPFETgjHvhzyfr+DjLWXxODCfCE8OBm/3MqMjGmz
8dhRWSEIxnj1TeZk/Lnou7jTPCHo+s05t2sPGbeX318RLiMEjzmsVbXWZJw8
EsOtkBbCsyjv5q37yOgydW9MheDxRTn+lbZkXOXo/uiSlBCoqX3/4UEythTb
fZ9L8HmdJe3F9mQ0en6FkzaXmK98y2D6ETKyVAdX7iH4n8HV9QXHyHjcgjlf
lWCjqvIuvRNk3K8n4TcqKYSQ3ZOhj0+S8dg2G5MPBFd3bCTpupKRR/u64j3B
MkecPme5k/HjnTcvegneOZQcscqTjD0fA55MExzl/Z6a5kVG+QcOpSuJ+M0z
cv0aZ8gYb2YUYUOwctjWmDtnyajmUFARS7CNwkUD1QtkPKUno9BFcELii8E4
f8K/aAuNNUQ9HzSH4xQDybjIwzPBj2AH/QPDMpfJ2GT06jyJ8EN9Xb78hTAy
PhteSb1OcJeWjN7QFTJa3/n9SESwlXLRmbooMu7pLsvPIvxVlJVPZF4no4aX
u5EY4X/DbMfXj2KJ/G8pB1kSHPGn+OOSeMLfn8qiuwSb/FggFplA9P/vJdke
gucMOWtO3yZj5j99WzWinxW95caud8n4a2/9fhOCA7pUT3QnE36WVVw7SbBB
i8eVnWlkjHzsd86P4MmaqkfF6WR8IJN9K4DggnL1Bt0HZNQOsmF7Euz10ns0
6SEZuf9iS3cTvPFpndL8HDJ6bZvlspjg4SxNff88MpJXl92qJ/LJTjm3d/gJ
GS9qhN4+QfCJhKZzB/PJWL4qt3aQqFcrZnUS7wUZ+UnGQWYE94RdLGUVkXGN
g+biW4Q/9wLavuS+ImOZ+PhIGeGvna/ubI0SMk5vMD9cS/RD1ePSqqg3ZDTQ
e9v0lOhvm2PXtr/lZCxuGbrrM0cINw5tcnbnkLEuYZWisoQQdtuER36qIuPK
xHGXCHEhyJp9zjOrIaPMD+6PTjEh1GyhNJfWEX4GJ47O/B2CUNa1H+sbiPm4
oJI7MT0EYuuYNPl3ZPyn53J3/+8hKNG6YRvQRkaG4Q3viokhOL+U7yd6T8YP
wrWWv8eGgKqMyfZdZByb7xA9KRqC8Xm3yhu7yZgR4x/OEQ7B09kjffCZjG3/
5t/dyx8C9z/Gkk96yHhhu/zKpwNDMCgYM435Ska9Nftannwcgoze7W5ifKI/
iakFezqH4EhXSvSpITKenP3gQkHrEHTXmLWaj5Lxx+Q2kxe1Q5BYnvGzbIyM
VUGbdMy4Q2Dzclp10wQZA/emp6a8GYKmrOyDilPEPkfuI7vmD8G1lFmBQdNk
7P67fWdvzhCYJuxL+/6XjC/fJYjmZQ4BJ0zyW/NsfXx1ZnTU69YQBAUclDaS
1MdEs8aQx9FDwPZ9vvaZlD7WaTrMJIQNQZHjkVM35utj7/A7o1NnhsDn0Msb
4gr6eHuDwMPObQj0bBRenFbSxz1Ou4xER4cgZ0vppOUifaQO//dunvkQpGqp
XVqwQh/nVke2/1w5BDEb8iuKVurjnBaPrmmVIQhk7BQ/pK2PRyKfsK9LD8Eh
84tBWWv1kW1e7ukwLAA1v94AFkUf5x2Y8jj3WADSYRfe9NL0UaLeSOfdPQH8
vq78L4ypj/PVRkufXRNA+4OtF1uQuN/oW4iYswBuvMv2O7FDH6v9Nqu/XSqA
oE+bi2XN9FEz/dl9lBLAKX73n6fm+ti1JngR8wcfzP7JXZi21seSRu3059V8
mLfW69x1B33UeEw9VODMh5Bg5pnXPvqYQno1QE4cBK9rrS8czurjn3OpHZ1+
g3AkwW1izgWivsTlX+Y4DALmJXubB+rjvjEFud9agzDdOdtr4Ko+diy8M+r0
8Bv4bKr3kE/RR/fX+ypL734Fxy8HTh6t1Uc1E/nsw0b94D03ZMeHen0Ufxun
KqPeD8HrH63b06iP2ily1iG/+uCu3+R3o1Z9dMzIr/z1qA9aVePPa37SR+tu
bq7Wgj4wsmiM6PlO5EvT8Bzr7gH1CsM8+8UUjOko+k+q7xPo8J1i3i+hIKqe
HqHc+gQ0hZjTuzUo+PJEGrdgxyewOvSJAispKK/x16H0xUe4OnX+jcY6ClK/
bc86F9UNv/WeN31ECob+UNvdZdMFkrYfnllvpiA/0Fh4XKkLlIPEb/K2ULDQ
TaX1WkMnbGg0319iSsGRqrwtFSad4Ogy3JNkRUFpzjaPNVs6oPW+9g87JwpW
KVpnDTq0g/Kn6DEpFwp2rtnAWL6yHaxUJ7+/cKPgTLbz1Z1f2+BdZN2ovBcF
Q+ZGJUZ5tEGLz6mRSn8K7rv0uGPmWisoPekcPhVIwbPnC/pW7GsFS4HRsPol
Coa1i/p3rmyF5kMLhb7hFCwWNnWVFL+Dpm2v+GtjKTiRNnhh7XQLKASv5Hfc
pOA1r+MOWQ0tYF4cOXg5gYKu4xIRpLQWaNxo/+3zXQoejqIY++xsgYbFEgOx
WRS8uX/vn9TcZpCzcuvHRxRcu0U7/lp4M5hFtfcN5xL3ifscCDnWDA3iD3u3
5VNwcCL9VtSyZuAN7fryp4SC6wPaRcLUJpDVLvycVUbBlgczE9KXm2Cnw/LP
1pUUrI2oNFp1sgnqW8c+Pn5LQbsr/7J3kQm9/IGPB+qI+jtPPLJeQui3c7ul
Gyi4Y+3TYYvZhL7k1oej7yjouLQ6jZrTCLK/xT4otFNw2457ktVBjbBTz7mr
pIOCn08Ub1q9vxHqMg06F32iIGnOL3Wc3wgyPRkdnC8UNLWyiRriN4DpEvkO
zz7iu+umFbveNkBtdE973SDht/tWjvLVBpCpNW0/O0RBQ3IP3cWN0Es8b1s1
QsGU1sK2fZYNcJWt3tYySsGBz7P82mgNUHM2tDXgBwWdZP/70bG8AaTyRe90
f1KQ0hLXbyvTACbD+951/qbg643nPlpO8ODt4bUtpL/EPC4/eSO4kQdSSXHN
X8So6Dz3aG9WKQ9M2mears2mYuB7MknzMQ/CFU40MSSpKMvOWz6QwoNq06bG
b1JU9HHWIQ3G8kDyMr0xbh4V6aciBlaE82Drm7QGQzkqJsHvjHB/HoROzmsY
UaCi1f2kdiVvHlSRfHh3FlDRfrNLQ4ELD7SuunosUaFiVtvavZ+O8eDSl6OK
d1SpaH5hYN3QIR70Uuzy1ZZQ0eD64kNt+3mA1yytb6tT8cSM9HCcNQ/u9W3/
tXg5FT/u2NSywpIHM3TDxERNKi6YfFTjtZsHB2JozMWrqLjx5sTZ4F08ePV1
w8eE1VQMYoSFbdnJA1XW6gBVHSpqnj+c/HwHD3xjNVYk6FJxMOCSWzXB7fyF
lYs2UHFG/GiaD6En4/zjtzZRkTn7+FgBEe9GvMTcRWQivz17VS4R940K/2TF
U6i4QiSoa7bggdnmH6YqdCpqL9/QftuKB7mJAuFNJhWbXOf/bdvLA9nRnqiF
bCpKCzznX7DjgfPWzo03kYpGbmeyg+x5oP2j2jtuCxVts27Mu+HEg5Dtb1SU
Taj4ZAVlQ4QbD/qSC4piTal496lvCuc0D1J2Zkzf2E3Fq1qtFe8J//+mJd1T
sqSipcK3zamXeHBwMhZvWFHxb8au/KtXeKCWGRxyfT/Rn38dGXdv8iDun71s
zFEqhpuMlH7L5cGY9d48eUcqJo8f3NSazwOLHDPzaCcq7mtaOT/tJQ/k9rPi
otwIf0bGpys5PHB9TKbInaIiuemsiXQtD+rm6HZcO03Fy4GdrkrEvIU/U1t6
zZeKqY5lT/d08OCrlFKp7Hmi3lfzuP7dPNhiL+0Q6UdFMbe1wbu/8CD9hZi4
bAAV5damzqno44G47O/7EUFUvL9b7ErDVx44HBFtmRdCxcQOpyPufB6UFn39
djWUig3OryTuDPFgqfynKzJXqDjrefW/XcM8uHC8be3VCGL+dK6KBY3woOt1
PU86iooJ/9k0rxPxgKbE8bgSQ8V7bvK2ZgTHO71WlI6lYofgYEo3oR8vfZYf
fpOYF4m+6hYinuXCbGupBCoeOiFUWCvkwVOX1F9ht6kY+egx7zORj0JFQuLc
u1RUDfriO0Tk664awwxLpqJX5M8cE6Keevewj5JpVFy/+cHasU88WMu9GBCa
TsU5kRKtvZ08uLrkzArJB1R83XjnwcJWHgx6ulVefkjF6PM3ay7ziH17e+z4
nBwqHhlpvbi+igcZGgfmXs4j/BlQXT+P2GcJnz0PJZ5SsW/rUodFL3hwpM50
R0g+FZedLHxj9ogHzJjDR3+9IOq9VRPdT+y3svXZC85FVKxTWDOUQczD8OLo
2I+vqNjoPb0+mpiXqk8Zj8xLiP3st/6S5MeD5PvFlZVvqHiqOy+jzp0HZ53e
faBUUFE58NdWVQce/DcmJqteTexjXEb/XyD6V7hIK6aGipS826qx6wn/L6w3
mF1PxdL7BbfoS3kQOeeAK7+J2J+a4n354/VwvPZ0yIF3VBR4vvoc9Lke2NFX
khrbCP2JN7T9NfUwqlpY/6KLirnjgWNqt+uh5iOvf81HKnI+56uIB9VDWlr/
9J3PVEybuHdhyLEerHSV1gX3U7HFblC6bEM9rPu+ZsvEV2L+VvvJPFSqB8kC
OOjEp6Jki/ZU9HgdFILbNbMRKq5KtW20elEHMRIhGeWjxL5OyiRviqsDp5rb
JeQfVMywd94oc7oO1Pa8HVb7TUWHLePX83Tq4KLjSrNvs2hYfjh/U1N0Lexd
y3C0laChm+LUuTjHWtg4an6RJ0lDmEmdvd+gFnrPXczLn0fDE5euPv/WXwNb
rnXKBS6kYdlfnsUWnRqQfR7dqPofDfMK7m7+E1YNA2czv0WspWHE0LzmJ7ur
oZRV8u/vOhpuffz86DWVajhVLdgwoEfDnMhoz9rUKnjXtSXmqQENb10rv1Kf
x4Xbs6bNTc1pqFTdskzxQSVkdFqFjlnS8Mnzf/tiDlbCk6e5r29b07Bv/Skx
twWVUHXYXnvIloYLlK2ph/wrYKy84k/EcRpmLciLFd9RDtuDr2TyztPQRT9m
UdjDErCy7f3g40/Dr0snOhVlSuCQHlNRI5CG0V0kuVPOxeDdK7zgfpmGqWZc
/x86ryHFyNxCPoaGnC5te/3cIvgtvmjaPIOG6Z6nq/e/zYfZHzw2TT6g4Q0P
StuJDfkgl//WMTWbhtOr9vwIv/UMtI6eb/7+mIaJYbRwG5enYF75MfPGKxra
qTj1ZG7NA7s7lG5GCQ2VV01mHtLJBUevaMW+NzR0GpU3Pa+YA34rDf1IXCKe
boSUl+AhPLiUbtHaSENx3ocbPnUZ8MxuJtSvhYYNwcE2+xvSoZhkU6zVRsMO
VxUep+0+tPTNXe3TRcO1+1e1vBxLhb+bXaYXDtDw51u1TOPmJJBeytlU+o2G
sp88lyRr3wHl8aUnHAU0NMkM3f0vNBF00huaC0REPDc39acn48FGQu/B3ika
jmk1NUQXx0Dgb9WAlmka9ufsHjWbFw0Phf9sdv2jYXD5U6Mj+ZEw3cqT3CxB
R7vRLcUGW8NBu+b5pxJJOmZuEncJ2hQK5iV3CmjSdMw1v2qbTgqB+xknHdfL
0fHiB9rVA/6BUJ9ozn6oQMcjInN69lV/+HmNqqK1gI68D9sXD2w/D8uDNUbu
LaTjNa2Bqdc0XzA9M6dqsSodJ+uNt53f6w3ezsK7cWp03DxwMeRYpifcPfTO
R16djqsZ61NP7XCHKstXu64uo6O34/pX+x6dhNGtqavmaNKx6VzOph7X46DG
DJ8J0KLjmemT9w/EHIbNGzzaprTp+PJR4lZ13QPgutIm1+c/OoYpHFiwf9oa
4hexLo+upaNKX7PY6+vmUDZP66DLejp2XNwlKejYBvx/MvpfN9JxedboQfpi
BKXx77KHSXS8/jBYlPOWBAaDHf0f9Ok419h1p/CbFjh2vym2odHRQt3sjBFP
AaKbMuOaGXSc738z973VKLuIc811J4uOiU29xcmzhtm9Rd7G1UDHg7b9LuM1
ciCba7fUyIiO7w5vmQ05K4GSajRebExH0l2j8Isf9MDh5n/11G10XNPwtrBk
gA1XriikP9tOR8XATd4nf2+FZ/6/LqzbSfh5LEBBa3o3dHt+2pNlRkdZqcDZ
jSxrkHTkrl1pQccTYy4pqgw72GibM/veHjqWQn1y2W8HsDWL/aBqQ8e3SaYn
8ekxuGR0Pj92Hx25vVlBr7hO0K5jcvTKQTomFft1RPw7BWLLNjAlHOjYcC2w
fN51L/hvgcqCgCN01HMzXfrA7Az4/emr8D5B+PfjxYj8Tj/IFNXeFp0k4q22
qCq9GgCNfU9PO7vSMe4oaSLjXBBo1gdoOngS/W14FVOx7DLsLHOc6vKi4+lC
q9QxhTDweb6rxfoMHa3vCSe4C6/A26QlwTsu0NHhtIeLcN818HAr7KFcpqP7
eMFRl4OxkHD43sunYXScaVOVcU6Ogwrry9d1r9Lx5BvDzy/4N0GFvcdQM5qO
Bft3BtnHJ0CxnChlfiIdT7XltAi23wNVFdX4kjt0/Guhu+XmYDJ4qRtGuN2j
o3pyYKdXdQro6Mb68O4TLOV6KudsGiRup5peyyPyW3B0R4h4JpwJCfghyyH8
vpYkJXs9FzZOyW+VFdFxp466c3hZAUTOojOLv9Nxaehd1e3EX4tvUkc2uo7T
8WZ8ampwSSHcW/RcrX6Sjgon/R8tLiqC+fr7RBESDOz9Ld8/J/0VCDxSEuap
MbB/wawX0yalsNW35trrpQx0DH9yq7CwFNIujgW7LGOg0ungG7+03sD+a8Zu
dVoMfKKe7t8+9QbeZg8aRmxg4PfnH5gnaspA65kilanHwC/R/UCdKoOAlwzd
ITIDp64Ot6rrlAPlbaTKDgYD00L7qtTDyiFjYOOQzBbifnrsAj/9CvCzO2eT
t42Bp86m2LYdrADL5vJyC1MGDoc98Np0uQL+FlsmJOxmYPh1Z89vTRXQqndn
toElAzUOSD4wmKiA7Kw+989WDMyh2F6NUK0EmzjvLdq2DFwRvm6LwoFK0JUp
eVJzgIF2bayQzX6VIB44Z6mbPQNDWjzR5U4l5LnEj+UfY2CQr/PvuPZKkNxc
lGzowUCG8wbFLciB7iKxeQOeDDTcXz9Lfh8Hnq3ffibcm4HGUjKn6t05cEit
a2fjOQZq+7hwVyVygByjWXTaj4Gvdq7R5ORwQEbSZaVKAAMjdSq/2b7hQOH3
P5MHQhg4fzj73tkeDkSdMD4uFkb4f/7AxdnfOXDsY2TT/SsMNGBU3Y/6xwHG
njbmtkgG0uZ/9F86nwsKNeoPBFEMnC243vB4MRe+sh2Voq4zUPzu7bs7VnGh
+Hme/6Y4BhY9ubDsxwYu3ND5NdgaT/i1JbHgIZ0LTilgdTaRgdRe9R+njbjA
Vgl/sySJgccFPTcsTbmgHNmk8+YeAw/k7AnaacEFwazF8UdSGfhC2eH9sb1c
KPM9PEsynYG7/9l9SD7Ahfjhh64PMxnIXDMiJn6YC65Hx97vfEjUUzw5GH2M
C0adjM2jjxiosOisi9kJLizefSkvNo+BWUMB6UYnuTDKqVtMfcrAFkW3Tk9n
LlQxlC935TPQ251/rofgpCcHRv0LGLjwBHfZLYJPa2fYrXjJwPvssqgE4rxJ
0nAV5zUDY/+YPx8i4msoUfScShnIeu/xIP44F8bDLt6dV87APIpDVvIRLtTO
VEk9rmTgXd0Ly+fbcyHFS97bsoqBnSFTqQO2XDjD3/t54i0DF9X0Dm6w4cJO
+xTTxDqCOw/0jZlzQbNt8IVBAzEvlYVp+ju48Nt004ovTcR9/wzs/hlzoaHs
XOSldwycLjM7vpfNhfM5MkdrOxio5jEnuInoh7nmnga3Dwwk9dT8FFvDBe2E
O3TFTwzcMvMw8NMyLrRc0lXY18fAsHQ/5XI5Lqy1MysZGGZgcG2w7nwBB5YP
a9XZjTLw9fHQ75uI+VEO+NPRPMbA+MHwepMODvH/V9Z4yS8Gupx/XXyyigPN
AnHd+FlMfF26J2LbfQ5U+XXSZSWYeF1ttW/dbQ68knuyLViSiQvqKFb+NziQ
rnfwqPs8JvZOXXp9JZgDiRySZ/98JtJ+NFX+OE/Mq41MgK0CExvZ9uXZXhzw
PV94e+tCJvHezVu4zJEDrrJRWcWLmDg1km4otOeAw71jBXpqTPzoGC+vbcsB
641MTtZSJuqbMYJbrThgWqHYorGMiRvGqzP+7eYAWA1+jlvBxNNqA1GPdxD7
9LV0WEaLiU6PMvYJt3FgzdmbfwK1mfjM+LZMqTEH1GVcpX+tYSJjUWairhEH
lJKMFrmtZeJRY/U/QOyv5PrFq/rWMTGe3KElBhz480akt38jE1f5ZMv6sDkw
alGFjXpMVM7uepBJ8EBfktkWfSZOxN4RJBH6Lh+vA6+pTEz6L7Ta3pADDXNN
nTcxmDjAVd7wazMHKhOXn31gwET3k8vkXYj8itb+uqwOTASF/ZaVRP45JbzY
WEMmDjNPfJ5rwYHU3emp0sZMDFewCMC9HIjvOf84YCsT061D6rwPcSDCy6Jk
woSJmZK3zXIIPwPnrKlz2cFEYce/0BEPDnjf+tvRs4uJmlX2X42Ifpz8r+3r
XnMmftkh3fzkMvEevX40zrNkYozDgbtA9NNyV7C4sTXRL3VK7M9kDmz7vE/h
1V4mrlluP9SdxwEDzw0aG22J/t350zBZyoFNsyV1Mw8wUXrNjI1VEwe0b3bT
l9ozcUw+PuJHLwfkX16xljrGRIdulc1LZLkgscPh6EVHJhaFhrQ+0ST2oZvi
Oe7ExEMv1hzJYHChV6w/8osbEx/usjjIcefC+xuvbtucYmKGIGR66ioX6rWu
Z9WfZqIsZ+VUVhYXXpiwOUW+TBwtyjAIHuRCdpdyy/rzTNxcOMwrkqmCe65D
n9P9iPlYbm3tv74KwmMS/sQEEf5Kmetyz1eBXceY3skIJiIo+r7TroZg/3mH
lKOY2P5k7wI522rI0tS68iaGiaaVDpe2RVfDT1frzwvjmSgRuKG05l81qCu5
y5QnEPdPOzouYb4F48JQfdc7RDxB7x3/s2/hxqyiiIoUJn7rECkHT76Fl5lN
BW73mVhQtO+IDqsGvuzg96hmMnETOyJJFFwD6+LVaB6PmCjGoLV1KtfCWx3/
/iUFTLQMfpl8wLIORI035auLCP/MHl5Wf1AHKj55jNOvifu1lSbm/K2Do28+
x7wtY+Li/W3fdjyrh797jFg+dUxcVKb4KIrcAGT/ufENX5g4Nza9+U9DE9hp
Li8/18fE36cqk3VkmiG4mibU+srE5fVR3TZbm6FR0dnowhAT75hnL0oqbwbn
zPqR1T8JP39lJQdUtkBq4/VtQfMM0Dt9Um7P91aQ01w6SaIYoNiVzxc6WjrB
qq+i6imN+H5JJbVqWRckpp+M28A0wLhdze8k3LpAa3XhhrVogA83/kuxk/oA
DF1LR01TA6zRqr7VbtgNxynh7xQOGeB611rTH68+QbHpeO7wZQNMOsuva2zo
AXHZOxdcwg1wY46cdPV4D2zjGW7nXzVAKw+V0Ei1XmjZHd3fH22AsrVZ6b7H
e2HQSmdJd6IBzkjcDIj43QvK9g7htbkGOLouPL5QsR9sl8+1MXligE9M1gVf
IPVDck/uyqpnBsg2avcSWPWDzrE/peWFBmjLg5aK+H7Ak/ETReUGyH9By9yo
MgAuXvVHHrQZ4F4NgdIL8a+gc/9GpmqHARpntS4fUv8KgpZ9gitdBhhj0K35
mvYVnPUGPF0/E/lMbRxY5Ubw95nATXwDVH2bsFypmTi/gsNJGyL8TOeGzeYT
582vSimPGOBCy7ieK2LfwPmJSszPMQO89H1/lNV6gj02JL+eNsCwdXPdPoZ8
A53kiV7dfwZ4/Ht5s2fiNxA0vNa+N4uFZnkmlNu5hH69SV6gJAtf23xUedD6
DU4OO5RsUWBhta5RbYH6IKxRXz2rUImF/EA6Y3T9IAzuHDZes5CFGt7JYmUw
CE455+pl1Ih4Z6UeaTkQ7HLjQ+NKFq69uZ+nlEScv7NvmaE2cT5lQkU+mzhf
q3H02RoWZq+A9sxCQq/zSBC3joUj4iSPnGZCb+u5XnIjC6HYUH/pJ0J/hXra
V4+FWtT3pmsFg3CCXzm5n8rCyPTa8LWz+KC9+Cqrjs7CTUWidxqyfPhqYh5k
YMDCi2l/8l+o8MExq1tqmSERfxX3TYsOwScmFvWbsvBNxjcloRlx/tZrO+td
LHxG8fqqvpc4XxWUXLWbhY06d0/PHCL02nKrH1qxcG7nxJ46N0Jv0+qstpeF
PksfhBZ7E/rLt/Mi9rPw/gWe7uELhH5Am+J+iIUHTrfV1IYR+oXD5z47sNCu
cPjtjWuE3ji/xPwoCx9qG1soxxL6dNhCcmLho4jyQ6Z3CX3rnCvpziy06Y2W
FU8j9LPr6xe6sTDYKyb1XCYfjh/dZ/Xbk4ULZ9xnP87jg02mw4t73iy0iNqt
/OYZH0z4TipbfFlYW6WTElHAJ/bJ03foHAt/tEs3qbzig67HuY7rfiy8I4pp
OVLCB41nQXRaAJH/ky8fPMv4oDBx5fanIBZqunDWbK3kgzjtxp+QEBa2rVo+
1MPlw/j52wfWhrGwWVdh67a3RH4laSXNV1g4lb3g8NlaPnSIPdI4G8lChpuu
k289H2o35wdoRLPw94PKiK0NfCgOff2Fc52F36ejxAYb+ZBXU2noEsfC1HKf
fweb+ZAiW5+meIuF80LPcLNb+HBjd+vsokQWynZHxja940PIje5jh5JYuMD+
Vl5zKx/OtPVzJZJZWBndYP+kjQ9OqsPaj1JZOF0lPuDezgdbu4kwi3Ri/lDR
Vv49H3bemxn8lcnC2InmzliC2T1zTO89ZGFP82TQX4I3ask9Ms5hYVaUhJdF
Bx80T6jIDuWx8OBzjaYogpWzNdyuP2Xh6jr5N0UESw5rN1CfE34Wajk1E/x7
w4YNnwpYOLpZ7WcXwYLT1JiQlyx80TY3/j3B3S/gu04xC2tiTH1rCG74vc2y
uZSFgXKelc8ILmOa5/uWs9DASsbnJsHPLu5T1uAQ9zX+8fUiOL3cwYdTxcKM
Ko+XZgTHS5xsd64h/Ltcufo/gsO3eVIV61n4NdnnmQTB56+eSyhsYOHTPcqm
fUR9rrygyYPNLHSfq/uliuBDCldtJVpZeLtP/8RTgs333Hid3U7MT3hoSzrB
RvG3l1p0snC4x0DlPsHkzjT/Xx9YOL+Ar5VHsPbSR5/ufiLegzNNVdUEq9rn
g3EPC/Pzc+99J1gm7XWKoI+Yv7Snu9YR+Uz3V866/pWFDvHZ3n4Ej6yuP0Ll
s1A77mf+F4K/OLdWfhwi/Bf3eWTXyYeW3G6tkBEWqruenRohuHK0/7LOdxb6
7i+CpC4+PCcNf236wUJn482Lj3/gQ+aZiW2+P1mYnHJKa0c3HxJezmSpT7Jw
fFXhzO6PfLg6PUeG84d4nzQnV/t84oMfyLk4/yXyWdQlfP2ZD+7BKvUKs9i4
4uyJyFU9fHDgaqwrnM3Gq9MPjfN7+WAptTrqoCQbaX8SLRz7+WC8Y4NotjQb
5w4sGIavfKBEUc2z57HRpa/ezHCQD2ua4am5HBvvJ27LcRHwQU3ZROmXAhuP
S9XQyoR8kN1r7nV3ARvD4natQhEf/ibua92swka1jRdThN/50LvsZHzMEjZS
chUTGn/xYeziv0RpDTZeX+i8sXGKD7M/3bwbvJyNv89EF/2e4YNWUkW69yo2
xq58sLxeQgD6f/ZlDa9m4/IFd1m+UgLYait65KjDxiMddhwzWQGcUF2av28D
G3WCtE5eVhbAWd9nBc2b2Hg6sixnQFUA4e0mr0zJbLS6Dxne6gLIjvMpN6Cz
kcrrTFm+WgBChcbG5ZvZmGIellpkIIBpj+PvErewcWbk89QtIwHMb/zTrmTC
xpAnrpuzTASw/tqaTxK72Fi5W2vHAWsBeEoHCwdt2PghebBioacAgp1URw/v
Z6N2/vXBgLMCuFGd96PLjsivIdViSaAAnl/+MFXvwEbLObc3DEQL4Ocsfemn
zmw8x7tWWvpUAJKH62R13Nh4rMbobc4rASwqO6xw34ONn5cly9dWCoB2MWrR
TW82Bv3U7YppF8CFqW+rzl1ko0d2dQr+FYDYj9tGhjfYaD9iEXnHeggULDdt
fRXHRj25V0a0w0Ow4mn1dtItNpaURYRPug6Bkce4+aok4j5NqV8DIUMQMrTL
XjqTjeNGxnamBUMg3S/m1/ySjZeebLbcoSGElPURGnHFhL/PtTMN1wmBdm5h
uc0bNp6X49WbGQjBSU5HspvDRrmDzzQybYXwlrYn5msjG9e8NghRShBC6LWM
9D8DbLwlLhBqKg+DRseGbaWDxHeZqBW3Vw5DgeYrfuAQG8meQflzScMwUNiw
XvI7G93EZAxLLIbBuPdXkcI0MW+RQab7o4ZhNtWUt0oJkF1MTbsgPgK3g1o9
BpUB9144JXZQYQT06g8pPVoE6L/1+asFGiNw5LDX3o3qgJ3W66InaSNQEZHU
w1gDGF9Af+ThOgK27dohMzqA0paqZO7ZERhb/lS7bB1g2k57/peQEVhRwHXZ
QgLMTeB2H0sagcAvIxO72YCHnR5Svd+OgOracwlKhkT804MxTS0j8MRnNrNt
M6DBYw/u1+4R+CyjGmi7HdB72/gUY3QEzlinaarvBHS5Smo7MzkCcim63M9m
gFXF7DcnxEXA1jeUOW4FOPKecvDYAhG0B9TlrN4LeDS8v9NtiQjca613C/YD
JiiY/F29UgT37J3jPOwBzZiK/7I3iYCSPU7ROwKYOu/26dM0ETSMX+wcPwZo
HKoW/40tAkeQ9is8ARjok/VMeosIZq7Eapx3JvJZba/QYSqC/wELM3QO
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 10 Pi}, {0., 0.9999999999992817}}, {{0, 31.41592653589793}, {
     0., 0.9999999999992817}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.633700407751464*^9, 3.633700465940259*^9, 3.634054405496962*^9, {
   3.634054469100629*^9, 3.634054498328768*^9}, 3.634054546040921*^9, 
   3.634054666234695*^9, {3.634055656304336*^9, 3.6340556702339973`*^9}, {
   3.634056027921812*^9, 3.63405603820259*^9}}]
}, Open  ]],

Cell[TextData[{
 "Attempting to solve the previous equation symbolical fails (",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " returns the DSolveValue function without evaluation.)"
}], "Text",
 CellChangeTimes->{3.63405605555846*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SchrodingerSolver", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PauliMatrix", "[", "3", "]"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "#", "]"}], "*", 
        RowBox[{"PauliMatrix", "[", "1", "]"}]}]}], ")"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], "]"}], "[", "t", 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\<\"x\"\>", "[", "1", "]"}], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{
        RowBox[{"\<\"x\"\>", "[", "1", "]"}], "[", "t", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{
        RowBox[{"\<\"x\"\>", "[", "2", "]"}], "[", "t", "]"}]}]}]}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\<\"x\"\>", "[", "2", "]"}], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{
        RowBox[{"\<\"x\"\>", "[", "1", "]"}], "[", "t", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        RowBox[{"\<\"x\"\>", "[", "2", "]"}], "[", "t", "]"}]}]}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"\<\"x\"\>", "[", "1", "]"}], "[", "0", "]"}], "\[Equal]", 
     "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"\<\"x\"\>", "[", "2", "]"}], "[", "0", "]"}], "\[Equal]", 
     "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\<\"x\"\>", "[", "1", "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"\<\"x\"\>", "[", "2", "]"}], "[", "t", "]"}]}], "}"}], ",", 
   "t"}], "]"}]], "Output",
 CellChangeTimes->{3.6340560612149143`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2 - Collective coupling of 3-spins to a cavity", "Subsubsection",
 CellChangeTimes->{{3.6333526560119343`*^9, 3.633352677447281*^9}, {
  3.634054926538601*^9, 3.634054937348922*^9}, {3.634055947904758*^9, 
  3.6340559550926247`*^9}, {3.6340560732305307`*^9, 3.6340560830053663`*^9}, {
  3.6340562123252277`*^9, 3.634056214191183*^9}, {3.634057055748699*^9, 
  3.634057060552412*^9}}],

Cell[TextData[{
 "We can numerically solve an ODE corresponding to schrodingers equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["J", "+"], "a"}], "+", 
     RowBox[{
      SubscriptBox["J", "-"], 
      SuperscriptBox["a", "\[Dagger]"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["J", "\[PlusMinus]"], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "3"], 
     SubsuperscriptBox["\[Sigma]", "\[PlusMinus]", 
      RowBox[{"(", "i", ")"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are the collective spin operators, where we truncate the cavity to a \
10-dimensional Hilbert space."
}], "Text",
 CellChangeTimes->{{3.6340549834844017`*^9, 3.634055025098344*^9}, {
  3.6340552622276993`*^9, 3.634055322089252*^9}, {3.6340567635084677`*^9, 
  3.6340567670063066`*^9}, {3.6340569145740137`*^9, 3.634057037906728*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ham3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Spin", "[", 
       RowBox[{"MII", "+", "IMI", "+", "IIM"}], "]"}], "[", 
      RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
     RowBox[{
      RowBox[{"Cavity", "[", "c", "]"}], "[", "10", "]"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"Spin", "[", 
       RowBox[{"PII", "+", "IPI", "+", "IIP"}], "]"}], "[", 
      RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
     RowBox[{
      RowBox[{"Cavity", "[", "a", "]"}], "[", "10", "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.634056122688882*^9, 3.634056186901619*^9}, {
  3.634056443297862*^9, 3.63405645252468*^9}, {3.6340567711376467`*^9, 
  3.6340567715065107`*^9}}],

Cell["\<\
We let each spins initially be in the spins-up state in the Z-direction, and \
the cavity in the ground state.\
\>", "Text",
 CellChangeTimes->{{3.6340567841733837`*^9, 3.6340568396926937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"init3", "=", 
   RowBox[{
    RowBox[{"QState", "[", 
     RowBox[{"ZpZpZp", ",", 
      RowBox[{"VectorQ", "\[Rule]", "True"}]}], "]"}], "\[CircleTimes]", 
    RowBox[{"UnitVector", "[", 
     RowBox[{"10", ",", "1"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.634056772192045*^9, 3.634056776016693*^9}}],

Cell["We now numerically compute the solution for time evolution", "Text",
 CellChangeTimes->{{3.6340568423133297`*^9, 3.634056857130116*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"schrodSol2", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"SchrodingerSolver", "[", 
     RowBox[{"ham3", ",", 
      RowBox[{"{", 
       RowBox[{"init3", ",", "0", ",", 
        RowBox[{"10", "\[Pi]"}]}], "}"}]}], "]"}], "[", "t", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.634054654423455*^9, 3.6340546586979227`*^9}, {
  3.634055325936964*^9, 3.6340553375933733`*^9}, {3.634055407579997*^9, 
  3.6340554356130667`*^9}, {3.634055624570182*^9, 3.634055635984147*^9}, {
  3.63405608897263*^9, 3.63405612003018*^9}, {3.634056191906271*^9, 
  3.634056215813487*^9}}],

Cell["\<\
We plot the collective magnetization of the spins and number operator of the \
cavity\
\>", "Text",
 CellChangeTimes->{{3.634055054833449*^9, 3.634055075588835*^9}, {
  3.634056222932824*^9, 3.6340562583144283`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JzExp", "[", "t_", "]"}], "=", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Conjugate", "[", 
      RowBox[{"schrodSol2", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Spin", "[", 
         RowBox[{"ZII", "+", "IZI", "+", "IIZ"}], "]"}], "[", 
        RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
       RowBox[{
        RowBox[{"Cavity", "[", "I", "]"}], "[", "10", "]"}]}], ")"}], ".", 
     RowBox[{"schrodSol2", "[", "t", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumExp", "[", "t_", "]"}], "=", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Conjugate", "[", 
      RowBox[{"schrodSol2", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Spin", "[", "III", "]"}], "[", 
        RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
       RowBox[{
        RowBox[{"Cavity", "[", "N", "]"}], "[", "10", "]"}]}], ")"}], ".", 
     RowBox[{"schrodSol2", "[", "t", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634056260839427*^9, 3.634056383156601*^9}, {
  3.634056422398488*^9, 3.634056422722876*^9}, {3.6340564626601048`*^9, 
  3.634056464686158*^9}, {3.634056655024342*^9, 3.634056657430581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JzExp", "[", "t", "]"}], ",", 
     RowBox[{"NumExp", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[LeftAngleBracket]Jz\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]N\[RightAngleBracket]\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633700383016532*^9, 3.6337004137633038`*^9}, {
   3.634054367563903*^9, 3.6340544042897*^9}, {3.634054462989506*^9, 
   3.6340544977282743`*^9}, {3.634054541947618*^9, 3.634054543257167*^9}, {
   3.634054663942766*^9, 3.63405466566203*^9}, {3.634055650881971*^9, 
   3.634055669225996*^9}, {3.63405639022581*^9, 3.634056394856225*^9}, 
   3.6340564359703083`*^9, {3.63405650018117*^9, 3.6340565017886667`*^9}, {
   3.6340566658921747`*^9, 3.634056715528113*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
Ch5paMWhxsM93eCPenRd4wxRJmPCHy3+FpFzbqQQ/NG/5WdM00eKwB/t/mvz
5cpuJkx4ozfuKfjExqaDNxqUc6mzQJOMCV/UxbHXYojCiAlfNHJKaMlyOwUT
vujusAcC8u1N4ItSfdLcLJIbwRed/Bpw8fkiDXzR467XejXpeZLwRRtkx3w6
/angixreN5e0quoFX9RSZNUv6XIP+KJfpCc+CTiQMOGLGkfHx9DKSZjwRAXj
PCUeh2aCJ+pvusdnMY0RE57ovUXRDbEDFEx4otorMsdFBHLAEzUOv2AVMFEC
fui+tv1xPDQGTPihJne8n21UI2PCD2WqL+NhDhwEPzS3Xk1/XNcY/NBbhbfr
SzMZMeGHhnonyAz5NIIfeumTpeX7rzTwQzXFt7XPOFDBD71Yf2zJu7QH/FAm
mpFMMj2fE15o+CLiKf6eDV7oZucSris3KZjwQpcFhHHPt3TwQV+/vnW35B0J
Ez7ofsZKfiEfCiZ80J6mJaME+v0kfFDeoHt/jlJp4IE2vE2Mba7vBv9TvWvo
oYIiGRP+5+VfAS9qpXPB+1xdvZDIcoIJE96nbNXfk/44B7zPmJOVBwts6Pv2
P98zz/HZRSQWAr5nn5yo9NhZCiY8z9KYXeLcrg3gd15i4u90cqaB35nbmpxZ
JEUFv7P/kgLOXu4Gv/Pl3PeVFzJkTPidoVFang/ti8HvtKuKPWYeUgh+pwJ7
W6r4FiZMeJ06FugfV18aeJ3bWn3Vn8uSMeFzyh+w01fUo2DC59S8kn/cVLcR
fE4LSYE24zUr4HOme+p4Vu7vAZ+zTu3x472DJEz4nJ+7D6irB2aCzxkX8tY/
go0JEz6nCloKOiefBz6nx01fyZAjZEz4nLRAWd73/Q/A53SVYT7mx0vBhM9Z
EBca1tTbAD7nJdnbNYEGPeBzGknIWviykTHhc05mBKArNXngc/46sqbbrZGC
CZ8zZ8U4ecg7DTxO9qSyyq7bFEx4nF68WjWeiQ3gcWZMeG+3ZV0Bf9M+uPZW
6kI3+JsLy15S9nz07/mfvxmmfvqb7tss8DaV4rgrrNWZMOFtVjEk2MlYkTHh
bWZFPMpQvE/BhK+51Dj8x47eTwlP80PYiZ8fSmjgaR6Rsedvp99vws+03RuF
8/bS89J/fiYnrSVVRYcJE17mfFivt3RlBniZXlc0Mz+epJ//f17mH1VzP9oA
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
kgcAHxcnAg==
     "], {{{}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
jAXxW2qbYp/EI/GRuBOYVxYP1LeP+x8TCbdA
           "]]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl2GWgVVXXhuGDSEsjSHd3d0p3d6c0KKgYgJIqgnSDSFuE2CiKYNBYKCWi
gNikNO81vu/HYI77fsY87L3P2msuyNt3ZNsRiRISEmYnSUiI9UTihISn70lI
qInHEmfuTUiYwo3En8tn4BK4Ey5g7gHre7i/rLbsJ+6IfXf1K/ki+o/1PfUd
ZeXNpcFv6tfJ/sNrcQN5TW4+HopT4cS4vRlLwkk8XvMo/gIPUHXMneJ+4Iqq
ClxabhO3Hl/DC5StCT/5YwL/GP8lHqjqmv2Z+5Erpipy6bjN3AZ8Ha/DDe2t
xeXxXj/RT7QulA2T3Yfb4Hvlaaxv4g72HpSN1A/itQmnYp/+cdlXeJCqJzjN
HeWKq0pcem4LtxHfwOtxI3trc4vwcJwaJ8EdzRzCo/BD2F+f8LP+Gf042VnZ
VLyHf1FfUl9QltXg+7GHf5D/hWvGHYsLwPqyrIR+h6yXvh/XyUxx6148zVrZ
aAb5Vr4eftX8RTxHPhrflG/AjXEXXMdcXuun8fqsi+Uj5GlwW5xUnta6Ka4t
P+uwbLR+MJ/U7Gn9s/onZHvxTHkprhA3GNfHv+qPy0uqKlxG7i3uNXwLL1HJ
1C/2TeKf5PfhIaqB2TPcCS6R17HKTCn9J3zvuL65zvIS1n14urWqfZnk2/jX
zd7GS1Vy9auZyfxT/P64plVDs2e5k1xpVY27n3ubewPfwcvUSC6t/cn4znwK
7gyegp/GB+LaU43MneN+4sqo6lxm7h3uzfgO4o24ib11ueV4FE6Hk+MuZr7G
D+MhOKX8rH6qfrzsnGwaPsjP0pfWF5Zl894/0A/nG/O/cc25U/Fdtb4iG2ct
iz+V98EDcBdzJa378XPWGvZnkb/LPxi/e/OX8Fz5w3Ex41dxU9wV1zOXz7oT
rxCPlqXXp+DT8Ztjzp5v+Ef0Q/lU5s7FNaufEN8X/JK8TNybuBG4CT6v/1le
TtXkHuDe4zbH9aBWcg9zGexLyXfj7uN+i2sBT4xrNn53qpbKavZ9fkt8Jupl
LrU6H++dfyY++7jvmivLFeVG4ab4d/1peWLvabWsvH4n31c/kOsqL2U9gJ+3
1rYvm/wDfmvsU6/hZvIHuVXyR3BGnAp3l6fhfo/9+Nn4zPAcM+W4Ytxo3Az/
of9Ffq+/Z42sgv4zvp++m6w0f1Bfx3x2/kOuPveWuct4nuyRuD/i13Hz2Ifr
m8tv/Sy+13HN2D9Gngm3w/fJ01u3xHlk7WH/t/Ixcd3hYfLK1iM4rb1/WF/g
Jpn7zdx0/C0/V19eX1z2MG6O/9T/Gvd7VZfLwW3ntuEkanWcA+pP+2bwk7nv
4jNULcz+xZ2J+7Wqx+XkPuLexlf08+1Lqn9D30Lf3etsIC9g3YXX2DNWdr8+
Nd8zfj4eG+8t3rf8L/2L+imy7/E8eYW4L3NjcEv8t/6svLLahfvH3xXfJXku
/LH+HVkytZZ7lMtsJg3fK34ufhSPwBnkf+tn6qfKzsuew0f4+fqK+pKysbgV
/kd/Lj4v72mtrIp+Nz9A3yOuAXO58Q79u7Lk6k3cUt4wzn75YzhL/P5wb3lG
7h88C0/DP8RrjnuzymP2E/69uB+q9XHvVf+af4mfzv0YP1O1Nvsv9xtXVTXk
8nKfcu/jlGoTbmVvozjr5Y/jB3A63Ed+BD8Wzz34fvkF/Wz9c7LfZc/jo/F8
oa8UZ4Usu8/iQ/3jfBv+AteCO29PUus62RPWavhz+cB4PsA9zZWxHopr2NrI
/nzynXyDuNeav4oXyMfgVHgzbh2fNW5srqB1N95o7zhZVn36+L3yW/V94/Pk
H9eP4jObu6ifo39ediz2qbZmLnK/x3miGnP5uc+4D+OeF/fkuG+rS/bP5V/g
juMn4l6qCpjfxW/nU8e9KO6n6rL5efwM7gR+UrUze4n7g6uhmnIFud3cR3Gf
ivtG3E/VFfvn8y9yJ/FTqr3Zy9yfcd+OZ0M8yFwvrqz3fljfzFwh/nOuIfdx
PHfihXHt6bfo2+ibxDkc7wNnwxlwP3k27ipegGfin/DTqoO5K9xfXC3VnCvM
fcHtwOnUVtzW3qZxJsd7xtlxRtw/rlk8Lp6Z4vqR/6dfqJ8l+0P2Aj7FL9RX
1peW5fAetuvH8x35q1xL7u/4rlvXy56McyGedeUPxbMe7m2unPXruK9ZW9hf
RP4l3yiebc1fw4vkY3F6/BZuh3viZuYKxb8D8Kb4/GU59Jn4jHHPj3PenqP8
E3GGx2s1d02/SP+S7Ge8SF6FKxNnMu6E/9P/I6+jWnJFua+4T3GGuN7jM+dy
2nc/PzCuWfxknC84p/y6frG+ltcyW/6nfAZ3WrZYX1VfNs5q3Blf0/8bZ4Bq
xRXj9nA7414U10XcR9UN+5bwc7hf8DOqi9nr3IU4A1Rrrji3l/sMZ4rfPTee
y2V/Zn4Ql5u7iZfiufhXvMRMNa5cnMW4K76hvxj3Te9lQ5zj+q/4wfo+sjbm
SuB9+l2y6/rF8dnot+nbx3fA3ubywtYv8KT4Hdk3QZ4bt8dZ5Jms2+J6sj4U
32X5U3Eu4DHyKtYf4j5rzWP/Lf0yvjaeZ/4v8y9yZ2RL9dXjmSV+J/KP4u/l
u/E3uUtx/+Y38vX1e/ghcX+StTVXEu/X75ZlVm/jDvIWcT7LJ+I8+AE8WJ6X
u42X4/n4LJ6supu7xV3mGqh2XCnuAPc5zhI/O+6z6k48T/ILuHN4iuph9jZ3
Jc4P1Z4rzR3kvsA39Evidejf0XfU9/a+WsqLWL/Ek63vxPUiz4uzyoaYz8/d
xSvxwnhewVNVT3N3uKtcI9WBK8Md4r7EWdW7uJO9reJclT+L8+FseGjcV/HT
8f2N5w15/OPzZf0i2d/6mbLz9DJ9jXiek+WKe6J+Gt+Lv8u14v6LszL+bSdr
rN8rG6ofzPUzU976TTynWDvaW1Z+mG+MvzJ/Ey+VP4qz4fdw57h+cWtzRWMO
T4n/Q7B/kjw/7oCzx7lrfRsPi/u9bHz8rDjrzCbCq/SL4zzGy3FNecV4FsC9
cfzD/5q8ieoEy3Ffy/fg7Or9OBfUPfwr/JK45+IVuJa9leK8x31wInxdnspr
ei3u5/p9/DD9EK6/2QrWb+MZKv6taF95+Tf8XrM51AdxPsTL4lfzS+MehZ9X
fbl77L3BNVNduArct+b24Zzqw7i2uQLmcvDDuSLxK+bW4GXxXcQrcW0zleNs
xv1wYnwzzijVlavIfSffj3PFZ4G7mGkT53Z8B3BBnDOeFeI6jvtBnH38BP1j
fFX+R31R80n4tVwdbrm5f/CseNaIc0n+Mq6DO+Mq5nJbd+AJ1hny/vJ7cWt8
K54zrK/jp+Kcwvvlw/FQPMD+itbvcDd7K8m+5w6Yu6VfxueOz1vfVd82niXi
O4YL4Vx4pPwUnhjPa7iYPClep18Rrx+vwnXlVeOZAw/ASfDtOKNUd64yd0R+
EOdRH8c5oJLx6/mV3L94ZtxTVBX+B/5Q3LvUDm4aVzheMz8qzkj8DB6Hq3mf
R/UlzCXnN3B14/9o4ufil2QXZK/o6+mrxbMDHoiT4jtxtqmeXFXuR/lhnC+u
J9zNTDvuE/l0XATnwaPlp/Gz8cyKS8pT4I36VbIL+tmyi/xq/YP66nHG40E4
Gb4bz39e6xvxe9Uf4EfE95kbaLaS9Xs8y9rLvmryo3yTeEYxfxsvj2sN58fb
cfc4K3D7+J1Z9+Cp8f9K9j8nL4o74rzyLNZ34zkkzm3ZpHgu4qvzx/Sl7EnJ
v8q9YuYSXoPry2pws/FDOHnihP/7T8g2Znprq3PH8De4gNoZZ4NKxb/Gr+Yu
4zlqMJfC/kRxvvF9uBrccdw07hfcHbwirkNcEH+Ee8R9MJ4l4v6Ai+F8+BF5
Ge4+7nW8Bl/Bc9UQLqW5e/h2fF+uJncCf4cLqV1xn1ap+Tf4tdxVPC/uE6oW
f5L/ni+sdnMvcMX93Pz8mHhmwZPju4lreM3HE////x+XM/s/ROO2Gw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D5M3m/8//LOeAw==
         "]]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "AxesInFront" -> True}, PlotRange -> 
     NCache[{{0, 4 Pi}, {0., 2.6652115581760496`}}, {{
        0, 12.566370614359172`}, {0., 2.6652115581760496`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[LeftAngleBracket]Jz\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]N\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.633700407751464*^9, 3.633700465940259*^9, 3.634054405496962*^9, {
   3.634054469100629*^9, 3.634054498328768*^9}, 3.634054546040921*^9, 
   3.634054666234695*^9, {3.634055656304336*^9, 3.6340556702339973`*^9}, 
   3.6340563954837437`*^9, {3.634056428419813*^9, 3.6340564363401423`*^9}, 
   3.6340564673687477`*^9, {3.6340564977326736`*^9, 3.634056502382657*^9}, {
   3.634056661838345*^9, 3.63405671641708*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lindblad Equation Solver", "Subsection",
 CellChangeTimes->{{3.633352631378475*^9, 3.6333526519246817`*^9}, {
  3.63405336428334*^9, 3.634053367003808*^9}, {3.634055129533885*^9, 
  3.634055133100127*^9}, {3.6340570936521883`*^9, 3.634057096102968*^9}}],

Cell[TextData[{
 StyleBox["LindbladSolver[lind,{init,t0_,tf_},opts]", "Input"],
 " numerically solves the Lindblad equation",
 StyleBox[" Vec[\[Rho]]\[CloseCurlyQuote][t] = diss.Vec[\[Rho]][t]", 
  "Input"],
 " from time ",
 StyleBox["t0", "Input"],
 " to ",
 StyleBox["tf", "Input"],
 " for initial condition ",
 StyleBox["\[Rho][t0]=init", "Input"],
 ".\n",
 StyleBox["lind", "Input"],
 " may be either a matrix or ",
 StyleBox["QuantumChannel", "Input"],
 ", or a pure function of a single variable which evaluates to a matrix or ",
 StyleBox["QuantumChannel", "Input"],
 ".\nThis is done by calling ",
 StyleBox["ODESolver", "Input"],
 ", which in turn calls ",
 StyleBox["NDSolveValue", "Input"],
 ", and returns the interpolation function for the coefficients of the matrix \
",
 StyleBox["\[Rho]", "Input"],
 ".\nThese may be put into the form of a function of time by calling ",
 StyleBox["Through[sol[t]]", "Input"],
 " on the solution ",
 StyleBox["sol", "Input"],
 ".\n\n",
 StyleBox["LindbladSolver[{ham,{c1,c2,...}},{init,t0_,tf_},opts] ", "Input"],
 "calls ",
 StyleBox["LindbladSolver", "Input"],
 " for a ",
 StyleBox["Lindblad", "Input"],
 " with Hamiltonian term ",
 StyleBox["ham", "Input"],
 ", and collapose operators ",
 StyleBox["{c1,c2,...}", "Input"],
 ".\n",
 StyleBox["ham", "Input"],
 " may be either a matrix, or a pure function of a single variable which \
evaluates to a matrix.\n",
 StyleBox["{c1,c2,...}", "Input"],
 " may be a matrices or pure functions of a single variable which evaluate to \
matrices.\n\n",
 StyleBox["LindbladSolver[lind,{init,t0},opts] ", "Input"],
 "and",
 StyleBox[" LindbladSolver[{ham,cOps},{init,t0},opts] ", "Input"],
 "attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " rather than ",
 StyleBox["NDSolveValue", "Input"],
 " for initial condition ",
 StyleBox["\[Rho][t0]=init", "Input"],
 ". If successful it returns the solution matrix ",
 StyleBox["\[Rho][t]", "Input"],
 " as a function of time.\n\n",
 StyleBox["Lindblad[lind,opts]", "Input"],
 " and ",
 StyleBox["Lindblad[{ham,cOps},opts]", "Input"],
 " attempts to analytically solve the matrix ODE by calling ",
 StyleBox["DSolveValue", "Input"],
 " without an initial condition. \nIf successful it returns the solution \
matrix ",
 StyleBox["\[Rho][t]", "Input"],
 " as a function of time in terms of constants ",
 StyleBox["C[j]", "Input"],
 " which can later be evaluated for different initial conditions.\n\n",
 StyleBox["NDSolveValue ", "Input"],
 "and ",
 StyleBox["DSolveValue", "Input"],
 " options will be passed to the respective function.\nThere is an additional \
option ",
 StyleBox["Symbol\[Rule]\[CloseCurlyDoubleQuote]x\[CloseCurlyDoubleQuote]", 
  "Input"],
 " which allows for specififying a custom symbol to be used for the elements \
of the vector ",
 StyleBox["x", "Input"],
 " in the solution.\nThis can be used to pass custom options to ",
 StyleBox["NDSolveValue", "Input"],
 " such as ",
 StyleBox["EvaluationMonitor", "Input"],
 " in terms of these coefficients."
}], "Text",
 CellChangeTimes->{{3.634053795518072*^9, 3.6340538093881903`*^9}, {
  3.6340538576282587`*^9, 3.6340539471115*^9}, {3.6340540279985647`*^9, 
  3.6340540332529993`*^9}, {3.634054123511153*^9, 3.634054123669038*^9}, {
  3.634055142854011*^9, 3.634055146723548*^9}, {3.634055178415902*^9, 
  3.634055209210918*^9}, {3.634055361007695*^9, 3.63405539834165*^9}, {
  3.634057111427044*^9, 3.63405711224868*^9}, {3.6340573022291403`*^9, 
  3.6340573707058573`*^9}, {3.634057436874897*^9, 3.634057702906261*^9}},
 CellTags->"LindbladSolver::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.633354110058621*^9, 3.633354110780126*^9}}],

Cell[TextData[{
 "The options to ",
 StyleBox["LindbladSolver", "Input"],
 " are the same as for ",
 StyleBox["ODESolver", "Input"]
}], "Text",
 CellChangeTimes->{{3.634055230153615*^9, 3.634055239422497*^9}, {
  3.634057742463028*^9, 3.634057743214993*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Example - Collective coupling of 3-spins to a dissipative cavity\
\>", "Subsubsection",
 CellChangeTimes->{{3.6333526560119343`*^9, 3.633352677447281*^9}, {
  3.634054926538601*^9, 3.634054937348922*^9}, {3.634055947904758*^9, 
  3.6340559550926247`*^9}, {3.6340560732305307`*^9, 3.6340560830053663`*^9}, {
  3.6340562123252277`*^9, 3.634056214191183*^9}, {3.634057055748699*^9, 
  3.634057060552412*^9}, {3.634057821752474*^9, 3.634057828602051*^9}, {
  3.6340581074126997`*^9, 3.634058117773247*^9}, {3.634059266355619*^9, 
  3.6340592665460587`*^9}}],

Cell[TextData[{
 "We can numerically solve an ODE corresponding to schrodingers equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["J", "+"], "a"}], "+", 
     RowBox[{
      SubscriptBox["J", "-"], 
      SuperscriptBox["a", "\[Dagger]"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["J", "\[PlusMinus]"], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "3"], 
     SubsuperscriptBox["\[Sigma]", "\[PlusMinus]", 
      RowBox[{"(", "i", ")"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are the collective spin operators, where we truncate the cavity to a \
5-dimensional Hilbert space, and the cavity has photon loss dissipator to the \
ground state."
}], "Text",
 CellChangeTimes->{{3.6340549834844017`*^9, 3.634055025098344*^9}, {
  3.6340552622276993`*^9, 3.634055322089252*^9}, {3.6340567635084677`*^9, 
  3.6340567670063066`*^9}, {3.6340569145740137`*^9, 3.634057037906728*^9}, {
  3.634057831516099*^9, 3.634057870486082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lind", "=", 
  RowBox[{"Lindblad", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Spin", "[", 
        RowBox[{"MII", "+", "IMI", "+", "IIM"}], "]"}], "[", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "SparseArray"}], "]"}], 
      "\[CircleTimes]", 
      RowBox[{
       RowBox[{"Cavity", "[", "c", "]"}], "[", 
       RowBox[{"5", ",", "SparseArray"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Spin", "[", 
        RowBox[{"PII", "+", "IPI", "+", "IIP"}], "]"}], "[", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "SparseArray"}], "]"}], 
      "\[CircleTimes]", 
      RowBox[{
       RowBox[{"Cavity", "[", "a", "]"}], "[", 
       RowBox[{"5", ",", "SparseArray"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Spin", "[", "III", "]"}], "[", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "SparseArray"}], "]"}], 
      "\[CircleTimes]", 
      RowBox[{
       RowBox[{"Cavity", "[", "a", "]"}], "[", 
       RowBox[{"5", ",", "SparseArray"}], "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.634056122688882*^9, 3.634056186901619*^9}, {
  3.634056443297862*^9, 3.63405645252468*^9}, {3.6340567711376467`*^9, 
  3.6340567715065107`*^9}, {3.634057849266315*^9, 3.634057925918108*^9}}],

Cell[BoxData[
 RowBox[{"\<\"Super\"\>", "[", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                 AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameLabel -> {None, None}, 
                 FrameTicks -> {{None, None}, {None, None}}], 
                GridBox[{{
                   RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["10240", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1600", ",", "1600"}], "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                 AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameLabel -> {None, None}, 
                 FrameTicks -> {{None, None}, {None, None}}], 
                GridBox[{{
                   RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["10240", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1600", ",", "1600"}], "}"}], "SummaryItem"]}]}, {
                  
                   RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.004`", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                   TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "42"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "7"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "\[ImaginaryI]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "12"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "\[ImaginaryI]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "22"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "\[ImaginaryI]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<10240>, {1600, 1600}]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "\<\"<params>\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.634057926245409*^9}]
}, Open  ]],

Cell["\<\
We let each spins initially be in the spins-up state in the Z-direction, and \
the cavity in the ground state.\
\>", "Text",
 CellChangeTimes->{{3.6340567841733837`*^9, 3.6340568396926937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"init3", "=", 
   RowBox[{"Projector", "[", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"QState", "[", 
       RowBox[{"ZpZpZp", ",", 
        RowBox[{"VectorQ", "\[Rule]", "True"}]}], "]"}], "\[CircleTimes]", 
      RowBox[{"UnitVector", "[", 
       RowBox[{"5", ",", "1"}], "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.634056772192045*^9, 3.634056776016693*^9}, {
  3.634057934721961*^9, 3.6340579521179857`*^9}, {3.634057985912854*^9, 
  3.6340579890172997`*^9}}],

Cell["We now numerically compute the solution for time evolution", "Text",
 CellChangeTimes->{{3.6340568423133297`*^9, 3.634056857130116*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lindSol1", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"LindbladSolver", "[", 
     RowBox[{"lind", ",", 
      RowBox[{"{", 
       RowBox[{"init3", ",", "0", ",", 
        RowBox[{"10", "\[Pi]"}]}], "}"}]}], "]"}], "[", "t", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.634054654423455*^9, 3.6340546586979227`*^9}, {
  3.634055325936964*^9, 3.6340553375933733`*^9}, {3.634055407579997*^9, 
  3.6340554356130667`*^9}, {3.634055624570182*^9, 3.634055635984147*^9}, {
  3.63405608897263*^9, 3.63405612003018*^9}, {3.634056191906271*^9, 
  3.634056215813487*^9}, {3.634057960250297*^9, 3.6340579767641993`*^9}}],

Cell["\<\
We plot the collective magnetization of the spins and number operator of the \
cavity\
\>", "Text",
 CellChangeTimes->{{3.634055054833449*^9, 3.634055075588835*^9}, {
  3.634056222932824*^9, 3.6340562583144283`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JzExp", "[", "t_", "]"}], "=", 
   RowBox[{"Re", "@", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Spin", "[", 
          RowBox[{"ZII", "+", "IZI", "+", "IIZ"}], "]"}], "[", 
         RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
        RowBox[{
         RowBox[{"Cavity", "[", "I", "]"}], "[", "5", "]"}]}], ")"}], ".", 
      RowBox[{"lindSol1", "[", "t", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumExp", "[", "t_", "]"}], "=", 
   RowBox[{"Re", "@", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Spin", "[", "III", "]"}], "[", 
         RowBox[{"1", "/", "2"}], "]"}], "\[CircleTimes]", 
        RowBox[{
         RowBox[{"Cavity", "[", "N", "]"}], "[", "5", "]"}]}], ")"}], ".", 
      RowBox[{"lindSol1", "[", "t", "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634056260839427*^9, 3.634056383156601*^9}, {
  3.634056422398488*^9, 3.634056422722876*^9}, {3.6340564626601048`*^9, 
  3.634056464686158*^9}, {3.634056655024342*^9, 3.634056657430581*^9}, {
  3.634058002841893*^9, 3.63405802414081*^9}, {3.634058058360641*^9, 
  3.63405807341708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JzExp", "[", "t", "]"}], ",", 
     RowBox[{"NumExp", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[LeftAngleBracket]Jz\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]N\[RightAngleBracket]\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633700383016532*^9, 3.6337004137633038`*^9}, {
   3.634054367563903*^9, 3.6340544042897*^9}, {3.634054462989506*^9, 
   3.6340544977282743`*^9}, {3.634054541947618*^9, 3.634054543257167*^9}, {
   3.634054663942766*^9, 3.63405466566203*^9}, {3.634055650881971*^9, 
   3.634055669225996*^9}, {3.63405639022581*^9, 3.634056394856225*^9}, 
   3.6340564359703083`*^9, {3.63405650018117*^9, 3.6340565017886667`*^9}, {
   3.6340566658921747`*^9, 3.634056715528113*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
i8B1pO4RyKAiFsHPcQczxeHmeVOvgHEG2qOQadxbJAF5zW9PCrswkVbm4bsG
lVLwK3Sb+EoaA53o/HXbtVkaEqa3ycncZKAvPfEne//KQfpLCD1hQyIjtUdD
i3MKsPFVmpmnGPY3Y/DszTlFiHtbKeGPeR7IOLbj0RSIbRzOXMa8I3blnGM1
lwokSOUfXI95KNuw/+Z1QVXQLNYkLmD/Vk+LVhxSUIeex7w1StiPMVoD7788
UwfKD0veJry+pKkmnZetAX2L8dlO2I+3I4/t0XyjBQ9S30UvYv74/Pi2Ue27
KuJZ7CdLzxdMQqew9f5XoVkij9NGqWBuBtGaPptFyGNOvzqV+ug4Fa2WcI+a
xK4SZq5PBeyv9CJFszuntb6xgoWGdfBmhW6UGntR4dg07uObj1dF43xVNTcd
/SchAj/WVi+N/cLz35G9UmqjBKhxd/9rA9yn3245JwuSUJPov+MbXt8Y1ElY
tJaG3leke/tVBgo6bnZD01UO9jr1lF42xfMLKZPbveWhVPGJu8QBEtVdF6ut
DFGE/U91TutwYr1/W/xGDVeCPkO3sUbcr+sM/6MfNadAK8XTI+IV5rvzr7cm
V1Fgjl2nfh2ev9uezx/gbVCB4u5pI0Gsb1T4Vd3UWhXqL6S9csP6P/EyyZe3
Qw2q+rR2v8b9tlYxKnTYXR2EHaibh7HeO2vVQ0V8NOCO5r3vdVjfXHs4/gSP
akBgftujCrzfHxM4VJsYWuD+KUDOEOs70fORwe70EiKn24t7LIgkrDvbznWu
UAm3C9ueLlpPI7/oK9GlikxipDvpayvuBxNZJ74ZW7FCtearf1uKu1DSLT2j
eh9eQEIuwZJds0hoc7aMRQg/NP4wQg68dNSQ8FpV9rkwuPEVxNT2U9FCwRHt
rePi4PtVOm2NIhPJHj/VcXlJAlq6taHPlol+76pMSOaRBpUiGSWOOAaqkuIz
2CwmAycFnLQvPGAgjp/Om+Ip8nBb6lq/ih2e946OTj2GijAKUvte8GH+6Q5M
KzVRAiJ0yYmG93/mo4IiSyYFIqjRckycJ++Cfzn16aqC/RW2151Yr3u4rZRU
CHWgD5dJBeD9KzOUmE/4pgGXC8wibfF+qfC9Mwht1gK3WnOB73ge8MS2FL5W
pBMKNy/nR1dQ0T+C94fCPhbY111W5GHVg/Z3Fa6RtGADFsa6d5w6Pejl7Qq2
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
pO/4SZ4E7uYhkluEnQLbx+h/9rxoYr8gQJSNFMMi90/TqXMcg98dIdIYW5w/
7D5FVx38XRTnL0rY/3Zd9tOn2qf6fmZ5pBiJ0ArgyjKg6vVriae7X0oQhXXS
JbFUvGZ2+ZoPHqfOJ6OH+aZTZ+gqDjyN2z9Jk5dGznzaVP91x5lvMn+WIQoZ
J09fp/K18pDg9+yzssRwNqnyIlXfySlxrVmYlCOrqqvhaDe1P7jrfrBwlSfr
XYpNCqjxsb7pd7XJQ4Hw/NkdNkeNDznweMnxpdT5QqvvjAO1v/b8bZW9y6dM
fh3nZv13f+dl6w6G1/kPYKO7IJvdrxnouOikMJk2CaWey8vSZsfo79myH2uE
MBC39PqisNRPdKXG8OUXC9mJPK/Al1XUeD3nhL3RrjwkoiEy1X54jO7vGpm9
J0yArHuhKHSbqm+WSCWZXc4WIufru5VVqPjkurBsquWdKPn6U2DJDJV/FFQM
YtI7JAibhqziLOMMfcLDzfGRszSp/iG+34vav+6IVTc0/JUhJ7QOO76k1sPN
qV0XQ7jkyZo9uuU7qP3riNTuM2/CFIiFdtjcTaq/QwzjUdeTpyHCZEHo6ssx
ugb8Hea5z0heZGXtF23vpq9avlqYN3MZORYra1nCMkm3tWIQbP3BTRQrN9Kl
PozRy98dbpziFSCcGvVfQjZM0xP/Wm/jUREijiH59Tuo/TlcL9RNbZcYSbn0
YmLceIa+RK2wjRyWIIbhXh3bqHrelCkyuSxHmqxYd4Dh3/3Sp09eXfbUkSUr
HUVvBlPz6SaXLyttIk/UHMZia6j5+kxWK3l0KpC8++fPelDtP2eu+uvwELXf
nmEI4qfmx5jtfv6m3Exocn4jfjF1Bk5kZfbnpEzBt+yfzwlVbzLHdYCcACNh
oZ801mjppt9lv7Ptuw4H2Wrn/ihcdJI+76B2fsMFbrL75pqDgWNj9KMV58y+
dAsQluc9GSfNp+m/jrPqJn8VJN0mL7V/U/FrbtH05vZSMXJ15X/dTFT8ygm3
1A5JSBKmF5Izv6j6IHY79/21T6TJ+13Sxab/vlezfBOxSlKWZOx4ou/37331
5R7lh9fLk8+jY5KzVL0Xs15bLzJfgfQWFYT9u1/aWN/DyVqiRIzeZn9ypeJV
iTMrOzthAoRoiTeraWP0ix2yQb+5l5DhEAHGnvRP9I2cdn8StNnJJZsnLg0q
k3R71fOn8jfzEA32Paf+axmjF57+e+m9uQCxfRZ08A51vjv6rIXY2QmRAJWg
Tz1UfFo9/vun9oYo4Tevy23eMUOvPe2qL/9UgnjKNA9qUv1ZWram6mi7NNGQ
rM+IpPpDc/rxiqVHhtSK+D4boOZryZZJtyE7eRJ6mbW2lZqvMWv2Pfo0BcL6
IHSXGhVP8x/dP6cuUyb6rrre/54/vNkaqy2d8BI43Bo/nuydgXBuQea29VMg
kUve9Cwbp1ubV46sbWUgleeOuZ1V+EQ3t+ZRTPzLTk6lro0WXD1Jn4r2YBZ9
K0D4jz7jGqfiZ72OvtLBNiEiveLtjzLqfJp+/LvFml5RMnHd+mUytf7k4gJy
ahckSIrk+vB71P6yu1//zklvaRKjMWqwmqrvfbWL1W9wyxIJ1ret/zwWN6Xt
B5ISFUhBgXSLKTUfTX68W1ibGMmyhYKfgas+0VOWN9zrmllGxnZ+7lSSmqS3
ZWRM8wnzEL9a2vdXVP16e5900bb9QkR46VFn19tTdKJzo9/nkhgREZtkLtw7
Qx82lODOoEkQ6fZ+y89MM/TEM2fzgyukSdXnkFxZKh5IqkXz0tPyxI97l/S/
+6Xrn/5nwzKrRI6OP6JvpsZP7rBpcei6aXjo8+MHrWeM/mzs2wMRU0bSqGbs
OZ/XTVe3CdW5k8hNGv98bZTvG6NXfDOMzWFYQbarDrUJUPvz7N4s8U55MVKU
f+8+P7V+f8W2PZtLkCaRQtZKLNT1H7mkM31YR51nytdf+UqNR+ETCQedbfKk
bNXsK1eqPaWaGzSCahSI9zcvvgPU+ITx+dxJa1Ei/lI9sS3/zqcumTsTVSZB
52nf9azqMXoup5CN3S12sv7Kpc9q6pN0vhSR+tNHeIhn4La45M4x+hb1/Zq6
LgLk9s2Q9Hoqf24a9SqMeyREek28OW9S9Xqqa8etx3kSxGGP2ow2NX/s1uL7
mX7KECsOc0tZav0VVwSpVN2RJz3m3zOfUO37EsD14PA9BSJauUqjkmpfmfSq
44dFlckLwur17/0B6w9sZbyvvUBKcXnn4T8zcKmw4bX2/Umw4bj9WvXnGL3r
81/PJ6nsJNTLK+bopkn6BrtBmf/uCxAlDaZNny2m6c4HyySvvRYioTvYps3v
TNGHmmbE1jRLkC/1hz79+16wWGC548AvGfLIvXJVETV+ZhKcn98+ViA0LzXF
gH/rKXHexNSDkVxffTLrdXU3PSZZoYehm5uYe24cEO8Yo2fu6kkIBzGSuYQ+
f4A6v25ds+ZVc4Y0+UQLOPSvvgpiFHD+bCRPOht+Ff/LZz063xM92xXI9fjz
uvbU///k4LT6GzgFVULvq98yj9Of8bS9OsfESPTvetm493fTl75LLnRoEyAX
Z412GVL9uXJoZd/3eVGiP8FbXU9dbyDfQ/+EoCTZq7BC/R4V//6XIwI2P5Qm
LnUd3wWo+K83WdgOorLEKlBRwo3q39N1v6uicxRIdvLAGT3q+vyc1dJZq9jJ
2WSpQ1VrJulcJjT9/Wo85JqETCsztR+drxnuGbokRPK3funio+b3wcczebvu
SxBd9juGD6nrff/2puzSe2lC5zO2q/xX7wgbtSZflSdPgmYCuv/dD69rN9Rj
ViZXFQ4c+ve+MMOykqT6zHjwHu5cwfV1Btacu+IvzjsFdtuGXnOzjdNZS0rM
r5UxEL9I/ueZ2z/R2e/aRXWMspMth5Ku/Fo7SQ97UmWTkClAKtjWJUlR54/q
kxtvhXwQJTWuVcXS1P4xoLdVTW9SgjxLsGA0odZf5Qamj8EcskSXx6nK9d/z
LwXm/1ISFMimidXjh6n+X55bnmBQROUbQa7DyTyf6Ndayjtf8PCQIr8fj7dR
/fe/vvFk1i4hYiC1fmEztX4e+U3kRJZIkyba0SPq1Pwa+6cq1ByTJ3+bzt4b
pPqr46PSEjahRHQYi8Q2UP3NTEs07OWaBkGpvTfavo7RtY59/nNkOyO53+Al
sT+/m86zf2HHTnExsr5k87m1VHwP1pwJZ4mTJkNs8XsGqPFssZl89W2VLMnM
Zeeqpdrf6OBUxbxVnvyeaXn1733WAvWpNw8qFIhW1omLe6n+0CInpV9zTsLe
eOhoyRujP+G88tDtCjsRzsoruEbFR1LD2ow5Ux5is3M+2ua/MXp40cKd59cE
SGX8mI+p6TQdRMNOrPQXIt5VhiNS1Hw7TxePvUmTIDrrjylfosazOe7L7SA3
6vpzEfTEf9/f8LgV/RRUJq+l9p7+9z2NGDBLmEaFQYlJc4bQzAwY8ktGJjVN
wkVODeabf8fo9jlaD7Qa2ckL6T9LvNUm6cOeFoaFsQLkpJem4lcqP5zze6qo
1S9BOkPDtrNR19sp562cv1SWvBq+LRtC9T+yeemN+mhGoqNdcPz7UDedrO7Y
/fIvN1kdbF7p2kbl2y7utNx8aTLmpS77r165pn+q4ZC5PEnflHW4/V97jx05
fK1hCr5adsyQX2N0K41PLb2y1H58NKraqrKbrnPA94HwcjGya4fdZYV/3uQp
55kVsrJke73ZQjh1/VdqLsVP6QqEP8/u9b/4MecU63y6h53c4vxruY3qTxeP
2Q357Tzkod1FE1aqPaZ2RVF/rwuRDqPEa81U/h4/FrZG0lmeXGEsOVJNtef7
j9V3RbmUiTvLi0v/6leuvLeuAcZTMJK3NFKAfZy+L1E7NKBMgLR/4qM9oMYn
/Ojz9cVfREnryz5/WSr+zzD2bDFlliQT3eeY3//Ll9vdgi7wyxLQbzz373mi
9yr3phcpCqTOaO6O0b/nUQ+ieG9I8xCXEBJyhcp/NFku6fpDQiQtvb2lh5rv
oi3t7+7USJNf8dMrOajxW//+z40t5+WJ6u2Wqn/fn8gm3ua2WVAilt/u/yJU
e5k9x5Q+nGIkPTsE2UUKuul9e65MX1snRiozAwuHqPbxuu6K/ZYoTVZXjbFL
U/9Xv9kmw69BgQRcvhZ6lGpPB2eh0bkgdvJZf53cJSrfdL2KH/noLkDsLvB3
8FD13OoSeynVSCES7CvL/5dq39cl45z2RRKErLyjI0z1N1etZaFMUpnQA5/Q
/nlQ6MUyMChxe7y7vBW9WJvgtRy17GWLXuznfSY6h70HFr3YQRtJGS6VCUAv
Num/0FEa6xygF+uZ3vngjNgsoBcrzyVZP35pDNCLHe9ae0vrey+gF/ty6SY2
GY8GQC82TmdYzEGrGtCLlRaPLGDhawP0YqdcCoVEFXsAvVgqpx3YatQH6MVO
3WJQlGboAfRi/V96NPzY2QboxQotN2FjV60C9GL7DZivSJgUAXqxP5q5DTd+
LwH0YjeKnzLZ+bEa0Is18bx+V8asHtCLjd6lPDekXwPoxZYW1Tlqny0B9GKF
D0meuqCUC+jF2iqeVZEUTgX0Yl2dV++fH0sF9GLP3Yv08IzMAvRiB3yt5pTY
8wC92PJ5mkGdbw6gF8s9u/O/+LA0QC9We3jL91sKzwG92KfBOQW34iMAvdhb
TjFDdfLhgF7siS9iHKOW0YBeLGd4RLuTSBygF0tch97G2McCerFeJe/WPpyJ
BPRiW95Wnnig8BDQi226L9BvYOsL6MVOWSZHzDJ7AXqxHaPb2pNO3wP0YhU2
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
X/fE1gma0JYqQF/35Myd0x/rGwF93RjHzgiXzE5AX3dvenFlaEkvoK/L+unU
jcOJvYCe7hnP3yH+pY2Anu6TCTZtFZ8SQE/3so7rqpbiIkBPd1zeoCLYrQLQ
0w29M8yrZ1YH6OkKP3DaGxpdB+jnRmdZbZtMewfo52oeKlD8/jYd0M89o+r2
3uJyCogHP6udlREmHC/F2RK0MgA9XUsJ8+iuLzmAnm7tElOj4U+5gJ5uW6yw
bXR7JqCn68I2ny4rkwTo6W44qGnSHRgN6OlOtEat/7gpDD7yerwoWiNF4lOJ
rJrsM0BfV5lWKrSNOxbQ130oNLB93jgO0NctM9t4pCYjGtDX1Xb1aJLYEQro
6+r0q5y4+D0Q0NdlVgq598HRC9DXvfA5YKAqyRvQ1+UwC9z4cEMAoK8r7nq+
v57KF+jrclVslom/4g/o68or9T++H+0J6Ov+iRxfdrDkOqCvG5x2PSruoR2g
r5slKS39OMMO0Nc1+f0qaKLPCdDXzW7nu1UaTgP0dV/a6H6c8HEG9HUfaV9Q
uRDks+jr1vP+9CtmaAJjq3Gmo55fgc0g+tVOjalFb7emyORS+aM5QG83/RB4
Z+dNA3q7L2n7uExrugC93WMywienoAbQ21Xz0x73OFwH6O1ynLpkUSnSC+jt
Ppm3/x4u2wctVu9sn8txEk3233N+B98DertWVmb7rDrKAL3d68fyDBa2FQF6
uwIaRUGeBrWA3q794SbpKY16QF/3x4b+N8kcWYC+rhsx+cljkAJXOkXdzw8I
kwcSkW2xn7MBvV3ixzDKJZkH6O02LITlj+pnA3q7Sf7ivrIhsYDe7lKVV9w/
B8LAp94Mvi2XIn7MWlfn3SNg0jTr6ON7UuSR4bK/yw1iAD3e71OrM2MOxwF6
vHPLQND8eQygv7tUmfx36b9gQH93Kkjr9J4gb0B/lzuK4eBonBd8rtRS3SAu
RzLnPGpGev0APd6fGy9dNLwUBOjxCu9Qp8cNBwD6u3OwIGW26xagv1tgoGm5
Otse0N91vWVY2SNiB+d3fNW4lK5IVJnLE7LfOAJ6vLJ/a8XGTWmAHq+Mc7Cu
wyMXQI/32+Ar0xL1vEWPN3PqdlWx0iygx7vU9TvtHvscoL9batrXCM3NgP4u
R1KI1jKGKogXfHZPjpuFtHk7xvhpdgN6vAMTQRLzq/oAPd6dFxaexoz0APq7
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
5jYM/w==
     "], {{{
        EdgeForm[], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwl13f8TuUfx/GvjOyZTbJSflFG2VH2XiEUokX2lr0yMysruylUKEQZla1I
yS57KxRC/J6fR398Huf9er8/17nvc+7rXNe587bt0qjzPQkJCYnUQ0kTEoo7
nkyZkHBcJaE/T5yQ0ErDqxo24VfUE+oofwJ/Ov8anqaKGXCEd4ZXTTldwjJ9
rXnt8WbcUM8dnDzOidPhtfQmeQE1GD9izBO8UvJj9ER6huw6flWemZcnPhsX
x7/RZ+U76H6y6vRk+km6pC9RQ34dv4eTGbPcsQ3vHlkHve/LGvEq4C3yRviu
PA9O4XgAj5I3wO3l6fHX/HR4s/HrcEd5NVwQD8FFcBFcSt9FPBOXNva44yTe
TH2f81vhG/z2dBb6gbhWXAL/Tp/TV0Pdy1shf4H3Gt6KO6gy6gR/Mn8W/x88
UyVXX/Db8jvyt+HXVAbn/Ya3hfegKhu/t74pvHfxzTivnqy8vHFOXBIfpc/L
a6opuKK8Ji+F/Eu6Hd1J9oGsMd7ObxwTKK7JfUgpP4hH447sjPQ6XnrZVuPW
407x2+FCeCguiovi0vou4Vm4JS5n/Cl6anw+nq1/mbw172l8K64VZ8OFcD59
J/Bk/K7scfoY74JxO+nX+bXoqXSl0DLTP2El/SLdOeYWfkaeiJcqrhVnwuvp
bfKHVHneaflbvDn4Np6tUqlV/Jf4XeIzcWdVQZ3hv82fy/8Xz1Gp1Wr+y/yu
/B9wF3Wfz9vA2857WD3JO6vvHd48fAfPjedT3/GYd7zaKg3vK32v8LrhH3ET
PffwUsdn4Mx4I71DXlgNw4/Ky/Aqys/R0+j5suWyNvguvyOdnc4vO0lPoefx
S9EneFnd/0txDbi/rDaug9/CT+HHcW19N/D7sVbgtMavoV/lJ8bd9X8of4b3
JN4lb4oTxxzFafQdwmNwN1kW+lveTuM20J35/6OH04/RZWWV9J2np9MLEv23
AM53KK3nJO8PXFel463V157XA+/G3dVT6gJ/Bn8hP5FaEM+j8ad4f+J6Kj3v
a30deD3xT7iZniS8tHFOnBV/R/8g30h3kT1Cj6CL0eXi+9DvxvzWf9FxZsxR
1/6evhWyF3iV8T24E86R+L/1vIC+U3gqbooXGl8Wn+Znw5djPuAB8jq4Pn4b
Px1rcPxW+v7BH+AMxn7j+Bqvl76P+E3wHv6zdFI6XVwnzoa/p3/UV0RV5l2S
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
cR8eGe9/+EXjF+IGuBxuEWuZ45L4TMf/A5lhhHA=
           "]]}]}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{1, 2788, 2787, 53, 102, 197, 359, 605, 944, 3, 150, 
           245, 407, 653, 992, 52, 291, 453, 699, 1038, 101, 196, 358, 604, 
           943, 2, 325, 487, 733, 1072, 149, 542, 788, 1127, 244, 406, 652, 
           991, 51, 565, 811, 1150, 290, 875, 1214, 452, 698, 1037, 100, 902, 
           1241, 519, 1310, 765, 1104, 195, 1340, 849, 1188, 357, 1281, 603, 
           942}}]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vBfnjrMz7h3vT3351P8H63P6nw==
           
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
LrP9NI5pWw7+D8t7n/I=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
K95LPHus/00+K84neE48v9WUce6KvyPfru8QvxN+Vt5Q/RN/JMus3x49/7LX
qmbuD/qfZDXj+cjN5SqbU41fEPsb14fLzGWJ80p8P8Zovjp/ifsZ14pnEjeP
q2JudX5h7DVxRuDu4x6MZyn3O34Vz8WZ8fv4adwJ78D3eZ/v4x14jPU15Jf1
v8jyy76Q1dZ/E/uTfgk3Qt5WvZM7GN+3dfP1VWOvxjXkNdTL+FN1kfVJ1NV4
Xew38t5qpni2xz5ofT/9/fIJ8fyRl1GPxznE2iuy1/Tz4izDp4rPyH+gdozz
Br8T3x/3N96Jx/qbj8t/1P8qqxPPk/ifhHssril+cewZXH/uAS5r7MXxd4xx
fE3+J+43XDf2dm6bMYDPYv7DsZfwDxjj+Vr8z9zvuF7sm9wCrpq5NeOMG9c/
N5B7kMvGDeX+wLPxfJwFf4ifwZ3xx3iCNbW5X/AVXN84il80Z2RcE/KFuDqu
hR/3PfyoXxrnvtjv43uP+1+f2bzt5g9SH+Kz82XjbBXPOfOv8nPi/Mq9LntO
Tc0djnOZ/CP9s3E/4y7yRupfeI/6SXwX6od4s/pxfD41WzxX1Ylet47+17gn
4gxifgH1oPlPxJlJNkw/Kq4/cxfhGnH94WXyZLGH4vX4fflgeVacI5478oeM
SXxd/jfuKm4Qe1D8H8M9bm4dfnlcO3FG4B7mHuGGcdfw3DhL4qx4B+4U5yr8
Kc7i9T+KvR1Ptr6e/Hf9NVlB2SHZk/rv4tmif0nWjr8r3o/5S9SacTbg6spq
qj/hz+IcZF3y2Kfi86kbYv9V74tzZXyn1g/VZ5NPxDnl5dSTsceow63/Uz4P
r8AL4+yqponPKNupPifrxjfm/47X5R/U74j7lH/Fa9Q374r+T1lD4xgeIX85
rmv5UlwL18Mr4nrgXuCyc7m4EVw2Ywr/BP8H9xduFPcxt8N4kc9hfm7ZSD67
MZVvwF/l/saN476I/3u42ubW51fG5+CGcY9weeJcyuUwPuY6c925XXiaeU9y
1/B13CTOhnikOaPj2pAvx3Xi2sO1fA8/61eZlyL2KP3GuP/MG25eTpwXl4/z
Vvy25v3Fz9evjD1O1kVNG+9N9onaRTaHe17WRL2O96q741pVd+It6mfyF9Ts
cfZTp3vNhvo/+dH4H/MLqV/GeUZtik/IR8U9jseY115NEp/X2jfUurIGfG3+
F/1qa1Lq1+k38Z+YN8K8XDhf3I/ynManXNc493F78AzzGnF/4X9xs7jOuBVc
vbje+TdjHTeSy83lj/fN5TI+47pxPbm9eKZ5jbm/8Q3c3DiJXzJnbFwr8X8T
ro8b4jre869xbjUvlX69foP6dpwv1PvNPRbfoXWj9Hnkk3AB+aPq6Xi2xXdk
/d/y1+M3xovlXdW7uSNqbvkuffd4VuJe8qbx3eN9sqyxn+l3xV6jzxFnA6/Z
RL3O/WdOYf6wOS30p/iX9ePiejZvFX4CN8Jr4rW4l7i8XMF4XnF5jN3c83EO
5Pbjh2Nfxbtjj9I/Ij+jvmr9/wDDtvjE
         "]]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "AxesInFront" -> True}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-1.49714318907391, 1.602684076039533}}, {{
        0, 12.566370614359172`}, {-1.49714318907391, 1.602684076039533}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[LeftAngleBracket]Jz\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]N\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.633700407751464*^9, 3.633700465940259*^9, 3.634054405496962*^9, {
   3.634054469100629*^9, 3.634054498328768*^9}, 3.634054546040921*^9, 
   3.634054666234695*^9, {3.634055656304336*^9, 3.6340556702339973`*^9}, 
   3.6340563954837437`*^9, {3.634056428419813*^9, 3.6340564363401423`*^9}, 
   3.6340564673687477`*^9, {3.6340564977326736`*^9, 3.634056502382657*^9}, {
   3.634056661838345*^9, 3.63405671641708*^9}, 3.6340580417504683`*^9, 
   3.63405807984344*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 1000},
WindowMargins->{{1276, Automatic}, {Automatic, -23}},
ShowCellTags->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ODESolver::usage"->{
  Cell[2554, 73, 2470, 63, 279, "Text",
   CellTags->"ODESolver::usage"]},
 "ODECoefficients::usage"->{
  Cell[5164, 143, 274, 7, 31, "Text",
   CellTags->"ODECoefficients::usage"]},
 "ODEVariables::usage"->{
  Cell[5441, 152, 296, 7, 31, "Text",
   CellTags->"ODEVariables::usage"]},
 "ODEInitialConditions::usage"->{
  Cell[5740, 161, 351, 9, 31, "Text",
   CellTags->"ODEInitialConditions::usage"]},
 "ODEFirstOrderSystem::usage"->{
  Cell[6094, 172, 547, 17, 31, "Text",
   CellTags->"ODEFirstOrderSystem::usage"]},
 "SchrodingerSolver::usage"->{
  Cell[92513, 1954, 2701, 67, 288, "Text",
   CellTags->"SchrodingerSolver::usage"]},
 "LindbladSolver::usage"->{
  Cell[274143, 5265, 3611, 91, 378, "Text",
   CellTags->"LindbladSolver::usage"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ODESolver::usage", 374223, 7147},
 {"ODECoefficients::usage", 374327, 7150},
 {"ODEVariables::usage", 374432, 7153},
 {"ODEInitialConditions::usage", 374542, 7156},
 {"ODEFirstOrderSystem::usage", 374659, 7159},
 {"SchrodingerSolver::usage", 374774, 7162},
 {"LindbladSolver::usage", 374888, 7165}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 358, 5, 65, "Chapter"],
Cell[CellGroupData[{
Cell[963, 31, 144, 2, 64, "Section"],
Cell[1110, 35, 388, 6, 28, "Input"],
Cell[1501, 43, 182, 4, 30, "Text"],
Cell[1686, 49, 283, 5, 46, "Input"]
}, Open  ]],
Cell[1984, 57, 110, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[2119, 62, 259, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[2403, 69, 148, 2, 44, "Subsection"],
Cell[2554, 73, 2470, 63, 279, "Text",
 CellTags->"ODESolver::usage"],
Cell[CellGroupData[{
Cell[5049, 140, 112, 1, 35, "Subsubsection"],
Cell[5164, 143, 274, 7, 31, "Text",
 CellTags->"ODECoefficients::usage"],
Cell[5441, 152, 296, 7, 31, "Text",
 CellTags->"ODEVariables::usage"],
Cell[5740, 161, 351, 9, 31, "Text",
 CellTags->"ODEInitialConditions::usage"],
Cell[6094, 172, 547, 17, 31, "Text",
 CellTags->"ODEFirstOrderSystem::usage"]
}, Closed]],
Cell[CellGroupData[{
Cell[6678, 194, 98, 1, 29, "Subsubsection"],
Cell[6779, 197, 1071, 25, 81, "Text"],
Cell[7853, 224, 139, 1, 30, "Text"],
Cell[7995, 227, 2461, 57, 227, "Text"],
Cell[10459, 286, 140, 1, 30, "Text"],
Cell[10602, 289, 7604, 158, 709, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[18243, 452, 248, 3, 29, "Subsubsection"],
Cell[18494, 457, 361, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[18880, 470, 412, 12, 28, "Input"],
Cell[19295, 484, 18435, 370, 64, "Output"]
}, Open  ]],
Cell[37745, 857, 170, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[37940, 864, 94, 2, 28, "Input"],
Cell[38037, 868, 18747, 377, 64, "Output"]
}, Open  ]],
Cell[56799, 1248, 174, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[56998, 1256, 599, 15, 28, "Input"],
Cell[57600, 1273, 29160, 491, 237, "Output"]
}, Open  ]],
Cell[86775, 1767, 191, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[86991, 1775, 448, 13, 28, "Input"],
Cell[87442, 1790, 331, 8, 28, "Output"]
}, Open  ]],
Cell[87788, 1801, 285, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[88098, 1811, 503, 12, 28, "Input"],
Cell[88604, 1825, 734, 19, 28, "Output"]
}, Open  ]],
Cell[89353, 1847, 185, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[89563, 1855, 827, 22, 46, "Input"],
Cell[90393, 1879, 284, 8, 28, "Output"],
Cell[90680, 1889, 372, 12, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91089, 1906, 266, 6, 46, "Input"],
Cell[91358, 1914, 257, 7, 28, "Output"],
Cell[91618, 1923, 550, 19, 52, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[92229, 1949, 281, 3, 36, "Subsection"],
Cell[92513, 1954, 2701, 67, 288, "Text",
 CellTags->"SchrodingerSolver::usage"],
Cell[CellGroupData[{
Cell[95239, 2025, 98, 1, 35, "Subsubsection"],
Cell[95340, 2028, 212, 6, 31, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[95589, 2039, 252, 4, 29, "Subsubsection"],
Cell[95844, 2045, 569, 15, 32, "Text"],
Cell[CellGroupData[{
Cell[96438, 2064, 1007, 27, 28, "Input"],
Cell[97448, 2093, 18830, 376, 64, "Output"]
}, Open  ]],
Cell[116293, 2472, 174, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[116492, 2480, 609, 14, 28, "Input"],
Cell[117104, 2496, 74661, 1237, 237, "Output"]
}, Open  ]],
Cell[191780, 3736, 240, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[192045, 3746, 455, 15, 28, "Input"],
Cell[192503, 3763, 1588, 47, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[194140, 3816, 397, 5, 29, "Subsubsection"],
Cell[194540, 3823, 1021, 28, 55, "Text"],
Cell[195564, 3853, 752, 21, 28, "Input"],
Cell[196319, 3876, 204, 4, 30, "Text"],
Cell[196526, 3882, 348, 9, 28, "Input"],
Cell[196877, 3893, 142, 1, 30, "Text"],
Cell[197022, 3896, 623, 15, 28, "Input"],
Cell[197648, 3913, 226, 5, 30, "Text"],
Cell[197877, 3920, 1317, 35, 46, "Input"],
Cell[CellGroupData[{
Cell[199219, 3959, 1144, 25, 28, "Input"],
Cell[200366, 3986, 73454, 1267, 242, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[273881, 5260, 259, 3, 36, "Subsection"],
Cell[274143, 5265, 3611, 91, 378, "Text",
 CellTags->"LindbladSolver::usage"],
Cell[CellGroupData[{
Cell[277779, 5360, 98, 1, 35, "Subsubsection"],
Cell[277880, 5363, 258, 7, 31, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[278175, 5375, 563, 9, 29, "Subsubsection"],
Cell[278741, 5386, 1134, 30, 55, "Text"],
Cell[CellGroupData[{
Cell[279900, 5420, 1335, 38, 46, "Input"],
Cell[281238, 5460, 9508, 193, 64, "Output"]
}, Open  ]],
Cell[290761, 5656, 204, 4, 30, "Text"],
Cell[290968, 5662, 538, 13, 28, "Input"],
Cell[291509, 5677, 142, 1, 30, "Text"],
Cell[291654, 5680, 666, 15, 28, "Input"],
Cell[292323, 5697, 226, 5, 30, "Text"],
Cell[292552, 5704, 1296, 35, 46, "Input"],
Cell[CellGroupData[{
Cell[293873, 5743, 1144, 25, 28, "Input"],
Cell[295020, 5770, 78799, 1358, 232, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
