(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    145301,       3773]
NotebookOptionsPosition[    135860,       3469]
NotebookOutlinePosition[    138188,       3534]
CellTagsIndexPosition[    137586,       3518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Perturbation Documentation", "Chapter",
 CellChangeTimes->{{3.6333515346579514`*^9, 3.63335154627586*^9}, {
  3.633364320690548*^9, 3.63336432261762*^9}, {3.633781291117386*^9, 
  3.633781292159832*^9}, {3.633781364287074*^9, 3.633781398056273*^9}, {
  3.6337814322542763`*^9, 3.633781434518094*^9}, {3.634304392561145*^9, 
  3.634304394886302*^9}}],

Cell[CellGroupData[{

Cell["Preamble", "Subsection",
 CellChangeTimes->{{3.636379689161282*^9, 3.6363796904310207`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Perturbation`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.633351696261045*^9, 3.633351701530016*^9}, {
  3.633781146956828*^9, 3.633781148275402*^9}, {3.633781294331254*^9, 
  3.633781296275483*^9}, {3.633781369011711*^9, 3.633781370275049*^9}, {
  3.633781401233733*^9, 3.633781430288822*^9}, {3.634304397916306*^9, 
  3.6343043997977057`*^9}, {3.6343168373823338`*^9, 3.6343168385706367`*^9}}],

Cell["\<\
The following packages are needed to run some code found in this \
documentation notebook.\
\>", "Text",
 CellChangeTimes->{{3.633781139005548*^9, 3.6337811426309013`*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Tensor`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Visualization`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6343095014776506`*^9, 3.634309506874428*^9}, {
  3.634309840365309*^9, 3.634309841590867*^9}, {3.634309893412298*^9, 
  3.63430989489682*^9}, {3.634310127176152*^9, 3.634310128430011*^9}, {
  3.634310879956975*^9, 3.63431088630688*^9}, {3.634313448232463*^9, 
  3.6343134491585693`*^9}, {3.6343167133891573`*^9, 3.634316719748117*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6351824420646763`*^9, 3.635182446927919*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Open Source Code\"\>",
  Appearance->Automatic,
  ButtonFunction:>(Needs["QUDevTools`"]; NotebookOpen[
     FileNameJoin[{QUDevTools`$QUSourcePath, 
       StringJoin[
        FileBaseName[
         NotebookFileName[]], ".m"]}]]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.635182609676621*^9, 3.6351826444407997`*^9}, {
  3.635182842680962*^9, 3.63518284820653*^9}, {3.635182903083259*^9, 
  3.635182906619155*^9}, {3.635182952870352*^9, 3.635182956778173*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction and Overview", "Section",
 CellChangeTimes->{{3.633351563673402*^9, 3.633351567143589*^9}}],

Cell[TextData[{
 "This package provides a varied collection of tools which are commonly used \
to approximate and perturb quantum systems, although they can be used more \
generally. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ability to manipulate symbolic expressions is heavily \
exploited."
}], "Text",
 CellChangeTimes->{{3.6343079942006617`*^9, 3.6343080255678368`*^9}, 
   3.634308056127495*^9, {3.634308094880814*^9, 3.634308095527034*^9}, {
   3.634308126663557*^9, 3.6343082843108683`*^9}, {3.634309233626235*^9, 
   3.6343092358176537`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Magnus Expansion", "Section",
 CellChangeTimes->{{3.63335202563237*^9, 3.6333520385490847`*^9}, {
  3.633441643373975*^9, 3.633441643471745*^9}, {3.6343049566689663`*^9, 
  3.634304966570752*^9}}],

Cell[CellGroupData[{

Cell["ClearMagnusCache", "Subsection",
 CellChangeTimes->{{3.634481457957713*^9, 3.634481459925721*^9}}],

Cell[TextData[{
 StyleBox["ClearMagnusCache[]", "Input"],
 " clears all stored values used in generating terms in ",
 StyleBox["MagnusExpansionTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}, {3.634485674487269*^9, 
  3.634485750850669*^9}},
 CellTags->"ClearMagnusCache::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusExpansionTerm", "Subsection",
 CellChangeTimes->{{3.634305070939259*^9, 3.634305080482708*^9}, {
  3.6343083259914618`*^9, 3.634308331070911*^9}}],

Cell[TextData[{
 StyleBox["MagnusExpansionTerm[", "Input"],
 StyleBox["{A,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th term in the magnus expansions (",
 StyleBox["k", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "=1,2,..) of the time dependent matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is memoized.\n\
\n",
 StyleBox["MagnusExpansionTerm[", "Input"],
 StyleBox["{A,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses memoization. Therefore, if the definition of \
",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6343056005143633`*^9, 3.634305603305471*^9}, {
   3.634305647097501*^9, 3.634305649859612*^9}, {3.634305744959845*^9, 
   3.634305751863228*^9}, 3.634307173153048*^9, {3.634307540356827*^9, 
   3.634307699267864*^9}, {3.634307750252082*^9, 3.6343077929397993`*^9}, {
   3.63430782416461*^9, 3.634307860943009*^9}, 3.634308409535462*^9, {
   3.6343121510569267`*^9, 3.634312155354227*^9}, {3.634326118145029*^9, 
   3.634326119008779*^9}, {3.634472206437723*^9, 3.634472220814378*^9}, {
   3.63447226014537*^9, 3.634472265849544*^9}, {3.63447229616856*^9, 
   3.634472359968954*^9}, {3.634472449982347*^9, 3.6344724749017353`*^9}, {
   3.634472547432765*^9, 3.634472591083488*^9}, {3.6344730374272957`*^9, 
   3.6344730377531757`*^9}, {3.634473157995775*^9, 3.634473262004147*^9}, {
   3.634473293775454*^9, 3.634473386927519*^9}, {3.634478810934701*^9, 
   3.6344788215972958`*^9}, {3.634479343587699*^9, 3.6344793437678413`*^9}, {
   3.634479412449011*^9, 3.6344794314259977`*^9}, {3.634479489971114*^9, 
   3.634479510390069*^9}, {3.644072143852416*^9, 3.644072432383821*^9}, {
   3.644072475792265*^9, 3.644072504293023*^9}},
 CellTags->"MagnusExpansionTerm::usage"],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.6343256242681417`*^9, 3.634325625746148*^9}, {
   3.634325880303872*^9, 3.634325881658627*^9}, 3.634326155741663*^9, {
   3.634472977113866*^9, 3.634472977282152*^9}}],

Cell["\<\
We demonstrate two ways of inputing a time dependent operator\
\>", "Text",
 CellChangeTimes->{{3.634472387385248*^9, 3.634472396149316*^9}}],

Cell["The first is to define a pure input function", "Text",
 CellChangeTimes->{{3.6344802165983543`*^9, 3.634480225968779*^9}, {
  3.634480292804517*^9, 3.63448029795687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "X", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "Y", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A0", ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634472412587201*^9, 3.63447244426805*^9}, {
  3.634480234666789*^9, 3.634480255379594*^9}, {3.634480457551936*^9, 
  3.634480468655304*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634472437924308*^9, 3.6344724445151157`*^9}, 
   3.634472967785165*^9, 3.634479875791308*^9, 3.634480178808449*^9, {
   3.63448024547923*^9, 3.634480255711776*^9}, {3.634480461208692*^9, 
   3.634480469030126*^9}, 3.634481338581512*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.634481416512143*^9, 3.634481417389443*^9}}],

Cell["Alternatively one may define a function as follows", "Text",
 CellChangeTimes->{{3.6344802284995203`*^9, 3.634480269123611*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634325628498866*^9, 3.634325681419886*^9}, {
   3.634325766119524*^9, 3.6343257727570267`*^9}, 3.634325806147058*^9, {
   3.634325836340673*^9, 3.634325843525778*^9}, {3.634325896803735*^9, 
   3.634325899351165*^9}, {3.634325965271186*^9, 3.6343259845751753`*^9}, {
   3.634326210600319*^9, 3.634326216787332*^9}, {3.634472369340538*^9, 
   3.63447241091072*^9}, {3.634472442263481*^9, 3.634472442366967*^9}, {
   3.6344802751183233`*^9, 3.634480279001605*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634325663208611*^9, 3.634325681695957*^9}, {
   3.634325763493328*^9, 3.63432580710528*^9}, 3.634325844774642*^9, 
   3.634325900059366*^9, {3.634325959239512*^9, 3.634325984848881*^9}, 
   3.63432613050591*^9, 3.634326219831832*^9, {3.634472435256173*^9, 
   3.634472446059585*^9}, {3.6344728754598713`*^9, 3.634472894179648*^9}, 
   3.634472924181588*^9, 3.634472966153612*^9, 3.634479874245057*^9, {
   3.634480281705164*^9, 3.634480286905581*^9}, 3.634481339657466*^9}]
}, Open  ]],

Cell["\<\
The latter method can run into problems with memoization if the definition of \
A1 changes it will still return the previously cached value:\
\>", "Text",
 CellChangeTimes->{{3.634472399580571*^9, 3.6344724010320807`*^9}, {
  3.634480300825639*^9, 3.634480336972677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Turtle\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.63448034111068*^9, 3.634480364515329*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6344803694651823`*^9, 3.634481340538495*^9}]
}, Open  ]],

Cell[TextData[{
 "The cached values can be cleared by running ",
 StyleBox["Remove[A1]", "Input"],
 " first, or the function ",
 StyleBox["ClearMagnusCache[]", "Input"]
}], "Text",
 CellChangeTimes->{{3.634480385258376*^9, 3.634480417409594*^9}, {
  3.634480486450974*^9, 3.6344804976001053`*^9}, {3.634481344569306*^9, 
  3.634481370645241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", "A1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Turtle\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6344804016849127`*^9, 3.634480420167822*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\<\"Turtle\"\>", ".", 
         RowBox[{"(", 
          RowBox[{"\<\"Turtle\"\>", " ", "Perturbation`Private`t1"}], 
          ")"}]}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"Turtle\"\>", " ", "Perturbation`Private`t1"}], ")"}], 
        ".", "\<\"Turtle\"\>"}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "Perturbation`Private`t1"}]}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6344804048540154`*^9, 3.63448042068646*^9}, 
   3.634481372901725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearMagnusCache", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Rabbit\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634481376295223*^9, 3.634481384630185*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\<\"Rabbit\"\>", ".", 
         RowBox[{"(", 
          RowBox[{"\<\"Rabbit\"\>", " ", "Perturbation`Private`t1"}], 
          ")"}]}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"Rabbit\"\>", " ", "Perturbation`Private`t1"}], ")"}], 
        ".", "\<\"Rabbit\"\>"}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "Perturbation`Private`t1"}]}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.634481385278714*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 3", "Subsubsection",
 CellChangeTimes->{{3.634472980364563*^9, 3.634472981140852*^9}, {
  3.6344814247013817`*^9, 3.63448142480237*^9}}],

Cell["Symbolical evaluating for an arbitrary period T:", "Text",
 CellChangeTimes->{{3.634472982254715*^9, 3.634472991851099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "X", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "Y", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A2", ",", "T"}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6344729964578753`*^9, 3.634473012878306*^9}, {
  3.634473044413766*^9, 3.634473058827334*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", " ", "\[Omega]"}], "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"T", " ", "\[Omega]"}], "]"}]}], ")"}]}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"T", " ", "\[Omega]"}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"T", " ", "\[Omega]"}], "]"}]}], ")"}]}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.63447299973516*^9, 3.634473013460679*^9}, {
   3.6344730510029383`*^9, 3.634473061551684*^9}, 3.634479879851974*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.634472970369646*^9, 3.634472971184598*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusExpansion", "Subsection",
 CellChangeTimes->{{3.63430508467657*^9, 3.634305089528215*^9}}],

Cell[TextData[{
 StyleBox["MagnusExpansion[", "Input"],
 StyleBox["{A,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a list of the first ",
 StyleBox["k", "Input"],
 " (",
 StyleBox["k", "Input"],
 "=1,2,3,..) terms of the Magnus expansion of  time dependent matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. \n\n",
 StyleBox["MagnusExpansion[", "Input"],
 StyleBox["{A,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally. Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6343056812007637`*^9, 3.634305722967993*^9, {3.634305757880176*^9, 
   3.634305765807232*^9}, 3.6343071772992773`*^9, {3.634307877097534*^9, 
   3.6343078780281143`*^9}, {3.634326165904249*^9, 3.634326166634109*^9}, {
   3.63447314223615*^9, 3.634473142392983*^9}, {3.634473419783413*^9, 
   3.6344735210300493`*^9}, {3.634478835461425*^9, 3.634478850117378*^9}, {
   3.634479333248878*^9, 3.6344793334512787`*^9}, {3.6344794080384502`*^9, 
   3.6344794294910507`*^9}, {3.6440725373045053`*^9, 3.644072566201829*^9}, {
   3.644072642032359*^9, 3.644072645693797*^9}},
 CellTags->"MagnusExpansion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343256242681417`*^9, 3.634325625746148*^9}, {
   3.634325880303872*^9, 3.634325881658627*^9}, 3.634326155741663*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "3", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixListForm"}]}], "Input",
 CellChangeTimes->{{3.634325628498866*^9, 3.634325681419886*^9}, {
   3.634325766119524*^9, 3.6343257727570267`*^9}, 3.634325806147058*^9, {
   3.634325836340673*^9, 3.634325843525778*^9}, {3.634325896803735*^9, 
   3.634325899351165*^9}, {3.634325965271186*^9, 3.6343259845751753`*^9}, {
   3.634326188088539*^9, 3.63432623674481*^9}, {3.634473108204939*^9, 
   3.634473126563107*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", "0"}, {"0", "0"}}, RowSpacings -> 1, ColumnSpacings -> 1,
        RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
          SuperscriptBox["\[Omega]", "2"]], "0"}, {"0", 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
            SuperscriptBox["\[Omega]", "2"]]}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
          SuperscriptBox["\[Omega]", "3"]]}, {
         RowBox[{"-", 
           FractionBox[
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
            SuperscriptBox["\[Omega]", "3"]]}], "0"}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.634325663208611*^9, 3.634325681695957*^9}, {
   3.634325763493328*^9, 3.63432580710528*^9}, 3.634325844774642*^9, 
   3.634325900059366*^9, {3.634325959239512*^9, 3.634325984848881*^9}, 
   3.63432613050591*^9, {3.6343261938323507`*^9, 3.6343261996475058`*^9}, {
   3.6343262314918823`*^9, 3.634326237317747*^9}, {3.634473104595085*^9, 
   3.634473129427848*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusConvergenceTest", "Subsection",
 CellChangeTimes->{{3.634305091948043*^9, 3.634305095530253*^9}}],

Cell[TextData[{
 StyleBox["MagnusConvergenceTest[", "Input"],
 StyleBox["{A,t0,tf},opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs the integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Integral]", "t0"], "tf"], 
    RowBox[{"||", 
     RowBox[{"A", "(", "t", ")"}], "||", "dt"}]}], TraditionalForm]]],
 " where \[RightDoubleBracketingBar]\[CenterDot]\[RightDoubleBracketingBar] \
is the operator norm. If this quantity is less than \[Pi], then the Magnus \
series converges. This condition is sufficient but not necessary.\n\n",
 StyleBox["MagnusConvergenceTest[", "Input"],
 StyleBox["{A,tf},opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes the inital integration time is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0.", "Input"],
 "\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ". Using ",
 StyleBox["Integrate", "Input"],
 " will usually be very slow."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}},
 CellTags->"MagnusConvergenceTest::usage"],

Cell[CellGroupData[{

Cell["Analytic Example", "Subsubsection",
 CellChangeTimes->{{3.634326259192459*^9, 3.634326260394794*^9}, {
  3.63432707514718*^9, 3.634327079931094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MagnusConvergenceTest", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6343263279479923`*^9, 3.634326343264789*^9}, {
  3.634326485759177*^9, 3.634326486306519*^9}, {3.634326831456401*^9, 
  3.6343268391990356`*^9}, {3.6343268991207047`*^9, 3.634326917795491*^9}, {
  3.6344737729483223`*^9, 3.63447379842761*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Pi]"}], "\[Omega]"], ",", 
   RowBox[{
    FractionBox["1", "\[Omega]"], "\[Element]", "Reals"}]}], "]"}]], "Output",\

 CellChangeTimes->{{3.634326343759815*^9, 3.634326359356421*^9}, 
   3.634326486669191*^9, 3.634326759832837*^9, {3.634326822654332*^9, 
   3.634326839828986*^9}, {3.6343268911892633`*^9, 3.6343269364861183`*^9}, 
   3.634327146421774*^9, 3.634327242446415*^9, 3.634327567693515*^9, {
   3.634473787357182*^9, 3.634473804533936*^9}, 3.6344738349627047`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numeric Example", "Subsubsection",
 CellChangeTimes->{{3.63432708276285*^9, 3.634327085002358*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2.5", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2.5", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MagnusConvergenceTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "2.5"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"2", " ", 
  SqrtBox["2"], " ", 
  RowBox[{"\[Pi]", "/", "2.5"}]}]}], "Input",
 CellChangeTimes->{{3.634327154228034*^9, 3.634327216000905*^9}, {
  3.634473830917234*^9, 3.634473845363221*^9}}],

Cell[BoxData[
 RowBox[{"3.554306350526698`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.634327165302024*^9, 3.6343272163026667`*^9}, 
   3.6344738484563007`*^9}],

Cell[BoxData["3.554306350526693`"], "Output",
 CellChangeTimes->{{3.634327165302024*^9, 3.6343272163026667`*^9}, 
   3.634473848461492*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.6343104496626873`*^9, 3.634310450556806*^9}}],

Cell["The wikipedia article is correct and concise.", "Text",
 CellChangeTimes->{{3.634310480489222*^9, 3.634310495774012*^9}}],

Cell["\<\
W. Magnus (1954). \[OpenCurlyDoubleQuote]On the exponential solution of \
differential equations for a linear operator\[CloseCurlyDoubleQuote]. Comm. \
Pure and Appl. Math. VII (4): 649\[Dash]673.\
\>", "Text",
 CellChangeTimes->{3.6343104747475986`*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Average Hamiltonians", "Section",
 CellChangeTimes->{{3.633352040880207*^9, 3.633352042744746*^9}, {
  3.634304969674283*^9, 3.634304973813038*^9}}],

Cell[CellGroupData[{

Cell["AverageHamiltonianTerm", "Subsection",
 CellChangeTimes->{{3.634308366509553*^9, 3.634308371958828*^9}}],

Cell[TextData[{
 StyleBox["AverageHamiltonianTerm[", "Input"],
 StyleBox["{H,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th term in the average Hamiltonian expansion (",
 StyleBox["k", "Input"],
 "=0,1,2,..) terms of the Magnus expansion of  time dependent Hamiltonian \
matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is implemented \
by appropriately renormalizing the ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " function. \n\n",
 StyleBox["AverageHamiltonianTerm[", "Input"],
 StyleBox["{H,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally",
 ". Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634308376574415*^9, 3.6343084994394093`*^9}, 
   3.634308577389997*^9, {3.63447886722923*^9, 3.634478898460561*^9}, {
   3.634479360677597*^9, 3.63447945224968*^9}, {3.6344795175493317`*^9, 
   3.634479588803793*^9}, {3.634479679898574*^9, 3.634479680876418*^9}, {
   3.644072590967845*^9, 3.6440726080680103`*^9}},
 CellTags->"AverageHamiltonianTerm::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634328179843957*^9, 3.63432818309077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AverageHamiltonianTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "1", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634328190282669*^9, 3.6343282073701487`*^9}, {
  3.6344739536040983`*^9, 3.6344739683977537`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "\[Omega]"], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "\[Omega]"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634328197554905*^9, 3.6343282083013697`*^9}, 
   3.634473969454956*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AverageHamiltonian", "Subsection",
 CellChangeTimes->{{3.634308507037368*^9, 3.6343085098192387`*^9}}],

Cell[TextData[{
 StyleBox["AverageHamiltonian[", "Input"],
 StyleBox["{Ht,t,T}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th average Hamiltonian (",
 StyleBox["k", "Input"],
 "=0,1,2,..) of the time dependent Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is equivalent \
to summing the results of ",
 StyleBox["AverageHamiltonianTerm", "Input"],
 " from ",
 StyleBox["0", "Input"],
 " to ",
 StyleBox["k", "Input"],
 ".\n\n",
 StyleBox["AverageHamiltonian[", "Input"],
 StyleBox["{H,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally. Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634308376574415*^9, 3.6343084994394093`*^9}, {
   3.634308575294209*^9, 3.634308699828203*^9}, 3.634479437695404*^9, {
   3.634479611687923*^9, 3.634479674033877*^9}, 3.6440726336784887`*^9},
 CellTags->"AverageHamiltonian::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343282219714527`*^9, 3.63432822332397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AverageHamiltonian", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634328226484346*^9, 3.6343282442264147`*^9}, {
  3.634473973885852*^9, 3.6344739821428547`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "\[Omega]"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]},
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]"}], 
       SuperscriptBox["\[Omega]", "2"]], 
      RowBox[{"-", 
       FractionBox["1", "\[Omega]"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634328232120059*^9, 3.6343282445596323`*^9}, 
   3.634473984527727*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.63431039114738*^9, 3.634310392033146*^9}}],

Cell["\<\
Haeberlen, U., Waugh, J.S., 1968. Coherent Averaging Effects in Magnetic \
Resonance. Phys. Rev. 175, 453\[Dash]467. doi:10.1103/PhysRev.175.453\
\>", "Text",
 CellChangeTimes->{{3.6343103958499327`*^9, 3.634310397024755*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Perturbations", "Section",
 CellChangeTimes->{{3.634304980124794*^9, 3.634304985770728*^9}}],

Cell[CellGroupData[{

Cell["Eigenvectors", "Subsection",
 CellChangeTimes->{{3.634308777459964*^9, 3.6343087802984858`*^9}}],

Cell[TextData[{
 StyleBox["FirstOrderEigenvector[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Lambda]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs first order perturbation theory on the eigenvectors corresponding \
to eigenvalue ",
 StyleBox["\[Lambda]", "Input"],
 " of ",
 StyleBox["A", "Input"],
 " where ",
 StyleBox["B", "Input"],
 " is the perturbation matrix. ",
 StyleBox["A", "Input"],
 " does not have to be Hermitian, nor even Normal. \[Lambda] can correspond \
to an eigenspace of dimension greater than 1. ",
 StyleBox["\[Lambda]", "Input"],
 " can also be a list of eigenvalues you want to perturb, or ",
 StyleBox["All", "Input"],
 ", in which case perturbation theory is attempted on all eigenvaules.\n\n\
Output is of the form ",
 StyleBox["{{v11,v12,...},{v21,v22,...},...}", "Input"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"n", ",", "m"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " degenerate eigenvector of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " eigenvalue."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6343087901227016`*^9, 3.6343087978637257`*^9}, 
   3.634308847724977*^9, {3.634311131551207*^9, 3.634311228317461*^9}},
 CellTags->"FirstOrderEigenvector::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634310895238284*^9, 3.634310896989567*^9}, {
  3.634311257981473*^9, 3.634311260223876*^9}}],

Cell["\<\
Define a simple A and B for which we don\[CloseCurlyQuote]t actually need \
perturbation theory.\
\>", "Text",
 CellChangeTimes->{{3.63431127187777*^9, 3.634311284772531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", 
    RowBox[{"XI", "+", "IX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"TP", "[", 
     RowBox[{"YI", "+", "IY"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634310899680348*^9, 3.634310932275866*^9}, {
  3.634311017827776*^9, 3.6343110218368797`*^9}}],

Cell["Here are the eigenvalues:", "Text",
 CellChangeTimes->{{3.6343113165717583`*^9, 3.634311324395546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"A", "+", "B"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6343109502967243`*^9, 3.6343109533701887`*^9}, {
  3.634311290643304*^9, 3.634311302980942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.634310953841914*^9, 3.634311024105358*^9, {3.634311299394498*^9, 
   3.634311303339422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}], ",", 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.634310953841914*^9, 3.634311024105358*^9, {3.634311299394498*^9, 
   3.634311303341671*^9}}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s compute the corrected perturbative eigenvalues for the \
non-zero eigenvalues:\
\>", "Text",
 CellChangeTimes->{{3.634311335507519*^9, 3.634311361946492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondOrderEigenvalue", "[", 
  RowBox[{"A", ",", "B", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6343109583377733`*^9, 3.634310994945565*^9}, {
  3.634311039503518*^9, 3.634311042077916*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "+", 
    SuperscriptBox["\[Epsilon]", "2"]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    SuperscriptBox["\[Epsilon]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.634310980854052*^9, 3.6343109953147*^9}, {
  3.634311031952711*^9, 3.63431104285998*^9}}]
}, Open  ]],

Cell["\<\
Note that this matches the Taylor expansion of the true eigenvalues:\
\>", "Text",
 CellChangeTimes->{{3.63431136660446*^9, 3.634311379204114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.634311064721781*^9, 3.634311088741434*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "+", 
   SuperscriptBox["\[Epsilon]", "2"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "3"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {2, 0, 1}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.634311089370296*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues", "Subsection",
 CellChangeTimes->{{3.63430878460332*^9, 3.634308785901949*^9}}],

Cell[TextData[{
 StyleBox["SecondOrderEigenvalue[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Lambda]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs second order perturbation theory on the eigenvalue ",
 StyleBox["\[Lambda]", "Input"],
 " of ",
 StyleBox["A", "Input"],
 " where ",
 StyleBox["B", "Input"],
 " is the perturbation matrix. ",
 StyleBox["A", "Input"],
 " does not have to be Hermitian, nor even Normal. ",
 StyleBox["\[Lambda]", "Input"],
 " can correspond to an eigenspace of dimension greater than 1. ",
 StyleBox["\[Lambda]", "Input"],
 " can also be a list of eigenvalues you want to perturb, or ",
 StyleBox["All", "Input"],
 ", in which case perturbation theory is attempted on all eigenvaules."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.634308801557314*^9, {3.63430887953866*^9, 3.6343089016912107`*^9}},
 CellTags->"SecondOrderEigenvalue::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634310895238284*^9, 3.634310896989567*^9}, {
  3.634311257981473*^9, 3.634311260223876*^9}}],

Cell["\<\
Define a simple A and B for which we don\[CloseCurlyQuote]t actually need \
perturbation theory.\
\>", "Text",
 CellChangeTimes->{{3.63431127187777*^9, 3.634311284772531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", 
    RowBox[{"XI", "+", "IX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"TP", "[", 
     RowBox[{"YI", "+", "IY"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634310899680348*^9, 3.634310932275866*^9}, {
  3.634311017827776*^9, 3.6343110218368797`*^9}}],

Cell["Let\[CloseCurlyQuote]s compute the corrections for the eigenvalue 2:", \
"Text",
 CellChangeTimes->{{3.634311335507519*^9, 3.634311361946492*^9}, {
  3.634311433059778*^9, 3.634311456306636*^9}, {3.6343118577381697`*^9, 
  3.634311859781971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstOrderEigenvector", "[", 
  RowBox[{"A", ",", "B", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6343109583377733`*^9, 3.634310994945565*^9}, {
  3.634311039503518*^9, 3.634311042077916*^9}, {3.634311422684306*^9, 
  3.634311427535871*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Epsilon]"}], ",", "0", ",", "0",
      ",", 
     RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}], "}"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.634310980854052*^9, 3.6343109953147*^9}, {
   3.634311031952711*^9, 3.63431104285998*^9}, 3.634311462956067*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.63431023876372*^9, 3.6343102397138357`*^9}, {
  3.6343104367748013`*^9, 3.634310437861994*^9}}],

Cell["\<\
Hinch, E.J., 1991. Perturbation Methods. Cambridge University Press. \
\>", "Text",
 CellChangeTimes->{{3.634310293513311*^9, 3.634310301371792*^9}, 
   3.634310861910351*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zassenhaus Formula", "Section",
 CellChangeTimes->{{3.634304992020028*^9, 3.634304997003388*^9}}],

Cell[CellGroupData[{

Cell["ClearZassenhausCache", "Subsection",
 CellChangeTimes->{{3.634481457957713*^9, 3.634481459925721*^9}, {
  3.6344858008358192`*^9, 3.63448580414119*^9}}],

Cell[TextData[{
 StyleBox["ClearZassenhausCache[]", "Input"],
 " clears all stored values used in generating terms in ",
 StyleBox["ZassenhausTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}, {3.634485674487269*^9, 
  3.634485750850669*^9}, {3.63448580625633*^9, 3.634485825887493*^9}},
 CellTags->"ClearZassenhausCache::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausTerm", "Subsection",
 CellChangeTimes->{{3.6343170608365307`*^9, 3.634317062691887*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausTerm[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (with ",
 StyleBox["n", "Input"],
 "=0,1,2,...) from the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "0"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "1"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SuperscriptBox["t", "2"], 
       SubscriptBox["C", "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["t", "3"], 
        SubscriptBox["C", "3"]}]], "\[CenterDot]", "\[CenterDot]", 
      "\[CenterDot]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  where ",
 StyleBox["A", "Input"],
 " and ",
 StyleBox["B", "Input"],
 " are square matrices. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], "=", "A"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "1"], "=", "B"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "2"], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"[", 
       RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc. This term is generated using ",
 StyleBox["ZassenhausGenerator", "Input"],
 ". This function is memoized."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634317066251998*^9, 3.6343171505007057`*^9}, {
  3.634320165367777*^9, 3.634320448396018*^9}},
 CellTags->"ZassenhausTerm::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343205890924177`*^9, 3.634320589899886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"TP", "[", "Y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZassenhausTerm", "[", 
   RowBox[{"A", ",", "B", ",", "2"}], "]"}], "//", "MatrixForm"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6343206070485353`*^9, 3.634474721501945*^9}]
}, Open  ]],

Cell[TextData[{
 "As expected, this is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.634320617836194*^9, 3.634320634660974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Com", "[", 
     RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6343206378599653`*^9, 3.634320645961609*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6343206462135677`*^9, 3.634474723947267*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausSeries", "Subsection",
 CellChangeTimes->{{3.63432045937265*^9, 3.63432046180179*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausSeries[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["C", "0"], ",", 
     SubscriptBox["C", "1"], ",", 
     SubscriptBox["C", "2"], ",", "...", ",", 
     SubscriptBox["C", "n"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "} from the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "0"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "1"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SuperscriptBox["t", "2"], 
       SubscriptBox["C", "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["t", "3"], 
        SubscriptBox["C", "3"]}]], "\[CenterDot]", "\[CenterDot]", 
      "\[CenterDot]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  where ",
 StyleBox["A", "Input"],
 " and ",
 StyleBox["B", "Input"],
 " are square matrices. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], "=", "A"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "1"], "=", "B"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "2"], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"[", 
       RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc. This these terms are generated using ",
 StyleBox["ZassenhausGenerator", "Input"],
 " and ",
 StyleBox["ZassenhausTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634317066251998*^9, 3.6343171505007057`*^9}, {
  3.634320165367777*^9, 3.634320562518149*^9}},
 CellTags->"ZassenhausSeries::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343205890924177`*^9, 3.634320589899886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"TP", "[", "Y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZassenhausSeries", "[", 
   RowBox[{"A", ",", "B", ",", "3"}], "]"}], "//", 
  "MatrixListForm"}]}], "Input",
 CellChangeTimes->{{3.6343206597099323`*^9, 3.6343206602508163`*^9}, {
  3.634320693686355*^9, 3.6343206990405903`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", "1"}, {"1", "0"}}, RowSpacings -> 1, ColumnSpacings -> 1,
        RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         RowBox[{"-", "\[ImaginaryI]"}]}, {"\[ImaginaryI]", "0"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"-", "\[ImaginaryI]"}], "0"}, {"0", "\[ImaginaryI]"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         RowBox[{
           RowBox[{"-", 
             FractionBox["4", "3"]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}, {
         RowBox[{
           RowBox[{"-", 
             FractionBox["4", "3"]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], "0"}}, RowSpacings -> 
       1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.6343206070485353`*^9, {3.634320689298135*^9, 3.634320699292156*^9}, 
   3.634474729107785*^9, 3.634475415952018*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausExpansion", "Subsection",
 CellChangeTimes->{{3.634309001890463*^9, 3.634309005384186*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausExpansion[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " calculates the right hand size of the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "A"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "B"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["t", "2"], "[", 
          RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]], "\[CenterDot]", 
      "\[CenterDot]", "\[CenterDot]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  to order ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     SuperscriptBox["t", "n"]], "."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 StyleBox["\nZassenhausExpansion[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " calculates the right hand size of the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "A"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "B"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["t", "2"], "[", 
          RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]], "\[CenterDot]", 
      "\[CenterDot]", "\[CenterDot]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  to order ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    SuperscriptBox["t", "n"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and then (effectively) sets ",
 StyleBox["t=1", "Input"],
 ". \n\nThis is done by first computing the Zassenhaus series using ",
 StyleBox["ZassenhausTerm", "Input"],
 " and ",
 StyleBox["ZassenhausGenerator", "Input"],
 ". See also ",
 StyleBox["ZassenhausSeries", "Input"],
 ". This function is memoized."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.634309014500841*^9, {3.634309048288368*^9, 3.634309186290958*^9}, {
   3.6343119782790737`*^9, 3.6343119857818327`*^9}, {3.634312136175186*^9, 
   3.6343121406062393`*^9}, 3.634317095020178*^9, {3.634320743347694*^9, 
   3.634320862833806*^9}, {3.634320954603911*^9, 3.634321011076398*^9}},
 CellTags->"ZassenhausExpansion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634312109980947*^9, 3.634312111499946*^9}}],

Cell["\<\
Compute orders 2 through 5 of the Zassenhaus expansion. Also compute the \
exact value.\
\>", "Text",
 CellChangeTimes->{{3.6343221012650957`*^9, 3.63432212469871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"-", "I"}], " ", 
    RowBox[{"TP", "[", "X", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"-", "I"}], " ", 
    RowBox[{"TP", "[", "Y", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ze", "[", "n", "]"}], "=", 
     RowBox[{"ZassenhausExpansion", "[", 
      RowBox[{"t", ",", "A", ",", "B", ",", "n"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ze", "[", "1", "]"}], "=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"t", 
     RowBox[{"(", 
      RowBox[{"A", "+", "B"}], ")"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634312232233507*^9, 3.634312259592136*^9}, 
   3.634316704154706*^9, {3.634316735672658*^9, 3.634316766317823*^9}, {
   3.634317274876029*^9, 3.634317324478438*^9}, {3.6343182589160423`*^9, 
   3.634318261301787*^9}, {3.6343210690127563`*^9, 3.634321121048031*^9}, {
   3.634321184793353*^9, 3.6343212570363894`*^9}, {3.634321296638329*^9, 
   3.6343213106496897`*^9}, {3.634321453754994*^9, 3.6343214564139557`*^9}, {
   3.6343215163466587`*^9, 3.6343215261438427`*^9}, {3.634321782596129*^9, 
   3.634321877483976*^9}}],

Cell["Plot the results.", "Text",
 CellChangeTimes->{{3.6343221360880404`*^9, 3.634322138011355*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"functions", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"ze", "[", "n", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"functions", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<Zassenhaus order \>\"", "<>", 
           RowBox[{"ToString", "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", "5"}], "}"}]}], "]"}], ",", 
        "\"\<Exact\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Absolute value of 1,1 element of matrix\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.634321133680304*^9, 3.634321160199954*^9}, {
   3.634321234799851*^9, 3.634321236377483*^9}, {3.634321276247572*^9, 
   3.634321290528595*^9}, {3.634321380242447*^9, 3.634321422562669*^9}, 
   3.6343215873022614`*^9, 3.634321665502515*^9, {3.6343217121216583`*^9, 
   3.634321767942007*^9}, {3.6343218950370827`*^9, 3.634322068092751*^9}, {
   3.634322160987262*^9, 3.634322165525853*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1gk0VdsfB3CRUoZ6vXhouBEXL1SiFy++VBoUMoWSORJFT/qbUgoVJSEV
tzLLkKmBJ4Xu5RKSWeZrynA5SVd6VP/dWWuvsz5r7XXO3us37C3j6Gl6gp+P
j+8BGb/eBidGG8vHLHQWfv56KHzMPeLYJ6UOH+Og+l+WEG6NfCq1B855Cxq/
/O/rII//0Y2QIROg+YNYVXN12gMpc9hkfmtfIOb7fSzmJ80aPQa+v80TN3Jf
XXag26JK+OvwHLGJU02xQ5wDPn32sZgl1nq/LT9ayhn/CPHsZog3aj/MYDJc
kGZxTvATsUiW0KMvNDesG57R5xJ/kfCOk09xR+4bb5lR4p4rPTeP0M/g9PzM
3UFip7mUN0xzL2Q/OJfZS9yuaq1jE3cWc8U8iw/E5QlMjZtS56D76NvFemL1
Jt8C+WM+uHMr8HsVcaaQqsprxnnk7+aTKCeO9rknR9H8kGq8XLKAeEmOYeJV
B3+8a4talEnsP8C/dkNKABwuSYYl/vq/8enfTehBkM7YZB9J3BEqe2vM9SKu
Hi96HkJM73UXrDC/hMnHe9L9ieNXywRbxwVjJMjZ6gTxleAI33CpEKygSvm2
E79e6/LiSEkIVolYqyoRzxXpfpE9Forp3q+za4g9pnieLxlhsDXSseYjNj9m
78qlXYeN2owD6weFyFmttOLy65htznR9Rlx9W3wwxCEcPxOchVKJtavf2q5L
iYCx50fpy8R0DY0jRvRIaEoqhmgS279fESvNjsTwB0FHOnGC+3jjiOst6F0e
61xFLNTYkF5mHoXmIOaD8e8UApeGylrF3catbTWud4idz1FS16VikcZvJdqx
QGGbQLR/oVcs9nxS9y4l5o9W7+pix2KFvZtjIvGjPD+G6vk7sDzZ2e1C3Dku
QGtpioPExKje1DwFYwdJOdqN++joWFM/8h+F9Z9KQvYP3oedX1o1k5gbdHz4
rFY8lLg3DROJwxnJ6azReDy1ujBjScxqV1Y6pc+ANm04r+IbyT8jPdXnPx4i
P9p8ImiO7KdnMLLX4hHE6kQumBO3u4dRS588QlOf8j0l4hLWCasnKokoW51x
qukrBauBLCm+7kS8uHrn0nri6HUajLQdyehqnPJK5JHvxR5I+jSdinsKt04e
/ExhfgdnPkk6DUJ5gV/Fiad6fI+Y7U7DT6YkrX+aQrPCY+EXsWlwPGy3w5v4
4csl5wP+SoeRiWZM7CeSr4NMgyUXMuCpWj7OnCLxUdP5skYoC4pPLOmt4xTM
2luN6rdkwTguuC6aeG/g6cwg6yz0Wv0jfJh4UxXDlpOVBYnabLOaMQqz1vPV
6YbZoJvFiRaNUrgRXPxga0wO3haKKl4coVD0Xm3fvvV5UFcc/V7BIfk0xt2v
vDcP5koJhueIXfgzDH47k4e9o9u06MQS6muMul7l4aG79Pi1fgova4OzilTz
8ciuLfVAH4U1m08VHHyXj13ZQ2HF3SS+PK0yb9FCRJzyXHyonayXX1LXRaYQ
n/PZn6fbKBSK8cqtNAqhZ08PukscrpD3Rvs4mW83785pJfGz3li19EkhCiZl
U71aKNwvFa5POPQU1YnOVwMbSXyudHcyI54hfHuLjEEthZX9dGXXpGegWUnw
db2lULPz7IXlRc/wfkH0lDux1qzgBpOBZ2jaKscJryHrddt8onfHc0RbStmw
2BR6jS5Tc8PPscgzNkyGRfJbWnGxqm4RmIMx/4aUUvAs8Fa59+VfZJ8/Oj+V
TeK7k9NcI1SC7X531DyIPaqN/OfXlqBx6cTisSwKJ/uU2Lb6JaCbcv05mSSe
ov328nFkfqJPTn0GhcNuh2IL/3oJX9c/FGJSKGyRkZ+v8y9Fcm5AWFM8hc9R
bdWLFpXB995ik43XSH1XVJU17HyDcOdMwV1HKbj5HRC15rLgf8xZWJxOoWKZ
2s+c02zcs3vpIE5NIT2F9UNa/i0Eewv23c2Zgq7Eq2Sz3DoIwzxJ5uQUVNjd
xVV/NkB5IVxBgjaFFl2zqcyp97h0c4JPr2YSHsvdm1q3NGHQnK0s5j2J2g7L
V2KRzcC5s57LVkzCbK8VZ2ioBZVZG1L107lkXxGWiXJtqFxdKsPW4aL/R0zL
yYvt+HtLBM+wegLDBxpSJJgdiB8pEvxmNoH8+31+jTKdCBbYyq1oGEfaNYHr
Sv5daD2Yb9Kybxw8p6PjLi+7IbCrfV0mcwzCe8JMC/7ohXyaYl+y6hgCVw6L
cGz6cNooznjnw1GIvN7E127Yj/kzy1I/CI9C+7zxd+Z//cjR8smrcv0IRuqN
lI0MDo75dM+014zA1kK9ftnBAQQuUamKkhrB89YTMa9nB2Cp29QR6DoMzbp8
/pG4QURdP2As8moIG/RdeDF7huC/wvdd0s9BaKhr3H42MgTz1YYhjw0G0ff5
Zk1K6DBsaEG0oDsD4G4zCZVSG4Hu2rK+7joO6BMq44uaR2AUH/V8iRgHLDmf
Jq/gj7i+K1zY+u9+3GppdTKVG0UAbw37zEgvKLPy2/ysUVxI4B2etuxBoYX4
bs2zY3DTF0/WS+pCSv2VBwOrxrGh2ll+HX8nvrJtAla9GQeDz2fKWasD/bfL
eCvPTKAzVz7Tx6cNs41/S10W48JP2CDC9m0LvGJly/1KudBXE53Onm3CH/Wy
K4dsJ5HsNyeySqcRZq05C2t/TCI48kVAqHgDPtsleXRnTeFw5c7yP21rUWaf
Fyp2iILm7qO5tf1slDR4HOw1orDPmmW6qZGNFzp//pZrQuHa8PL74RVs5KxN
Yxhakj55Xk5kfzIb8R3xT284UghxOxjz2okNn8NhnOV+5B6REngsfqQKm3SP
ay9NpzCoYhkixq0EPU9aoP0xBUaaVLdjdyVk13dUp5O6G+Z597yoq4Tkgqn5
3gLSx0Y/9hx/UoklxfvdQ0nd3v4Q051xphKczer3BZpJ3z66fanyNAvdD6dt
m0mfUbhxWTyAw0KHaJ5cSgeFGeO9jTWNLLybUMrf1UtB57GyqUshC6UZNHYw
6attydqXErxZKJbouWHCpaDosGLRqBMLT0PjTWUo0oeWHdiqbs5ClpN4b/kX
CnrW3MRadRbSmppSosg5cpHe1C8hz0KiXpSbPTm31BUkGx3EWWDkG27eQs7V
Ea+FszmCLNylCfN+3cs8pV8xZ3lM/B8BSR7e
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mYvPa63W/owoElYO/rchES1V93OFaCwJKRWpK93R4qudQ7YkkkCdLYpVQm+u
0g3nT0Nv26pSk0PAJts/ejfTSRAWO7JwG72Bq5pzUxYJGwzfGPmj19hIXufN
x/On86XroNlWssWsLiOhsqy15302ASwl9UeiK0g4eM5moRW9ZO6xhruahMiq
K5VF6F8PxuM460m45aTd6YdmmrQksLaR4Pk7LVoSPVcQ5lL7nASuFjbntX+P
Xzh80KWThBcXx2jzWfj+5Q4uDr7C55fN8a4HvXH+zlDUaxLmra0MGtFCR+wq
YICE764qpwvR0jN058K3JLDlhF4LQyvqlx2wHSHhw3e2yEto9TQvkY1jWO9f
/Gpn0Do6LP3+EyR8EWK/pos2uP3s4U4aifdNiPyLPs6IiiQoEk5nONvLoO2S
+TSPMXE8HtO369DO5DsB9u8kNBk/X7MS7bo388ejGRIO94/T5jMJ8Lrh+Mr1
JwmLLwqdp9H+E7KF236T8I+ZWOwEOmTX15DhRbz+cwct3qOjYqptY5dJMP8k
1tmHTvjou/sAKwUyniVjXejbqlqbfq6kgLvy292n6IxIduYDTgpc+Bl/GtH5
I12ddtwU3Pyazl6Lfqh0I5dvDe4znjyV5eiqUNPArnUUOJUpczxENwwLWQVu
oKAohW/5Prp1x0dVVT4K6DNV9/LQndfy1lGbKfD15v2Uje4dOEe/J0SB/0O5
l5noIWmlZ8dFKBhdYrPJQI/6z2ZwilFwquZOQjp6srfet1GCgrBFpstfMySv
mbpvp6B4mG36r3946ypJSVPwW+nNpr/j/X7JzfNelgK7LqfxLPQK8d7JeNwn
M/WrTXLRXF43W3SUKDio8OR8AXpdp9XdX8oUVI5cl3mA5hcRu1yiRsHG5LWx
pWgR98ljDrsosPI8mlKFlnxWJCewhwJzb33derScoBtH9z4KsgIXUlvQyhfU
xoO0KEjXcUpuR2s8+d2grk1BvH2Eag96P19LypQu3r/RSd8htP7ZMPdMfQoO
OBGOH9HHHh8+YmqAz39E7CeFtnUcXNF8jIIO4WzuZbTjozsjniYU9gMTMdw4
X1zW2NVKm+HxCr1V/GjfarpLojUFucK3Z5XQQavKDh60pUD30MW1gI486SWx
aEfB9vGJl4boFHaWYUcnChpOZ2hcQFeY8mnvdsf6jc4NV6IT1wWSzZ4UlFho
9D5De3SSsXqXKRD6U2g+jN65r3HYxI+CyRaWzcvoMkkHV9cwCsaS5MxN8H28
Mfpy42wEBUc93HrOot1uqz/yi8LzT7YNXUMrruZeeT2egjt2MbfL0CU/ylJz
UrHeYlvf8eN6EfdQCGTTKLj89FzfTrSrc+hEWToeL55jZYiWf2+u2JRDYZ/z
XCgcXdy61Db8kILUfYaWS+iihCNf17RSwJue1bUK178og5qbyW0UCPceaJZH
n2MX27OlnQJBI2/t42gZnx9h0i9x/PLw32no+3Z3tmi/oaCXzUdidz6+H4qk
njedgrKAbJMYXI/DKWPGEoOCmEFzzUdop5yGhDAmBddVlOoI9PbN8SOJMxQY
Hpe11Mb1PXdJzePhEgWBg3ZGbIW4H3WH3Pu0gQ5ZAi7s6bhfxOxcsMngo8OP
jp1Ow+jLNz2EbQToUH3rvOtG3G/0T9rfHRShQ5glj1c0epqhmdohTQebhGzL
kGICdq3+nVyiSQeFrt+XEktw/XZzP3F+Px1OneU/OITmHiA3SmPOzNn8plkY
97sPd4cSsw7RYc/qVXmF6GC56hvJJ+hwe7Fw74syAroPu8X4nqPDiFdvkjzu
pzUlNIN/L9AhcEKv0x+dueEUz8xFOpTwuOW+RHu8M4y64EUHi+JUA9cqAgTO
yUXaXaODtcxV60fVuN9dJ0L0UuggElTu4Yr7/c92G78NrXTYmBu94gTmC1ET
Pa/WNjrYcvjNV6P1RhUverTTIf/RtxiBZpyvM6wOfS/pEH9FOm4MrSpeeDhx
iA5vstKYl57g+X1nBTd8oUO41GGRx5hnGDvi6ngFpsD8nEBSK+ahTXVXKp4I
TYFiY+nGXZif9mjbF7uLTIGzqLJiCTrKUjXztcQU8K6+p57WjfMh/F1EgvwU
eMhFhgb2YH3HpMx5tacg8+JeLgfMYx8TmmfXu05BlVwF+z3Mcx+DDesT3aag
bj4oWBjz37jn+4BNnvh7Nt+QNPQn05+cAt5TkNAVy5uOue+zoKLQ1uAp4Hdn
WBeMEUBkpWvKp0zB7fDwlL7PBEyVX4041DQFvZsEOKMxj8693iMYvJYB7tpv
qgIw/7JcGPq5m5cBvsu9HDswL3Nzeb75tpEBOhrqX96iRTWLkuwFGVC4s+Hy
v6w00C0SWLtfkgGz7zh8fq2kQXLwLCuLBv4+iFcklZsGKiqljKuODNBcYf5N
F/O4W7JEi08jAx7Yr/9qiLlyc7fE+gnbLyDhzML/GvsDk8HiReGlL/C2W/S0
LPYP309luYwUTcPb49xCERM0aLYrDVt7hAlaQdWf5bD/qO9xMRg9ygTFDunp
K/Ik1GjK8pYYYx9d12DbhjmqWDgvzdCcCUVxVu62O0m4M3ynMuY09pHGSma3
1EnwOhY+zu3DhFbv51Nb9pMgp3VyH2c+E4Yqo8pdMTdJlQqxDWEfOhC7cn27
OeYw0eGOfOxbk0i77q2WJAgsHj+hV86EsLEhhz5rEjjq9M+HYR88Ombza489
CeOKqqls/UxIvJadJOZCwkj6N9v+QSZc+fG5LeACCcNrSiVzhplgG2tn/MGV
hFdTMmUHRtE1Yn533UloLNjaHkQx4bDTcR7hK5jr+D/EGDOYcKuedf1Vb8w9
YXeOizOZ8KpNwHUUc1qRA99oywwTvL5HqWX7k5DX15dz4yfef4R7+krMbZn7
b5y1+419eE3fKedAEtLKDBWV/jBh7KGnT9c1zEVbeWb//p/zZKrglHwwCf8D
/rIC0g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/jKHk6duEfA/ZFWB/g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/jKHk6duEfA/ZFWB/g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
QDI318+SVePw0/Gp10DOBCzZU+54ZJgB07FL1Z2f4/HquyZ5+hgw23r6D5E/
AQ5X9/4oxOekv7DjHrt4ApYlv62YrWAA/+a6fK63EzA3mJlvGMOALUO0n3Kd
E+CoV+W+3pgBR53kLl2cnwBBA+Pu2Hw62MVF7J37MwHuXFUFtAw6OLR9X36F
gw1vXAus/0ukg6vu64SwpWwYnJyq+RhGB5/NxpWPV7EhebnpU24XOkQMef6t
kWaDWH57WDk+h791yg8VOMgGnzeKa14FklDe6mUyaMaGqBPpYwd9SHi1R0Hw
xSE26PTtmGO6kZAnlpFoeoQNYYKb+Pfj82hCX0JRhAsbtptMkicV8L3A4uYw
3yU23Nn7PfvlF3y/eauX9eUynn9HWuLPNgK8lDm9c4LZ8PCu7g/dRnxf5w+c
NbrBhmE3PX6eYnwvf39+1e37bHiwnLVh3z0Ctuke1+HJZIN19juHCnx/kc3f
yN37jA11smc4f2sTICXe9z4zlw1Xr8eIG6kRILxw2MrgJRt+xOpySUkTsKzs
gGdoJRvs2xm0Kk4ChlXU4rk72UCYxCeTtTQYSPrh0NnNBua35y5nK2jQtzJf
Jq2PDd5TPJqrimnwiSlfsG8Q66nevvVRBg0qsyQar42x4bBIKV/NbRqUCX2N
OESxwfX0Z8/l12lQFJpwWJLNxn0R1OkRSIOcE+sHq6fYYHe0Ku7SWRpkdHSk
PZhhg1WW5smtp2mQsvfBaac5NuwWGRVku9AgscBUZfsf7E+iXHebPQ1iJVZM
//t/0qhCzqFmGxr8H/VqKBk=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Absolute value of 1,1 element of matrix\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1.2}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Exact\"", "\"Zassenhaus order 2\"", "\"Zassenhaus order 3\"", 
       "\"Zassenhaus order 4\"", "\"Zassenhaus order 5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6343213886301203`*^9, 3.63432142294214*^9}, 
   3.634321471000111*^9, 3.634321537302589*^9, 3.634321622585712*^9, 
   3.634321666476922*^9, {3.634321716993577*^9, 3.634321768548869*^9}, {
   3.634321920767069*^9, 3.634321987929991*^9}, {3.6343220302394257`*^9, 
   3.634322068942733*^9}, 3.634322166079812*^9, 3.6344755141235113`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.634310829711055*^9, 3.63431083062437*^9}}],

Cell["\<\
Casas, F., Murua, A., Nadinic, M., 2012. Efficient computation of the \
Zassenhaus formula. Computer Physics Communications 183, 2386\[Dash]2391\
\>", "Text",
 CellChangeTimes->{{3.6343108353538933`*^9, 3.634310840409165*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 972},
WindowMargins->{{Automatic, -10}, {Automatic, -7}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ClearMagnusCache::usage"->{
  Cell[3974, 110, 703, 14, 32, "Text",
   CellTags->"ClearMagnusCache::usage"]},
 "MagnusExpansionTerm::usage"->{
  Cell[4875, 133, 4767, 141, 338, "Text",
   CellTags->"MagnusExpansionTerm::usage"]},
 "MagnusExpansion::usage"->{
  Cell[22911, 681, 4203, 132, 338, "Text",
   CellTags->"MagnusExpansion::usage"]},
 "MagnusConvergenceTest::usage"->{
  Cell[30444, 904, 1789, 49, 161, "Text",
   CellTags->"MagnusConvergenceTest::usage"]},
 "AverageHamiltonianTerm::usage"->{
  Cell[36235, 1082, 4143, 133, 359, "Text",
   CellTags->"AverageHamiltonianTerm::usage"]},
 "AverageHamiltonian::usage"->{
  Cell[42302, 1283, 3992, 133, 338, "Text",
   CellTags->"AverageHamiltonian::usage"]},
 "FirstOrderEigenvector::usage"->{
  Cell[48950, 1509, 1682, 52, 118, "Text",
   CellTags->"FirstOrderEigenvector::usage"]},
 "SecondOrderEigenvalue::usage"->{
  Cell[54411, 1693, 1116, 33, 73, "Text",
   CellTags->"SecondOrderEigenvalue::usage"]},
 "ClearZassenhausCache::usage"->{
  Cell[57988, 1809, 751, 14, 32, "Text",
   CellTags->"ClearZassenhausCache::usage"]},
 "ZassenhausTerm::usage"->{
  Cell[58883, 1831, 2217, 79, 60, "Text",
   CellTags->"ZassenhausTerm::usage"]},
 "ZassenhausSeries::usage"->{
  Cell[63731, 2005, 2365, 84, 61, "Text",
   CellTags->"ZassenhausSeries::usage"]},
 "ZassenhausExpansion::usage"->{
  Cell[68605, 2163, 3228, 103, 126, "Text",
   CellTags->"ZassenhausExpansion::usage"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ClearMagnusCache::usage", 136161, 3479},
 {"MagnusExpansionTerm::usage", 136275, 3482},
 {"MagnusExpansion::usage", 136391, 3485},
 {"MagnusConvergenceTest::usage", 136510, 3488},
 {"AverageHamiltonianTerm::usage", 136635, 3491},
 {"AverageHamiltonian::usage", 136759, 3494},
 {"FirstOrderEigenvector::usage", 136882, 3497},
 {"SecondOrderEigenvalue::usage", 137007, 3500},
 {"ClearZassenhausCache::usage", 137130, 3503},
 {"ZassenhausTerm::usage", 137245, 3506},
 {"ZassenhausSeries::usage", 137357, 3509},
 {"ZassenhausExpansion::usage", 137474, 3512}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 355, 5, 66, "Chapter"],
Cell[CellGroupData[{
Cell[960, 31, 98, 1, 44, "Subsection"],
Cell[1061, 34, 438, 6, 28, "Input"],
Cell[1502, 42, 182, 4, 30, "Text"],
Cell[1687, 48, 512, 7, 46, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2236, 60, 101, 1, 36, "Subsection"],
Cell[2340, 63, 531, 12, 43, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[2908, 80, 110, 1, 51, "Section"],
Cell[3021, 83, 582, 12, 51, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3640, 100, 202, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[3867, 107, 104, 1, 45, "Subsection"],
Cell[3974, 110, 703, 14, 32, "Text",
 CellTags->"ClearMagnusCache::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4714, 129, 158, 2, 45, "Subsection"],
Cell[4875, 133, 4767, 141, 338, "Text",
 CellTags->"MagnusExpansionTerm::usage"],
Cell[CellGroupData[{
Cell[9667, 278, 224, 3, 35, "Subsubsection"],
Cell[9894, 283, 151, 3, 30, "Text"],
Cell[10048, 288, 176, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[10249, 294, 833, 25, 46, "Input"],
Cell[11085, 321, 1099, 28, 76, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12233, 355, 100, 1, 29, "Subsubsection"],
Cell[12336, 358, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[12495, 363, 1279, 32, 46, "Input"],
Cell[13777, 397, 1336, 31, 76, "Output"]
}, Open  ]],
Cell[15128, 431, 281, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[15434, 440, 593, 17, 46, "Input"],
Cell[16030, 459, 906, 25, 76, "Output"]
}, Open  ]],
Cell[16951, 487, 346, 8, 31, "Text"],
Cell[CellGroupData[{
Cell[17322, 499, 657, 18, 63, "Input"],
Cell[17982, 519, 820, 25, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18839, 549, 659, 18, 63, "Input"],
Cell[19501, 569, 769, 24, 63, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20319, 599, 150, 2, 29, "Subsubsection"],
Cell[20472, 603, 130, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[20627, 608, 716, 22, 46, "Input"],
Cell[21346, 632, 1304, 36, 80, "Output"]
}, Open  ]],
Cell[22665, 671, 92, 1, 28, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22806, 678, 102, 1, 45, "Subsection"],
Cell[22911, 681, 4203, 132, 338, "Text",
 CellTags->"MagnusExpansion::usage"],
Cell[CellGroupData[{
Cell[27139, 817, 172, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[27336, 823, 1109, 29, 55, "Input"],
Cell[28448, 854, 1823, 40, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30332, 901, 109, 1, 45, "Subsection"],
Cell[30444, 904, 1789, 49, 161, "Text",
 CellTags->"MagnusConvergenceTest::usage"],
Cell[CellGroupData[{
Cell[32258, 957, 155, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[32438, 963, 867, 23, 46, "Input"],
Cell[33308, 988, 608, 13, 52, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[33965, 1007, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[34095, 1012, 876, 27, 68, "Input"],
Cell[34974, 1041, 220, 4, 28, "Output"],
Cell[35197, 1047, 139, 2, 28, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35397, 1056, 100, 1, 44, "Subsection"],
Cell[35500, 1059, 127, 1, 30, "Text"],
Cell[35630, 1062, 264, 5, 30, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35943, 1073, 154, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[36122, 1079, 110, 1, 45, "Subsection"],
Cell[36235, 1082, 4143, 133, 359, "Text",
 CellTags->"AverageHamiltonianTerm::usage"],
Cell[CellGroupData[{
Cell[40403, 1219, 97, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[40525, 1224, 836, 25, 46, "Input"],
Cell[41364, 1251, 766, 22, 74, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42191, 1280, 108, 1, 45, "Subsection"],
Cell[42302, 1283, 3992, 133, 338, "Text",
 CellTags->"AverageHamiltonian::usage"],
Cell[CellGroupData[{
Cell[46319, 1420, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[46443, 1425, 830, 25, 46, "Input"],
Cell[47276, 1452, 993, 29, 76, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48330, 1488, 97, 1, 44, "Subsection"],
Cell[48430, 1491, 236, 4, 31, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48715, 1501, 105, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[48845, 1506, 102, 1, 45, "Subsection"],
Cell[48950, 1509, 1682, 52, 118, "Text",
 CellTags->"FirstOrderEigenvector::usage"],
Cell[CellGroupData[{
Cell[50657, 1565, 147, 2, 35, "Subsubsection"],
Cell[50807, 1569, 185, 4, 30, "Text"],
Cell[50995, 1575, 403, 11, 46, "Input"],
Cell[51401, 1588, 109, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[51535, 1593, 273, 5, 46, "Input"],
Cell[51811, 1600, 229, 6, 28, "Output"],
Cell[52043, 1608, 432, 14, 44, "Output"]
}, Open  ]],
Cell[52490, 1625, 191, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[52706, 1633, 294, 7, 28, "Input"],
Cell[53003, 1642, 323, 9, 35, "Output"]
}, Open  ]],
Cell[53341, 1654, 157, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[53523, 1661, 317, 9, 45, "Input"],
Cell[53843, 1672, 406, 11, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54310, 1690, 98, 1, 45, "Subsection"],
Cell[54411, 1693, 1116, 33, 73, "Text",
 CellTags->"SecondOrderEigenvalue::usage"],
Cell[CellGroupData[{
Cell[55552, 1730, 147, 2, 35, "Subsubsection"],
Cell[55702, 1734, 185, 4, 30, "Text"],
Cell[55890, 1740, 403, 11, 46, "Input"],
Cell[56296, 1753, 252, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[56573, 1761, 273, 5, 28, "Input"],
Cell[56849, 1768, 402, 11, 28, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57312, 1786, 150, 2, 44, "Subsection"],
Cell[57465, 1790, 185, 4, 31, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57699, 1800, 103, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[57827, 1805, 158, 2, 44, "Subsection"],
Cell[57988, 1809, 751, 14, 32, "Text",
 CellTags->"ClearZassenhausCache::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58776, 1828, 104, 1, 44, "Subsection"],
Cell[58883, 1831, 2217, 79, 60, "Text",
 CellTags->"ZassenhausTerm::usage"],
Cell[CellGroupData[{
Cell[61125, 1914, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[61250, 1919, 332, 9, 63, "Input"],
Cell[61585, 1930, 697, 19, 58, "Output"]
}, Open  ]],
Cell[62297, 1952, 313, 11, 31, "Text"],
Cell[CellGroupData[{
Cell[62635, 1967, 230, 7, 28, "Input"],
Cell[62868, 1976, 697, 19, 58, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63626, 2002, 102, 1, 44, "Subsection"],
Cell[63731, 2005, 2365, 84, 61, "Text",
 CellTags->"ZassenhausSeries::usage"],
Cell[CellGroupData[{
Cell[66121, 2093, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[66246, 2098, 462, 12, 63, "Input"],
Cell[66711, 2112, 1723, 41, 63, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68495, 2160, 107, 1, 45, "Subsection"],
Cell[68605, 2163, 3228, 103, 126, "Text",
 CellTags->"ZassenhausExpansion::usage"],
Cell[CellGroupData[{
Cell[71858, 2270, 98, 1, 35, "Subsubsection"],
Cell[71959, 2273, 178, 4, 30, "Text"],
Cell[72140, 2279, 1357, 35, 80, "Input"],
Cell[73500, 2316, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[73626, 2321, 1807, 42, 148, "Input"],
Cell[75436, 2365, 59987, 1085, 266, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135484, 3457, 97, 1, 44, "Subsection"],
Cell[135584, 3460, 236, 4, 31, "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
