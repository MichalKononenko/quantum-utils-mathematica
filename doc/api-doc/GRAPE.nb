(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    633849,      14527]
NotebookOptionsPosition[    604750,      13662]
NotebookOutlinePosition[    615561,      13947]
CellTagsIndexPosition[    612561,      13876]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["GRAPE` Documentation", "Chapter",
 CellChangeTimes->{{3.6333515346579514`*^9, 3.63335154627586*^9}, {
  3.633364320690548*^9, 3.63336432261762*^9}, {3.633369638229841*^9, 
  3.633369639626734*^9}, {3.6334392596239843`*^9, 3.633439260205854*^9}}],

Cell[CellGroupData[{

Cell["Preamble", "Subsection",
 CellChangeTimes->{{3.633351558518317*^9, 3.633351560041299*^9}, {
  3.633781248319159*^9, 3.633781249429679*^9}, {3.635193764338916*^9, 
  3.635193767599886*^9}, {3.6357763910767603`*^9, 3.635776391166196*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<GRAPE`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.633351696261045*^9, 3.633351701530016*^9}, {
  3.633369630403097*^9, 3.633369649792616*^9}, {3.633371974503627*^9, 
  3.633371979509849*^9}, {3.633439263683157*^9, 3.6334392647382183`*^9}, {
  3.63448171195175*^9, 3.634481712372257*^9}}],

Cell["\<\
The following packages are needed to run some code found in this \
documentation notebook.\
\>", "Text",
 CellChangeTimes->{{3.633781139005548*^9, 3.6337811426309013`*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Tensor`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<QuantumSystems`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634314144340521*^9, 3.634314148861907*^9}, {
  3.6351938103659153`*^9, 3.635193819797866*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6351824420646763`*^9, 3.635182446927919*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Open Source Code\"\>",
  Appearance->Automatic,
  ButtonFunction:>(Needs["QUDevTools`"]; NotebookOpen[
     FileNameJoin[{QUDevTools`$QUSourcePath, 
       StringJoin[
        FileBaseName[
         NotebookFileName[]], ".m"]}]]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.635182609676621*^9, 3.6351826444407997`*^9}, {
  3.635182842680962*^9, 3.63518284820653*^9}, {3.635182903083259*^9, 
  3.635182906619155*^9}, {3.635182952870352*^9, 3.635182956778173*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction and Overview", "Section",
 CellChangeTimes->{{3.633351563673402*^9, 3.633351567143589*^9}}],

Cell[TextData[{
 "This package contains an implementation of GRadient Ascent Pulse \
Engineering (GRAPE) exposed as the function ",
 StyleBox["FindPulse", "Input"],
 "; a conjugate-gradient ascent algorithm for finding optimal control pulses \
for quantum systems. It also contains a wealth of options and features \
including:\n    \[Bullet] Optimization over arbitrary parameter distributions\
\n    \[Bullet] Support for the discretized distortion operator framework\n   \
 \[Bullet] Control utility function customization for state-to-state \
transfers, unitary targets, superoperator targets, subspace targets, etc.\n   \
 \[Bullet] Custom pulse penalties, derivative masks, and pulse legalizers\n   \
 \[Bullet] Tools for producing publication quality pulse plots and robustness \
plots\n    \[Bullet] Various export formats"
}], "Text",
 CellChangeTimes->{{3.63336976465697*^9, 3.6333698346703863`*^9}, {
  3.633369866272846*^9, 3.633369887648974*^9}, {3.633369949703978*^9, 
  3.633369955653768*^9}, {3.633370004311841*^9, 3.633370006392604*^9}, {
  3.633370062385489*^9, 3.633370284437573*^9}, {3.633370463585658*^9, 
  3.6333704707289658`*^9}, {3.6344817728884087`*^9, 3.634481861576255*^9}, {
  3.634481891879867*^9, 3.634482015550557*^9}, {3.634482047838583*^9, 
  3.634482122061866*^9}, {3.634482155710588*^9, 3.634482272094702*^9}, {
  3.634482321437049*^9, 3.634482375741543*^9}, {3.634482414132523*^9, 
  3.63448243106884*^9}, {3.634483941546707*^9, 3.6344839442660923`*^9}, {
  3.634484931716042*^9, 3.634484935728187*^9}, {3.6345010492991533`*^9, 
  3.6345010631069813`*^9}}],

Cell[CellGroupData[{

Cell["References", "Subsubsection",
 CellChangeTimes->{{3.634498044285822*^9, 3.6344980452557173`*^9}}],

Cell[TextData[{
 StyleBox["GRAPE:",
  FontWeight->"Bold"],
 "\n\[Bullet] Khaneja, N., Reiss, T., Kehlet, C., \
Schulte-Herbr\[UDoubleDot]ggen, T., Glaser, S.J., 2005. Optimal control of \
coupled spin dynamics: design of NMR pulse sequences by gradient ascent \
algorithms. Journal of Magnetic Resonance 172, 296\[Dash]305. \
doi:10.1016/j.jmr.2004.11.004"
}], "Text",
 CellChangeTimes->{{3.634498087368287*^9, 3.6344981128204327`*^9}}],

Cell[TextData[{
 StyleBox["Discrete Distortion Operators:\n\[Bullet] ",
  FontWeight->"Bold"],
 "http://arxiv.org/abs/1409.8178"
}], "Text",
 CellChangeTimes->{{3.634498117470344*^9, 3.634498145821396*^9}, 
   3.634498176689002*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindPulse", "Section",
 CellChangeTimes->{{3.63335202563237*^9, 3.6333520385490847`*^9}, {
  3.633372936258585*^9, 3.6333729402331753`*^9}, {3.6344826279786577`*^9, 
  3.634482629265338*^9}}],

Cell[TextData[{
 StyleBox["FindPulse[", "Input"],
 StyleBox["initialGuess", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["target", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Phi]target", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["controlRange", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hcontrol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hint", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a ",
 StyleBox["Pulse", "Input"],
 " object containing the best control pulse found by the algorithm.\n\n",
 StyleBox["Arguments",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] ",
 StyleBox["initialGuess", "Input"],
 " specifies the initial guess for the gradient ascent, of the form ",
 StyleBox["{{dt1,a11,a12,...},{dt2,a21,a22,...},{dt3,a31,a32,...},...}", 
  "Input"],
 " where the ",
 StyleBox["dt", "Input"],
 "\[CloseCurlyQuote]s are pulse lengths and the ",
 StyleBox["a", "Input"],
 "\[CloseCurlyQuote]s are input pulse amplitudes. ",
 StyleBox["FindPulse", "Input"],
 " has the ",
 StyleBox["HoldFirst", "Input"],
 " attribute. Therefore, changing initial initial guesses across repeated \
attempts can be implemented with delayed evaluation of ",
 StyleBox["initialGuess", "Input"],
 ".\n\[Bullet] ",
 StyleBox["target", "Input"],
 " specifies the desired optimal target (e.g. final state or unitary) and \
also indicates which utility function should be used.\n\[Bullet] ",
 StyleBox["\[Phi]target", "Input"],
 " specifes the desired utility function value (e.g. ",
 StyleBox["0.99", "Input"],
 " or ",
 StyleBox["0.999", "Input"],
 ")\n\[Bullet] ",
 StyleBox["controlRange", "Input"],
 " specifies the maximum and minumum allowed values for input control \
amplitudes for each channel in the form ",
 StyleBox["{{min1,max1},{min2,max2},...}", "Input"],
 ". \n\[Bullet] ",
 StyleBox["Hcontrol", "Input"],
 " is a list of control Hamiltonians\n\[Bullet] ",
 StyleBox["Hint", "Input"],
 " is the internal Hamiltonian\n\n",
 StyleBox["Return Format",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nSee the documentation for ",
 StyleBox["Pulse", "Input"],
 ".\n\n",
 StyleBox["Exit Conditions",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nConjugate gradient ascent will be attempted a maximum number of times \
given by the option ",
 StyleBox["Repetitions", "Input"],
 ", where the initial guess can change between repetitions. \nIf any solution \
ever exceeds a utility function value of ",
 StyleBox["\[Phi]target", "Input"],
 ", no more repetitions will be attempted.\nIf the maximum number of \
repetitions is attempted but the utility function value has never exceeded ",
 StyleBox["\[Phi]target", "Input"],
 ", the best solution found across repetitions will be returned.\nA \
particular repetition exits from the conjugate gradient ascent algorithm if \
any of the following become ",
 StyleBox["True", "Input"],
 ":\n\[Bullet] The utility function value exceeds ",
 StyleBox["\[Phi]target\n", "Input"],
 "\[Bullet] The number of iterations exceeds ",
 StyleBox["MaximumIterations\n", "Input"],
 "\[Bullet] The step size in the gradient direction drops below ",
 StyleBox["MinimumStepSize", "Input"],
 "\n\[Bullet] The average utility function improvement over 5 iterations \
drops below ",
 StyleBox["MinimumImprovement", "Input"],
 "\n\[Bullet] The conjugate direction was reset more than 9 times. This \
usually indicates the amplitudes need more range.\n\[Bullet] The user \
triggered an abort from the ",
 StyleBox["MonitorFunction", "Input"],
 "\n\n",
 StyleBox["Physical Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 StyleBox["ParameterDistribution", "Input"],
 ", ",
 StyleBox["DistortionOperator", "Input"],
 ", ",
 StyleBox["ForceDistortionDependence", "Input"],
 ", ",
 StyleBox["PulsePenalty", "Input"],
 ", ",
 StyleBox["DerivativeMask", "Input"],
 ", ",
 StyleBox["PostIterationFunction", "Input"],
 ", ",
 StyleBox["PulseLegalizer", "Input"],
 ", ",
 StyleBox["ControlLimitPolicy", "Input"],
 StyleBox["\nGradient Ascent Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 StyleBox["Repetitions", "Input"],
 StyleBox[", ",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 StyleBox["InitialStepSize", "Input"],
 ", ",
 StyleBox["MinimumStepSize", "Input"],
 ", ",
 StyleBox["LineSearchMethod", "Input"],
 ", ",
 StyleBox["MinimumImprovement", "Input"],
 ", ",
 StyleBox["MinimumIterations", "Input"],
 ", ",
 StyleBox["MaximumIterations", "Input"],
 StyleBox["\nUtilitarian Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["MonitorFunction", "Input"],
 ", ",
 StyleBox["SkipChecks", "Input"],
 ", ",
 StyleBox["VerboseAscent", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634482976328269*^9, 3.6344832475196657`*^9}, {
  3.634483318232388*^9, 3.634483519194735*^9}, {3.634483565845886*^9, 
  3.6344839035313787`*^9}, {3.634484904701367*^9, 3.634484905427792*^9}, {
  3.634484940678618*^9, 3.634484941259267*^9}, {3.634496212133994*^9, 
  3.6344963360489817`*^9}, {3.634496366243856*^9, 3.634496606337641*^9}, {
  3.63449695102985*^9, 3.6344974762314577`*^9}, {3.634497555140671*^9, 
  3.634497586386594*^9}, {3.634497852596785*^9, 3.634497870292601*^9}, {
  3.634497906828107*^9, 3.634497949284109*^9}, {3.634498201410081*^9, 
  3.634498201601128*^9}, {3.634500988568844*^9, 3.634501016237685*^9}, {
  3.63519562572445*^9, 3.635195625762834*^9}, {3.635199222392661*^9, 
  3.635199244423315*^9}},
 CellTags->"FindPulse::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 CellChangeTimes->{{3.634483922416913*^9, 3.634483923172635*^9}}],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
 CellChangeTimes->{{3.6344961817560587`*^9, 3.6344961837864847`*^9}}],

Cell[BoxData[GridBox[{
   {
    StyleBox["Option", "Text",
     FontWeight->Bold], 
    StyleBox[
     RowBox[{"Default", " ", "Value"}], "Text",
     FontWeight->Bold], 
    StyleBox["Description", "Text",
     FontWeight->Bold]},
   {"InitialStepSize", 
    FractionBox["1", "1000"], 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["InitialStepSize", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "which", " ", "quantifies", " ", 
      "the", " ", "initial", " ", "value", " ", "of", " ", "how", " ", "far", 
      " ", "one", " ", "should", " ", "go", " ", "in", " ", "the", " ", 
      "steepest", " ", "accent", " ", 
      RowBox[{"direction", "."}]}], "Text"]},
   {"GRAPE`Private`MinimumStepsize", 
    FractionBox["1", "100000000"], 
    StyleBox[
     RowBox[{"No", " ", "description", " ", 
      RowBox[{"available", "."}]}], "Text"]},
   {"MinimumImprovement", 
    FractionBox["1", "10000000000"], 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["MinimumImprovement", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "which", " ", "specifies", " ", 
      "how", " ", "much", " ", "the", " ", "utility", " ", "function", " ", 
      "needs", " ", "to", " ", "improve", " ", "by", " ", 
      RowBox[{"(", 
       RowBox[{"in", " ", "a", " ", "running", " ", "average"}], ")"}], " ", 
      "in", " ", "order", " ", "not", " ", "to", " ", "exit", " ", "the", " ", 
      RowBox[{"ascent", "."}]}], "Text"]},
   {"MonitorFunction", "FidelityProgressBar", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["MonitorFunction", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "specifying", " ", "which", " ", 
       "function", " ", "should", " ", "be", " ", "called", " ", "as", " ", 
       "a", " ", "realtime", " ", "monitoring", " ", "function", " ", "of", 
       " ", "the", " ", 
       RowBox[{"algorithm", ".", " ", "This"}], " ", "function", " ", 
       "should", " ", "take", " ", "the", " ", "following", " ", 
       RowBox[{"arguments", ":", " ", 
        TagBox[
         StyleBox["GRAPE", "Input",
          FontFamily->"Courier"],
         DisplayForm]}]}], ",", " ", 
      TagBox[
       StyleBox["bestPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      TagBox[
       StyleBox["overallBestPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      TagBox[
       StyleBox["overallBestCost", "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      TagBox[
       StyleBox[
        RowBox[{"{", 
         RowBox[{"rawUtility", ",", " ", "cost"}], "}"}], "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      TagBox[
       StyleBox["\[Epsilon]Range", "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      TagBox[
       StyleBox["costList", "Input",
        FontFamily->"Courier"],
       DisplayForm], ",", " ", 
      RowBox[{
       RowBox[{
        TagBox[
         StyleBox["abortButton", "Input",
          FontFamily->"Courier"],
         DisplayForm], ".", " ", "This"}], " ", "option", " ", "can", " ", 
       "also", " ", "be", " ", "set", " ", "to", " ", 
       TagBox[
        StyleBox["Off", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], ",", " ", 
      RowBox[{
      "in", " ", "which", " ", "case", " ", "a", " ", "trivial", " ", 
       "monitor", " ", "function", " ", "is", " ", 
       RowBox[{"used", "."}]}]}], "Text"]},
   {"Repetitions", "1", 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["Repetitions", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "that", " ", "specifying", " ", 
      "how", " ", "many", " ", "different", " ", "initial", " ", "guesses", 
      " ", "should", " ", "be", " ", "tried", "  ", "before", " ", "giving", 
      " ", "up", " ", "with", " ", "the", " ", "desired", " ", "utility", " ", 
      RowBox[{"function", ".", " ", 
       TagBox[
        StyleBox["Infinity", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], " ", "is", " ", "a", " ", "valid", " ", 
      RowBox[{"value", "."}]}], "Text"]},
   {"SkipChecks", "False", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["SkipChecks", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "that"}], ",", " ", 
      RowBox[{"when", " ", "set", " ", "to", " ", 
       TagBox[
        StyleBox["True", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], ",", " ", 
      RowBox[{
      "skips", " ", "all", " ", "of", " ", "the", " ", "preliminary", " ", 
       "consistency", " ", "checks", " ", "of", " ", "input", " ", 
       RowBox[{"arguments", "."}]}]}], "Text"]},
   {"VerboseAscent", "False", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["VerboseAscent", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "which", " ", "can", " ", "be", " ",
        "set", " ", "to", " ", 
       TagBox[
        StyleBox["True", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "or", " ", 
       TagBox[
        StyleBox["False", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], ",", " ", 
      RowBox[{
      "and", " ", "determines", " ", "whether", " ", "to", " ", "print", " ", 
       "diagnostic", " ", "ascent", " ", "information", " ", "at", " ", 
       "every", " ", 
       RowBox[{"iteration", "."}]}]}], "Text"]},
   {"DistortionOperator", "None", 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           TagBox[
            StyleBox["DistortionOperator", "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "is", " ", "a", " ", 
           TagBox[
            StyleBox["FindPulse", "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "option", " ", "hat", " ", "specifies", " ", 
           "how", " ", "a", " ", "pulse", " ", "is", " ", "distorted", " ", 
           "before", " ", "it", " ", "is", " ", 
           RowBox[{"simulated", ".", " ", "It"}], " ", "should", " ", "be", 
           " ", "a", " ", "function", " ", "of", " ", "the", " ", "form", " ", 
           TagBox[
            StyleBox[
             RowBox[{"Distortion", "["}], "Input",
             FontFamily->"Courier"],
            DisplayForm], 
           TagBox[
            StyleBox["inputPulse", "Input",
             FontFamily->"Courier",
             FontWeight->"Plain",
             FontSlant->"Italic"],
            DisplayForm]}], 
          TagBox[
           StyleBox[",", "Input",
            FontFamily->"Courier"],
           DisplayForm], 
          TagBox[
           StyleBox["returnJacobian", "Input",
            FontFamily->"Courier",
            FontWeight->"Plain",
            FontSlant->"Italic"],
           DisplayForm]}], 
         TagBox[
          StyleBox["]", "Input",
           FontFamily->"Courier"],
          DisplayForm]}], ",", " ", 
        RowBox[{
        "returning", " ", "just", " ", "the", " ", "distorted", " ", "pulse", 
         " ", "if", " ", 
         TagBox[
          StyleBox["returnJacobian", "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "is", " ", 
         TagBox[
          StyleBox["False", "Input",
           FontFamily->"Courier"],
          DisplayForm]}], ",", " ", 
        RowBox[{
        "and", " ", "a", " ", "tuple", " ", "of", " ", "the", " ", "form", 
         " ", 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"distortedPulse", ",", " ", "jacobian"}], "}"}], "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "if", " ", 
         TagBox[
          StyleBox["returnJacobian", "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "is", " ", 
         RowBox[{
          TagBox[
           StyleBox["True", "Input",
            FontFamily->"Courier"],
           DisplayForm], ".", " ", "The"}], " ", "input", " ", "and", " ", 
         "output", " ", "pulses", " ", "should", " ", "be", " ", "of", " ", 
         "the", " ", "form", " ", 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t1", ",", "a11", ",", "..", ",", "a1K"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t2", ",", "a21", ",", "...", ",", "a2K"}], "}"}], ",", 
             "...", ",", 
             RowBox[{"{", 
              RowBox[{"tN", ",", "aN1", ",", "...", ",", "ANK"}], "}"}]}], 
            "}"}], "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "where", " ", 
         TagBox[
          StyleBox["K", "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "and", " ", 
         TagBox[
          StyleBox["N", "Input",
           FontFamily->"Courier"],
          DisplayForm], " ", "don"}]}], "\[CloseCurlyQuote]"}], "t", " ", 
      "have", " ", "to", " ", "be", " ", "equal", " ", "for", " ", "the", " ",
       "input", " ", "and", " ", "output", " ", 
      RowBox[{"pulses", ".", " ", "Set"}], " ", "to", " ", 
      TagBox[
       StyleBox["None", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "for", " ", "the", " ", "identity", " ", 
      RowBox[{"distortion", "."}]}], "Text"]},
   {"PulsePenalty", "None", 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          TagBox[
           StyleBox["PulsePenalty", "Input",
            FontFamily->"Courier"],
           DisplayForm], " ", "is", " ", "a", " ", 
          TagBox[
           StyleBox["FindPulse", "Input",
            FontFamily->"Courier"],
           DisplayForm], " ", "option", " ", "which", " ", "specifies", " ", 
          "a", " ", "penalty", " ", "to", " ", "subtract", " ", "from", " ", 
          "the", " ", "utility", " ", 
          RowBox[{"function", ".", " ", "Similar"}], " ", "to", " ", 
          TagBox[
           StyleBox["DistortionOperator", "Input",
            FontFamily->"Courier"],
           DisplayForm]}], ",", " ", 
         RowBox[{
         "it", " ", "should", " ", "be", " ", "a", " ", "function", " ", "of",
           " ", "the", " ", "form", " ", 
          TagBox[
           StyleBox[
            RowBox[{"Penalty", "["}], "Input",
            FontFamily->"Courier"],
           DisplayForm], 
          TagBox[
           StyleBox["pulse", "Input",
            FontFamily->"Courier",
            FontWeight->"Plain",
            FontSlant->"Italic"],
           DisplayForm]}], 
         TagBox[
          StyleBox[",", "Input",
           FontFamily->"Courier"],
          DisplayForm], 
         TagBox[
          StyleBox["returnGradient", "Input",
           FontFamily->"Courier",
           FontWeight->"Plain",
           FontSlant->"Italic"],
          DisplayForm]}], 
        TagBox[
         StyleBox["]", "Input",
          FontFamily->"Courier"],
         DisplayForm]}], " ", "which", " ", "returns", " ", "a", " ", "real", 
       " ", "number", " ", "when", " ", 
       TagBox[
        StyleBox["returnGradient", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", 
       TagBox[
        StyleBox["False", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], ",", " ", 
      RowBox[{"and", " ", "a", " ", "tuple", " ", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          StyleBox["cost", "Input",
           FontFamily->"Courier"],
          DisplayForm], ",", " ", 
         TagBox[
          StyleBox["gradient", "Input",
           FontFamily->"Courier"],
          DisplayForm]}], "}"}], " ", "when", " ", 
       TagBox[
        StyleBox["returnGradient", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", 
       RowBox[{
        TagBox[
         StyleBox["True", "Input",
          FontFamily->"Courier"],
         DisplayForm], ".", " ", "Set"}], " ", "to", " ", 
       TagBox[
        StyleBox["None", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "to", " ", "use", " ", "the", " ", "zero", " ", 
       RowBox[{"distortion", "."}]}]}], "Text"]},
   {"ParameterDistribution", "None", 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           TagBox[
            StyleBox["ParameterDistribution", "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "is", " ", "a", " ", 
           TagBox[
            StyleBox["FindPulse", "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "option", " ", "that", " ", "accepts", " ", 
           "a", " ", "function", " ", "which", " ", "takes", " ", "a", " ", 
           "single", " ", "argument"}], ",", " ", 
          RowBox[{
           TagBox[
            StyleBox["cost", "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", 
           RowBox[{"(", 
            RowBox[{"between", " ", 
             TagBox[
              StyleBox["0", "Input",
               FontFamily->"Courier"],
              DisplayForm], " ", "and", " ", 
             TagBox[
              StyleBox["1", "Input",
               FontFamily->"Courier"],
              DisplayForm]}], ")"}]}], ",", " ", 
          RowBox[{
          "and", " ", "returns", " ", "a", " ", "pair", " ", "of", " ", "the",
            " ", "form", " ", 
           TagBox[
            StyleBox[
             RowBox[{"{", 
              RowBox[{"ps", ",", 
               RowBox[{"{", 
                RowBox[{"rep1", ",", "rep2", ",", "...", ",", "repN"}], 
                "}"}]}], "}"}], "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "where", " ", 
           TagBox[
            StyleBox[
             RowBox[{"ps", "=", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2", ",", "...", ",", "pN"}], "}"}]}], 
             "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "and", " ", 
           TagBox[
            StyleBox[
             RowBox[{"repn", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"symbol1", "->", "valuen1"}], ",", 
                RowBox[{"symbol2", "->", "valuen2"}], ",", "..."}], "}"}]}], 
             "Input",
             FontFamily->"Courier"],
            DisplayForm], " ", "such", " ", "that", " ", "the", " ", 
           TagBox[
            StyleBox["p", "Input",
             FontFamily->"Courier"],
            DisplayForm]}]}], "\[CloseCurlyQuote]"}], "s", " ", "are", " ", 
        "positive", " ", "and", " ", "sum", " ", "to", " ", 
        RowBox[{"unity", ".", " ", "Each"}], " ", "iteration", " ", "of", " ",
         "GRAPE"}], ",", " ", 
       RowBox[{
       "this", " ", "function", " ", "is", " ", "called", " ", "and", " ", 
        "the", " ", "utility", " ", "function", " ", 
        RowBox[{"(", 
         RowBox[{
         "and", " ", "hence", " ", "too", " ", "the", " ", "gradient"}], 
         ")"}], " ", "becomes", " ", "a", " ", "convex", " ", "combination", 
        " ", "over", " ", "the", " ", "N", " ", "replacement", " ", "rules", 
        " ", "with", " ", "respective", " ", "weights", " ", 
        RowBox[{
         TagBox[
          StyleBox["ps", "Input",
           FontFamily->"Courier"],
          DisplayForm], ".", " ", "The"}], " ", "replacement", " ", "rules", 
        " ", "are", " ", "applied", " ", "to", " ", "all", " ", "of"}]}], 
      "\n", "    ", 
      RowBox[{
      "\[Bullet]", " ", "the", " ", "pulse", " ", "after", " ", 
       "distortion"}], "\n", "    ", 
      RowBox[{"\[Bullet]", " ", "the", " ", "penalty"}], "\n", "    ", 
      RowBox[{"\[Bullet]", " ", "the", " ", "internal", " ", "Hamiltonian"}], 
      "\n", "    ", 
      RowBox[{"\[Bullet]", " ", "the", " ", "control", " ", "Hamiltonians"}], 
      "\n", "    ", 
      RowBox[{"\[Bullet]", " ", "the", " ", "target"}]}], "Text"]},
   {"ForceDistortionDependence", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["ForceDistortionDependence", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "Boolean", " ", "option", " ", "which"}], ",", " ", 
      RowBox[{"if", " ", 
       TagBox[
        StyleBox["True", "Input",
         FontFamily->"Courier"],
        DisplayForm]}], ",", " ", 
      RowBox[{"indicates", " ", "that", " ", "the", " ", 
       TagBox[
        StyleBox["DistortionOperator", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "depends", " ", "on", " ", "the", " ", 
       "distribution", " ", "symbols", " ", "specified", " ", "in", " ", 
       RowBox[{
        TagBox[
         StyleBox["ParameterDistribution", "Input",
          FontFamily->"Courier"],
         DisplayForm], ".", " ", "Normally"}]}], ",", " ", 
      RowBox[{"dependence", " ", "is", " ", "checked", " ", "automatically"}],
       ",", " ", 
      RowBox[{
       RowBox[{
       "but", " ", "this", " ", "can", " ", "fail", " ", "in", " ", "some", 
        " ", "pathological", " ", "cases"}], ";", " ", 
       RowBox[{
        TagBox[
         StyleBox[
          RowBox[{"ForceDistortionDependence", "\[Rule]", "True"}], "Input",
          FontFamily->"Courier"],
         DisplayForm], " ", "overrides", " ", "automatic", " ", "detection", 
        " ", "in", " ", "these", " ", 
        RowBox[{"cases", ".", " ", "If"}], " ", 
        TagBox[
         StyleBox["False", "Input",
          FontFamily->"Courier"],
         DisplayForm]}]}], ",", " ", 
      RowBox[{"no", " ", "checking", " ", "is", " ", 
       RowBox[{"performed", ".", " ", "Default"}], " ", "is", " ", 
       RowBox[{
        TagBox[
         StyleBox["Automatic", "Input",
          FontFamily->"Courier"],
         DisplayForm], "."}]}]}], "Text"]},
   {"LineSearchMethod", 
    RowBox[{"QuadraticFitLineSearch", "[", "]"}], 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["LineSearchMethod", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "which", " ", "specifies", " ", "a", 
      " ", "callable", " ", "function", " ", "that", " ", "performs", " ", 
      "the", " ", "line", " ", "search", " ", "once", " ", "a", " ", "good", 
      " ", "direction", " ", "has", " ", "been", " ", 
      RowBox[{"found", "."}]}], "Text"]},
   {"ControlLimitPolicy", "Ignore", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["ControlLimitPolicy", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "which", " ", "specifies", " ", 
       "what", " ", "should", " ", "be", " ", "done", " ", "when", " ", "a", 
       " ", "control", " ", "value", " ", "is", " ", "at", " ", "the", " ", 
       "boundary", " ", "after", " ", 
       RowBox[{"legalizing", ".", " ", "By"}], " ", "default"}], ",", " ", 
      RowBox[{"nothing", " ", "is", " ", "done"}], ",", " ", 
      RowBox[{
      "but", " ", "this", " ", "can", " ", "cause", " ", "successive", " ", 
       "\[Beta]", " ", "resets", " ", "in", " ", "the", " ", "conjugate", " ",
        "gradient", " ", 
       RowBox[{"ascent", ".", " ", 
        TagBox[
         StyleBox["Possible", "Input",
          FontFamily->"Courier"],
         DisplayForm]}], " ", "values", " ", "are", " ", 
       TagBox[
        StyleBox["Ignore", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "and", " ", 
       RowBox[{
        TagBox[
         StyleBox["ProjectGradient", "Input",
          FontFamily->"Courier"],
         DisplayForm], "."}]}]}], "Text"]},
   {"MinimumIterations", "0", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["MinimumIterations", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "that", " ", "specifies", " ", 
       "the", " ", "number", " ", "of", " ", "minimum", " ", "iterations", 
       " ", "to", " ", "be", " ", "performed", " ", "before", " ", 
       "accepting", " ", "a", " ", "target", " ", "utility", " ", "function", 
       " ", 
       RowBox[{"value", ".", " ", "This"}], " ", "is", " ", "mainly", " ", 
       "useful", " ", "for", " ", "broadening", " ", "distributions"}], ",", 
      " ", 
      RowBox[{
      "to", " ", "make", " ", "sure", " ", "that", " ", "some", " ", 
       "improvement", " ", "is", " ", "made", " ", "with", " ", "every", " ", 
       "broadening"}], ",", " ", 
      RowBox[{
      "even", " ", "if", " ", "the", " ", "initial", " ", "guess", " ", "is", 
       " ", 
       RowBox[{
        RowBox[{
        "\[OpenCurlyDoubleQuote]", "good", "\[CloseCurlyDoubleQuote]"}], 
        "."}]}]}], "Text"]},
   {"MaximumIterations", "\[Infinity]", 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["MaximumIterations", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "that", " ", "specifies", " ", "the",
       " ", "maximum", " ", "number", " ", "of", " ", "iterations", " ", "to",
       " ", "take", " ", "in", " ", "the", " ", "gradient", " ", "ascent", 
      " ", "before", " ", "giving", " ", 
      RowBox[{"up", "."}]}], "Text"]},
   {"PostIterationFunction", "Identity", 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["PostIterationFunction", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "which", " ", "specifies", " ", "a", 
      " ", "funciton", " ", "that", " ", "is", " ", "called", " ", "on", " ", 
      "the", " ", "pulse", " ", "immediately", " ", "after", " ", "the", " ", 
      "old", " ", "pulse", " ", "has", " ", "been", " ", "updated", " ", 
      "with", " ", "the", " ", "step", " ", "size", " ", "multiplied", " ", 
      "by", " ", "the", " ", "stepping", " ", 
      RowBox[{"direction", ".", " ", "The"}], " ", "pulse", " ", "is", " ", 
      "changed", " ", "to", " ", "the", " ", "output", " ", "value", " ", 
      "of", " ", "this", " ", 
      RowBox[{"function", "."}]}], "Text"]},
   {"DerivativeMask", "None", 
    StyleBox[
     RowBox[{
      RowBox[{
       TagBox[
        StyleBox["DerivativeMask", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "is", " ", "a", " ", 
       TagBox[
        StyleBox["FindPulse", "Input",
         FontFamily->"Courier"],
        DisplayForm], " ", "option", " ", "that", " ", "specifies", " ", "an",
        " ", "array", " ", "that", " ", "is", " ", "element"}], "-", 
      RowBox[{
      "wise", " ", "multiplied", " ", "by", " ", "the", " ", "gradient", " ", 
       "array", " ", "at", " ", "each", " ", "iteration", " ", "of", " ", 
       "the", " ", "gradient", " ", 
       RowBox[{"ascent", "."}]}]}], "Text"]},
   {"PulseLegalizer", "LegalisePulse", 
    StyleBox[
     RowBox[{
      TagBox[
       StyleBox["PulseLegalizer", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "is", " ", "a", " ", 
      TagBox[
       StyleBox["FindPulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "option", " ", "which", " ", "provides", " ", "a", 
      " ", "function", " ", "accepting", " ", "arguments", " ", 
      TagBox[
       StyleBox["pulse", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "and", " ", 
      TagBox[
       StyleBox["\[Epsilon]Range", "Input",
        FontFamily->"Courier"],
       DisplayForm], " ", "and", " ", "returns", " ", "a", " ", "new", " ", 
      "pulse", " ", "which", " ", "is", " ", 
      RowBox[{
       RowBox[{"\[OpenCurlyQuote]", "legalized", "\[CloseCurlyQuote]"}], ".", 
       " ", "This"}], " ", "is", " ", "called", " ", "at", " ", "the", " ", 
      "start", " ", "of", " ", "each", " ", "gradient", " ", "ascent", " ", 
      RowBox[{"iteration", "."}]}], "Text"]}
  },
  GridBoxAlignment->{"Columns" -> {{Left}}},
  GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {Automatic, Automatic, {
       Scaled[0.5]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
    "RowsIndexed" -> {}}]], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.634496084541959*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Repetitions", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634484846643484*^9, 3.634484848263054*^9}, {3.634485007328393*^9, 
  3.634485009049532*^9}}],

Cell[TextData[{
 StyleBox["Repetitions", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that specifying how many different initial guesses should be tried  \
before giving up with the desired utility function. ",
 StyleBox["Infinity", "Input"],
 " is a valid value."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634484867059947*^9, 3.6344848934324417`*^9}, {3.634484954458233*^9, 
  3.6344849922977753`*^9}, {3.634485025610861*^9, 3.634485027080052*^9}},
 CellTags->"Repetitions::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ParameterDistribution", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.63449323976812*^9, 3.634493242319031*^9}}],

Cell[TextData[{
 StyleBox["ParameterDistribution", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that accepts a function which takes a single argument, ",
 StyleBox["cost", "Input"],
 " (between ",
 StyleBox["0", "Input"],
 " and ",
 StyleBox["1", "Input"],
 "), and returns a pair of the form ",
 StyleBox["{ps,{rep1,rep2,...,repN}}", "Input"],
 " where ",
 StyleBox["ps={p1,p2,...,pN}", "Input"],
 " and ",
 StyleBox["repn={symbol1->valuen1,symbol2->valuen2,...}", "Input"],
 " such that the ",
 StyleBox["p", "Input"],
 "\[CloseCurlyQuote]s are positive and sum to unity. Each iteration of GRAPE, \
this function is called and the utility function (and hence too the gradient) \
becomes a convex combination over the N replacement rules with respective \
weights ",
 StyleBox["ps", "Input"],
 ". The replacement rules are applied to all of\n    \[Bullet] the pulse \
after distortion\n    \[Bullet] the penalty\n    \[Bullet] the internal \
Hamiltonian\n    \[Bullet] the control Hamiltonians\n    \[Bullet] the target\
\n    \n",
 StyleBox["Additionally",
  FontSlant->"Italic"],
 ", ",
 StyleBox["ParameterDistribution", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " in the output of ",
 StyleBox["FindPulse", "Input"],
 " which stores a copy of the distribution used."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493244583956*^9, 3.634493338897499*^9}, {3.634493375953506*^9, 
  3.634493499126914*^9}, {3.634497695883123*^9, 3.634497702025937*^9}, {
  3.634501580079481*^9, 3.634501597571087*^9}},
 CellTags->"ParameterDistribution::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ForceDistortionDependence", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, 
   3.634493511047207*^9}],

Cell[TextData[{
 StyleBox["ForceDistortionDependence", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " Boolean option which, if ",
 StyleBox["True", "Input"],
 ", indicates that the ",
 StyleBox["DistortionOperator", "Input"],
 " depends on the distribution symbols specified in ",
 StyleBox["ParameterDistribution", "Input"],
 ". Normally, dependence is checked automatically, but this can fail in some \
pathological cases; ",
 StyleBox["ForceDistortionDependence\[Rule]True", "Input"],
 " overrides automatic detection in these cases. If ",
 StyleBox["False", "Input"],
 ", no checking is performed. Default is ",
 StyleBox["Automatic", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493512879575*^9, 3.634493593150766*^9}},
 CellTags->"ForceDistortionDependence::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PulsePenalty", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634485307903139*^9, 3.63448531005394*^9}}],

Cell[TextData[{
 StyleBox["PulsePenalty", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies a penalty to subtract from the utility function. \
Similar to ",
 StyleBox["DistortionOperator", "Input"],
 ", it should be a function of the form ",
 StyleBox["Penalty[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["returnGradient", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " which returns a real number when ",
 StyleBox["returnGradient", "Input"],
 " is ",
 StyleBox["False", "Input"],
 ", and a tuple {",
 StyleBox["cost", "Input"],
 ", ",
 StyleBox["gradient", "Input"],
 "} when ",
 StyleBox["returnGradient", "Input"],
 " is ",
 StyleBox["True", "Input"],
 ". Set to ",
 StyleBox["None", "Input"],
 " to use the zero distortion.\n\n",
 StyleBox["Additionally",
  FontSlant->"Italic"],
 ", ",
 StyleBox["PulsePenalty", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " in the output of ",
 StyleBox["FindPulse", "Input"],
 " which stores a copy of the pulse penalty function used."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634485317858004*^9, 3.634485357064436*^9}, {3.6345015444394217`*^9, 
  3.634501558077724*^9}},
 CellTags->"PulsePenalty::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DerivativeMask", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, 
   3.634493958419821*^9}],

Cell[TextData[{
 StyleBox["DerivativeMask", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that specifies an array that is element-wise multiplied by the \
gradient array at each iteration of the gradient ascent."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493962003986*^9, 3.6344939847306757`*^9}},
 CellTags->"DerivativeMask::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PostIterationFunction", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634493870579958*^9, 3.634493872237392*^9}}],

Cell[TextData[{
 StyleBox["PostIterationFunction", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies a funciton that is called on the pulse immediately \
after the old pulse has been updated with the step size multiplied by the \
stepping direction. The pulse is changed to the output value of this function."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.6344938739071407`*^9, 3.634493901962981*^9}},
 CellTags->"PostIterationFunction::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PulseLegalizer", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, 
   3.634493997075143*^9, {3.634494888940776*^9, 3.634494889076867*^9}}],

Cell[TextData[{
 StyleBox["PulseLegalizer", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which provides a function accepting arguments ",
 StyleBox["pulse", "Input"],
 " and ",
 StyleBox["\[Epsilon]Range", "Input"],
 " and returns a new pulse which is \[OpenCurlyQuote]legalized\
\[CloseCurlyQuote]. This is called at the start of each gradient ascent \
iteration."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493998946909*^9, 3.634494064450736*^9}, {3.6344948915643883`*^9, 
  3.6344949046922607`*^9}},
 CellTags->"PulseLegalizer::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ControlLimitPolicy", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, 
   3.634493668046708*^9}],

Cell[TextData[{
 StyleBox["ControlLimitPolicy", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies what should be done when a control value is at the \
boundary after legalizing. By default, nothing is done, but this can cause \
successive \[Beta] resets in the conjugate gradient ascent. ",
 StyleBox["Possible", "Input"],
 " values are ",
 StyleBox["Ignore", "Input"],
 " and ",
 StyleBox["ProjectGradient", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493669933279*^9, 3.6344937029239883`*^9}, {3.6344953703917503`*^9, 
  3.634495377200905*^9}},
 CellTags->"ControlLimitPolicy::usage"],

Cell[TextData[{
 StyleBox["Ignore", "Input"],
 " specifies that no action is to be taken when the control boundary is hit."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6344953526272*^9, {3.6344954062405252`*^9, 3.634495411576742*^9}},
 CellTags->"Ignore::usage"],

Cell[TextData[{
 StyleBox["ProjectGradient", "Input"],
 " specifies that the gradient for that iteration is to be projected to \
exclude the control step at the boundary."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634495420164384*^9, 3.634495440205428*^9}},
 CellTags->"ProjectGradient::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MonitorFunction", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}}],

Cell[TextData[{
 StyleBox["MonitorFunction", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option specifying which function should be called as a realtime monitoring \
function of the algorithm. This function should take the following arguments: \
",
 StyleBox["GRAPE", "Input"],
 ", ",
 StyleBox["bestPulse", "Input"],
 ", ",
 StyleBox["overallBestPulse", "Input"],
 ", ",
 StyleBox["overallBestCost", "Input"],
 ", ",
 StyleBox["{rawUtility, cost}", "Input"],
 ", ",
 StyleBox["\[Epsilon]Range", "Input"],
 ", ",
 StyleBox["costList", "Input"],
 ", ",
 StyleBox["abortButton", "Input"],
 ". This option can also be set to ",
 StyleBox["Off", "Input"],
 ", in which case a trivial monitor function is used."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484656058009*^9}, {
  3.6344846874205112`*^9, 3.634484700827867*^9}, {3.634484788620675*^9, 
  3.6344848232344837`*^9}},
 CellTags->"MonitorFunction::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["InitialStepSize", "Subsubsection",
 CellChangeTimes->{{3.6344842261433077`*^9, 3.634484254118774*^9}, {
  3.6344960190438232`*^9, 3.6344960197387257`*^9}}],

Cell[TextData[{
 StyleBox["InitialStepSize", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which quantifies the initial value of how far one should go in the \
steepest accent direction."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484257658947*^9, 3.634484275782707*^9}, {
  3.634484335263248*^9, 3.634484335829442*^9}, {3.634484473771747*^9, 
  3.634484475045109*^9}, {3.6344845236440897`*^9, 3.63448452462294*^9}},
 CellTags->"InitialStepSize::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MinimumStepSize", "Subsubsection",
 CellChangeTimes->{{3.6344844413168907`*^9, 3.634484443843363*^9}}],

Cell[TextData[{
 StyleBox["MinimumStepSize", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies the minumum gradient step size allowed before the \
ascent is aborted."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484342247754*^9, 3.634484432598679*^9}, {
  3.634484526365637*^9, 3.634484527499531*^9}},
 CellTags->"MinimumStepSize::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LineSearchMethod", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.63449362621139*^9, 3.6344936292702417`*^9}}],

Cell[TextData[{
 StyleBox["LineSearchMethod", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies a callable function that performs the line search \
once a good direction has been found."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493622405635*^9, 3.634493640389742*^9}},
 CellTags->"LineSearchMethod::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MinimumImprovement", "Subsubsection",
 CellChangeTimes->{{3.634484460845306*^9, 3.634484464531999*^9}, {
  3.6344845092612762`*^9, 3.634484513899187*^9}}],

Cell[TextData[{
 StyleBox["MinimumImprovement", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which specifies how much the utility function needs to improve by \
(in a running average) in order not to exit the ascent."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484500638541*^9, 3.634484580140732*^9}, {
  3.634484915522709*^9, 3.6344849173457823`*^9}},
 CellTags->"MinimumImprovement::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MinimumIterations", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.6344937136205683`*^9, 3.63449371609226*^9}}],

Cell[TextData[{
 StyleBox["MinimumIterations", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that specifies the number of minimum iterations to be performed \
before accepting a target utility function value. This is mainly useful for \
broadening distributions, to make sure that some improvement is made with \
every broadening, even if the initial guess is \[OpenCurlyDoubleQuote]good\
\[CloseCurlyDoubleQuote]."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493719708357*^9, 3.634493787709161*^9}},
 CellTags->"MinimumIterations::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MaximumIterations", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634493798222192*^9, 3.634493802263084*^9}}],

Cell[TextData[{
 StyleBox["MaximumIterations", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that specifies the maximum number of iterations to take in the \
gradient ascent before giving up."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634493811105987*^9, 3.634493845628186*^9}},
 CellTags->"MaximumIterations::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SkipChecks", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634484982873659*^9, 3.6344849884005013`*^9}}],

Cell[TextData[{
 StyleBox["SkipChecks", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option that, when set to ",
 StyleBox["True", "Input"],
 ", skips all of the preliminary consistency checks of input arguments."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.634485035687722*^9, 3.634485073304657*^9}},
 CellTags->"SkipChecks::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["VerboseAscent", "Subsubsection",
 CellChangeTimes->{{3.6344846033329287`*^9, 3.6344846081400127`*^9}, {
  3.634485100712905*^9, 3.634485103230275*^9}}],

Cell[TextData[{
 StyleBox["VerboseAscent", "Input"],
 " is a ",
 StyleBox["FindPulse", "Input"],
 " option which can be set to ",
 StyleBox["True", "Input"],
 " or ",
 StyleBox["False", "Input"],
 ", and determines whether to print diagnostic ascent information at every \
iteration."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634484623139567*^9, 3.634484629490901*^9}, {
  3.63448510609723*^9, 3.634485137872107*^9}},
 CellTags->"VerboseAscent::usage"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pulse Object", "Section",
 CellChangeTimes->{{3.634499315580278*^9, 3.6344993201551857`*^9}}],

Cell[TextData[{
 StyleBox["Pulse", "Input"],
 " is a ",
 StyleBox["Head", "Input"],
 " to store the output of ",
 StyleBox["FindPulse", "Input"],
 " containing a list of rules from keys to values. For example, the output of \
",
 StyleBox["FindPulse", "Input"],
 " might be \n",
 StyleBox["p=Pulse[TimeSteps->{0.1,0.1,0.1},Pulse->{{1,2},{2,0},{3,1}},\
UtilityValue->0.9994,...]", "Input"],
 ".\n\n",
 StyleBox["Retreiving Values",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nLike an ",
 StyleBox["Association", "Input"],
 ", values of keys can be retreived by calling the key: ",
 StyleBox["p[TimeSteps]", "Input"],
 "\n\n",
 StyleBox["Notes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet]",
 StyleBox[" Pulse", "Input"],
 " objects can be visualized using ",
 StyleBox["PulsePlot", "Input"],
 ".\n\[Bullet]",
 StyleBox[" Pulse", "Input"],
 " serves an alternate role as a key to the pulse amplitudes of the solution \
found by ",
 StyleBox["FindPulse", "Input"],
 ".\n\n",
 StyleBox["Possible Keys\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 StyleBox["UtilityValue", "Input"],
 "\n",
 StyleBox["PenaltyValue\nTimeSteps", "Input"],
 "\n",
 StyleBox["Pulse", "Input"],
 "\n",
 StyleBox["Target", "Input"],
 "\n",
 StyleBox["ControlHamiltonians", "Input"],
 "\n",
 StyleBox["InternalHamiltonian", "Input"],
 "\n",
 StyleBox["DistortionOperator", "Input"],
 "\n",
 StyleBox["PulsePenalty", "Input"],
 "\n",
 StyleBox["ParameterDistribution", "Input"],
 "\n",
 StyleBox["AmplitudeRange", "Input"],
 "\n",
 StyleBox["ExitMessage", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6344996477785463`*^9, 3.634499648332594*^9}, {
  3.6345002099990873`*^9, 3.634500628404138*^9}, {3.6345007418132677`*^9, 
  3.634500914003952*^9}, {3.63450112157022*^9, 3.634501123890213*^9}, {
  3.634501193768155*^9, 3.634501201142671*^9}, {3.634501989868088*^9, 
  3.6345020089884663`*^9}, {3.635772721205873*^9, 3.635772740285365*^9}},
 CellTags->"Pulse::usage"],

Cell[CellGroupData[{

Cell["Keys", "Subsection",
 CellChangeTimes->{{3.634500206854645*^9, 3.6345002075994864`*^9}, {
  3.6345009230830584`*^9, 3.634500924531307*^9}}],

Cell[CellGroupData[{

Cell["TimeSteps", "Subsubsection",
 CellChangeTimes->{{3.6344996523869743`*^9, 3.634499654635273*^9}, {
  3.634501071434095*^9, 3.6345010726026697`*^9}}],

Cell[TextData[{
 StyleBox["TimeSteps", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is a list of time step lengths for the solution found by ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6345011494729424`*^9, 3.634501170712364*^9}, {
  3.634501214208269*^9, 3.634501256111784*^9}},
 CellTags->"TimeSteps::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["UtilityValue", "Subsubsection",
 CellChangeTimes->{{3.634499663970963*^9, 3.6344996977154408`*^9}, {
  3.6345010747137413`*^9, 3.634501075777122*^9}}],

Cell[TextData[{
 StyleBox["UtilityValue", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the utility function value of the solution found by ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501265703794*^9, 3.6345012880159407`*^9}},
 CellTags->"UtilityValue::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PenaltyValue", "Subsubsection",
 CellChangeTimes->{{3.634499705359074*^9, 3.634499710959853*^9}, {
  3.634501078055483*^9, 3.634501079113154*^9}}],

Cell[TextData[{
 StyleBox["PenaltyValue", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the ",
 StyleBox["PenaltyFunction", "Input"],
 " value of the solution found by ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501265703794*^9, 3.6345013175413094`*^9}},
 CellTags->"PenaltyValue::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Target", "Subsubsection",
 CellChangeTimes->{{3.63449972712351*^9, 3.634499727721644*^9}, {
  3.634501081256765*^9, 3.6345010829460773`*^9}}],

Cell[TextData[{
 StyleBox["Target", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the ",
 StyleBox["target", "Input"],
 " entered as an argument to ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501328502832*^9, 3.63450135477487*^9}},
 CellTags->"Target::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ControlHamiltonians", "Subsubsection",
 CellChangeTimes->{{3.6344997311516953`*^9, 3.634499739315468*^9}, {
  3.634501085337248*^9, 3.63450108682649*^9}}],

Cell[TextData[{
 StyleBox["ControlHamiltonians", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the list ",
 StyleBox["Hcontrol", "Input"],
 " entered as an argument to ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501328502832*^9, 3.63450135477487*^9}, {
  3.634501388231134*^9, 3.6345014064431667`*^9}},
 CellTags->"ControlHamiltonians::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["InternalHamiltonian", "Subsubsection",
 CellChangeTimes->{{3.634499743266323*^9, 3.634499745474532*^9}, {
  3.634501088890252*^9, 3.634501090418728*^9}}],

Cell[TextData[{
 StyleBox["InternalHamiltonian", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the Hamiltonian ",
 StyleBox["Hint", "Input"],
 " entered as an argument to ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501328502832*^9, 3.63450135477487*^9}, {
  3.634501411301477*^9, 3.6345014233610907`*^9}},
 CellTags->"InternalHamiltonian::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["AmplitudeRange", "Subsubsection",
 CellChangeTimes->{{3.634499748834463*^9, 3.63449975108069*^9}, {
  3.634501092345909*^9, 3.634501094033057*^9}}],

Cell[TextData[{
 StyleBox["AmplitudeRange", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is the ",
 StyleBox["amplitudeRange", "Input"],
 " entered as an argument to ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501328502832*^9, 3.63450135477487*^9}, {
  3.634501429390675*^9, 3.634501441101791*^9}},
 CellTags->"AmplitudeRange::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExitMessage", "Subsubsection",
 CellChangeTimes->{{3.634499748834463*^9, 3.63449975108069*^9}, {
  3.634501092345909*^9, 3.634501094033057*^9}, {3.634501611284964*^9, 
  3.6345016146109037`*^9}}],

Cell[TextData[{
 StyleBox["ExitMessage", "Input"],
 " is a key for ",
 StyleBox["Pulse", "Input"],
 " whose value is exit message of ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.634501328502832*^9, 3.63450135477487*^9}, {
  3.634501429390675*^9, 3.634501441101791*^9}, {3.634501616637418*^9, 
  3.634501638085211*^9}},
 CellTags->"ExitMessage::usage"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pulse Conversion", "Subsection",
 CellChangeTimes->{{3.6344997752830667`*^9, 3.634499776418577*^9}, {
  3.63449997285637*^9, 3.634499975528427*^9}}],

Cell[TextData[{
 StyleBox["ToPulse[", "Input"],
 StyleBox["pulsemat", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " turns a matrix of the form ",
 StyleBox["{{dt1,a11,a12,...},{dt2,a21,a22,...},{dt3,a31,a32},...}", 
  "Input"],
 " into a ",
 StyleBox["Pulse", "Input"],
 " object where all keys besides ",
 StyleBox["Pulse", "Input"],
 " and ",
 StyleBox["TimeSteps", "Input"],
 " are set to nominal qubit values."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6345020785753098`*^9, 3.634502181209169*^9}},
 CellTags->"ToPulse::usage"],

Cell[TextData[{
 StyleBox["SimForm[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["distort", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " converts a ",
 StyleBox["Pulse", "Input"],
 " object pulse into the ",
 StyleBox["ShapedPulseQ", "Input"],
 " format accepted by ",
 StyleBox["QSim`", "Input"],
 "s ",
 StyleBox["EvalPulse", "Input"],
 ". If the optional argument ",
 StyleBox["distort", "Input"],
 " is ",
 StyleBox["True", "Input"],
 " (default value),  the ",
 StyleBox["DistortionOperator", "Input"],
 " is called on the pulse."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634502203542347*^9, 3.634502280215217*^9}, {
  3.634502331305059*^9, 3.634502427326909*^9}},
 CellTags->"SimForm::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pulse Key Modification", "Subsection",
 CellChangeTimes->{{3.634499787750826*^9, 3.6344997927614527`*^9}, {
  3.634499978512271*^9, 3.63449999428052*^9}, {3.63450205632962*^9, 
  3.634502056946669*^9}}],

Cell[TextData[{
 StyleBox["PulseRemoveKeys[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["key1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["key2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a new ",
 StyleBox["Pulse", "Input"],
 " object with the given keys and their values removed from the ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6345037011981*^9, 3.634503730941958*^9}, {
  3.634504004052791*^9, 3.634504047876547*^9}, {3.6345043649689302`*^9, 
  3.634504366827918*^9}},
 CellTags->"PulseRemoveKeys::usage"],

Cell[TextData[{
 StyleBox["PulseReplaceKey[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain"],
 StyleBox[",", "Input"],
 StyleBox["key", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["newval", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a new ",
 StyleBox["Pulse", "Input"],
 " object with the value of the given ",
 StyleBox["key", "Input"],
 " replaced with ",
 StyleBox["newval", "Input"],
 " in the ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6345038924420156`*^9, 3.634503921205015*^9}, {
  3.6345040545799932`*^9, 3.6345040812211227`*^9}, {3.634504372934926*^9, 
  3.634504376329896*^9}},
 CellTags->"PulseReplaceKey::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pulse Manipulation", "Subsection",
 CellChangeTimes->{{3.6345000287281237`*^9, 3.634500034206752*^9}}],

Cell[TextData[{
 StyleBox["PulsePhaseRotate[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Phi]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a new ",
 StyleBox["Pulse", "Input"],
 " object where the phase between the amplitudes of the ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input"],
 " are rotated by a constant angle ",
 StyleBox["\[Phi]", "Input"],
 " (radians). It is assumed that there are two amplitude values per time step."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634503987543091*^9, 3.634503993804153*^9}, {
  3.634504089156393*^9, 3.634504200004325*^9}},
 CellTags->"PulsePhaseRotate::usage"],

Cell[TextData[{
 StyleBox["PulsePhaseRamp[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Omega]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a new ",
 StyleBox["Pulse", "Input"],
 " object where the ",
 StyleBox["pulse", "Input"],
 " has been phase ramped with a slope ",
 StyleBox["2\[Pi]*\[Omega]", "Input"],
 ". The pulse is assumed to have two amplitudes per step, and is in x-y \
coordinates."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634504215393125*^9, 3.6345042925703783`*^9}, {
  3.634505086078783*^9, 3.634505086492641*^9}},
 CellTags->"PulsePhaseRamp::usage"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility Function and Targets", "Section",
 CellChangeTimes->{{3.634482803736505*^9, 3.634482808097674*^9}, {
   3.6344835036124*^9, 3.6344835049300613`*^9}, {3.634484924513543*^9, 
   3.634484925168857*^9}, {3.63449802383902*^9, 3.63449803014158*^9}, {
   3.634564027689345*^9, 3.634564038623632*^9}, 3.634651164914619*^9, {
   3.634651234391271*^9, 3.634651235557106*^9}}],

Cell[TextData[{
 StyleBox["Utility", "Input"],
 StyleBox["[", "Input"],
 StyleBox["S", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["target", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the utility function value of the propagator ",
 StyleBox["S", "Input"],
 " with respect to the ",
 StyleBox["target", "Input"],
 ". In a closed system, ",
 StyleBox["S", "Input"],
 " will be a unitary matrix corresponding to the time evolution of a given \
pulse. The particular utility function invoked will depend on the ",
 StyleBox["target", "Input"],
 ". If ",
 StyleBox["target", "Input"],
 " is a matrix, the average fidelity ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"Tr", "(", 
       RowBox[{
        RowBox[{"target", "\[ConjugateTranspose]"}], ".", "S"}], ")"}], "/", 
      "d"}], "\[RightBracketingBar]"}], "2"], TraditionalForm]]],
 " will be used. Other possible forms of ",
 StyleBox["target", "Input"],
 " are ",
 StyleBox["CoherentSubspaces", "Input"],
 " and ",
 StyleBox["StateToState", "Input"],
 ".\n\n",
 StyleBox["Note\t",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nIn the presence of a ",
 StyleBox["ParameterDistribution", "Input"],
 ", ",
 StyleBox["S", "Input"],
 " will correspond to a single point from the distribution and hence will \
still be unitary in the case where the system is closed, even though the \
effective map weighted over all elements of the ",
 StyleBox["ParameterDistribution", "Input"],
 " will be in general be non-unitary."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634564077807438*^9, 3.6345641420315332`*^9}, {
   3.6345642545660763`*^9, 3.6345642689576406`*^9}, {3.634564371813291*^9, 
   3.634564782409417*^9}, {3.63456482678848*^9, 3.634565073402807*^9}, 
   3.634565113681534*^9, {3.63456520124124*^9, 3.634565219338629*^9}, 
   3.634651164994025*^9},
 CellTags->"Utility::usage"],

Cell[TextData[{
 StyleBox["UtilityGradient[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hint", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hcontrol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["target", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a tuple ",
 StyleBox["{utilityValue,gradient}", "Input"],
 " where ",
 StyleBox["utilityValue", "Input"],
 " is the value of ",
 StyleBox["Utility", "Input"],
 " with the given ",
 StyleBox["pulse", "Input"],
 " and Hamiltonians and ",
 StyleBox["gradient", "Input"],
 " is the gradient of the utility function at the same point. The ",
 StyleBox["gradient", "Input"],
 " will be an array of dimensions equal to that of ",
 StyleBox["pulse", "Input"],
 ", where ",
 StyleBox["pulse", "Input"],
 " is in the format of ",
 StyleBox["initialGuess", "Input"],
 " from ",
 StyleBox["FindPulse", "Input"],
 ". See ",
 StyleBox["Utility", "Input"],
 " for a description of ",
 StyleBox["target", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6345651496789503`*^9, 3.6345651709690866`*^9}, {
  3.634565230927505*^9, 3.634565346482071*^9}, {3.63456563062276*^9, 
  3.634565669790134*^9}, {3.634566853812652*^9, 3.634566880365993*^9}, {
  3.634566915988715*^9, 3.634566946012767*^9}, {3.634651165072154*^9, 
  3.634651165157873*^9}, {3.6346512233902683`*^9, 3.63465122421974*^9}},
 CellTags->"UtilityGradient::usage"],

Cell[TextData[{
 StyleBox["PropagatorFromPulse[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hint", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hcontrol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the total evolution propagator ",
 StyleBox["S", "Input"],
 " (as seen by ",
 StyleBox["Utility", "Input"],
 ") due to the given ",
 StyleBox["pulse", "Input"],
 " and Hamiltonians. In the case of a closed system, ",
 StyleBox["S", "Input"],
 " will be a unitary matrix.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThis function is used by ",
 StyleBox["UtilityGradient", "Input"],
 " when evaluating ",
 StyleBox["utilityValue", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634567380255889*^9, 3.634567519016796*^9}, 
   3.634567581138217*^9, 3.6346511652498617`*^9},
 CellTags->"PropagatorFromPulse::usage"],

Cell[TextData[{
 StyleBox["PropagatorListFromPulse[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hint", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Hcontrol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a list of propagators due to each step in the given ",
 StyleBox["pulse", "Input"],
 " evolving under the given Hamiltonians. In the case of a closed system, \
this will be a list of unitary matrices.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThis function is used by ",
 StyleBox["UtilityGradient", "Input"],
 " when evaluating the ",
 StyleBox["gradient", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634567380255889*^9, 3.634567519016796*^9}, {
  3.63456757406404*^9, 3.634567667375107*^9}},
 CellTags->"PropagatorListFromPulse::usage"],

Cell[CellGroupData[{

Cell["Coherent Subspaces", "Subsection",
 CellChangeTimes->{{3.634563963156466*^9, 3.634563972904812*^9}}],

Cell[TextData[{
 StyleBox["CoherentSubspaces", "Input"],
 " is a type of target for ",
 StyleBox["FindPulse", "Input"],
 ". ",
 StyleBox["CoherenteSubspaces[", "Input"],
 StyleBox["{X1,...,Xn}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["{Y1,...,Yn}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " tries to find a pulse which produces a unitary ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]]],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"U", ".", 
     SubscriptBox["X", "k"]}], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", " ", 
       SubscriptBox["\[Phi]", "k"]}]], 
     SubscriptBox["Y", "k"]}]}], TraditionalForm]]],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "k"], TraditionalForm]]],
 " is an arbitrary phase. If each index ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " is represents a different orthogonal subspace of the Hilbert space, then \
this utility function essentially asks for a unitary that preserves relative \
phases within each subspace, but does not care what the phase is between \
subspaces. This is implemented as\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "n"], 
    RowBox[{"|", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"U", ".", 
           SubscriptBox["X", "k"]}], ")"}], "\[ConjugateTranspose]"}], ".", 
        SubscriptBox["Y", "k"]}], "]"}], "/", 
      SubscriptBox["n", "k"]}], 
     SuperscriptBox["|", "2"], 
     RowBox[{"/", "n"}]}]}], TraditionalForm]]],
 "\n\nwhere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "k"], TraditionalForm]]],
 " is equal to ",
 StyleBox["Length[Xk]", "Input"],
 ". It is straightforward to prove that this quantity lies between 0 and 1, \
and that it is equal to 1 if and only if the relationship described above is \
true.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nFor this to be well defined, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "k"], TraditionalForm]]],
 " must have the same dimensions as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "k"], TraditionalForm]]],
 " for each ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 ".\nThis will not always be possible. For example, if the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "k"], TraditionalForm]]],
 "\[CloseCurlyQuote]s are pairwise orthogonal, but the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "k"], TraditionalForm]]],
 "\[CloseCurlyQuote]s are not, no unitary will be able to acheive the maximum \
utility value."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634567895943604*^9, 3.634568117426813*^9}, {
  3.634568196915889*^9, 3.6345682331159077`*^9}, {3.634568270954966*^9, 
  3.634568549236607*^9}, {3.634568658755707*^9, 3.6345686611199713`*^9}, {
  3.63456870641962*^9, 3.6345690001279593`*^9}, {3.6345690371176767`*^9, 
  3.634569038373735*^9}, {3.634569072920521*^9, 3.634569089477949*^9}},
 CellTags->"CoherentSubspaces::usage"]
}, Open  ]],

Cell["StateToState", "Subsection",
 CellChangeTimes->{{3.634563987816186*^9, 3.634563992941358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distortion Operators", "Section",
 CellChangeTimes->{{3.634482642542852*^9, 3.634482649991726*^9}, {
  3.635201098264661*^9, 3.6352011001686983`*^9}}],

Cell[TextData[{
 StyleBox["DistortionOperator", "Input"],
 "[",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "] is a ",
 StyleBox["Head", "Input"],
 " storing the function ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " which evaluates with the arguments ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["inputPulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["computeJacobian", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ". It holds that ",
 StyleBox["DistortionOperator[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["][", "Input"],
 StyleBox["arguments", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]=distortion[", "Input"],
 StyleBox["arguments", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 "; that is, ",
 StyleBox["DistortionOperator[distortion]", "Input"],
 " is effectively callable with function values computed by ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ".\n\n",
 StyleBox["DistortionOperator[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["format", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is equivalent to ",
 StyleBox["DistortionOperator[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", except that, additionally, a human readable format expression is \
included. Whenever ",
 StyleBox["Format[DistortionOperator[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["format", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]]", "Input"],
 " is invoked, ",
 StyleBox["format", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is returned.\n\n",
 StyleBox["Function Arguments",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet]  The input ",
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is expected in the same format as ",
 StyleBox["FindPulse", "Input"],
 "\[CloseCurlyQuote]s argument ",
 StyleBox["initialGuess", "Input"],
 "; ",
 StyleBox["{{dt1,a11,...,a1K},{dt2,a21,...,a2K},...,{dtN,aN1,...,aNK}}", 
  "Input"],
 " where the ",
 StyleBox["dt", "Input"],
 "\[CloseCurlyQuote]s are pulse lengths and the ",
 StyleBox["a", "Input"],
 "\[CloseCurlyQuote]s are input pulse amplitudes, and there are ",
 StyleBox["K", "Input"],
 " input control channels and ",
 StyleBox["N", "Input"],
 " input control time steps.\n\[Bullet] If ",
 StyleBox["computeJacobian", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is ",
 StyleBox["False", "Input"],
 ", no Jacobian tensor is returned, and the output is in the form ",
 StyleBox["{{dt1,a11,...,a1L},{dt2,a21,...,a2L},...,{dtM,aM1,...,aML}}", 
  "Input"],
 ", such that there are ",
 StyleBox["L", "Input"],
 " output control channels and ",
 StyleBox["M", "Input"],
 " output control time steps.\n\[Bullet] If ",
 StyleBox["computeJacobian", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is ",
 StyleBox["True", "Input"],
 ", the output is of the form ",
 StyleBox["{outputPulse,jacobian}", "Input"],
 ", where ",
 StyleBox["outputPulse=distortion[pulse,False]", "Input"],
 ", and ",
 StyleBox["jacobian", "Input"],
 " is the rank four Jacobian tensor of distortion at ",
 StyleBox["pulse", "Input"],
 " with ",
 StyleBox["Dimensions", "Input"],
 " equal to ",
 StyleBox["{M,L,N,K}", "Input"],
 ".\n\n",
 StyleBox["Notes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] The function ",
 StyleBox["FindPulse", "Input"],
 " accepts the argument ",
 StyleBox["DistortionOperator", "Input"],
 ", which should have a ",
 StyleBox["Head", "Input"],
 " ",
 StyleBox["DistortionOperator", "Input"],
 " and act as described above."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6351990794719477`*^9, 3.635199209630054*^9}, {
  3.635199251847353*^9, 3.635199332387063*^9}, {3.635199438053993*^9, 
  3.635199648484995*^9}, {3.6351996949254417`*^9, 3.635199778002489*^9}, {
  3.635200886085129*^9, 3.635200894630953*^9}, {3.635531476796853*^9, 
  3.635531481193338*^9}, {3.6355315285996532`*^9, 3.635531548245326*^9}, {
  3.635531664169662*^9, 3.635531689259604*^9}, {3.635531728549716*^9, 
  3.635531781442833*^9}, {3.635531830461294*^9, 3.635531965807269*^9}, {
  3.635532006350338*^9, 3.635532074510944*^9}, {3.635532107436268*^9, 
  3.635532211187392*^9}, {3.6355322588592873`*^9, 3.635532269059106*^9}, {
  3.6355323116107073`*^9, 3.6355323119698353`*^9}, {3.6355323590512333`*^9, 
  3.635532408731187*^9}},
 CellTags->"DistortionOperator::usage"],

Cell[CellGroupData[{

Cell["Distortion Operator Tools", "Subsection",
 CellChangeTimes->{{3.635198330347658*^9, 3.635198373945636*^9}, {
  3.635198413080888*^9, 3.63519841447503*^9}, {3.635199872857358*^9, 
  3.63519987348145*^9}}],

Cell[TextData[{
 StyleBox["LiftDistortionRank[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", when provided with a ",
 StyleBox["DistortionOperator", "Input"],
 " ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " with a single input and output channel, returns a new distortion that acts \
this ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " on each channel of a given input pulse. This function is useful if all \
input channels feel the same distortion."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635198382411558*^9, 3.635198383900057*^9}, {
  3.635198466727974*^9, 3.635198466907007*^9}, {3.635198498936021*^9, 
  3.6351986410276403`*^9}, {3.635596785317268*^9, 3.635596787708449*^9}},
 CellTags->"LiftDistortionRank::usage"],

Cell[TextData[{
 StyleBox["JoinDistortions[", "Input"],
 StyleBox["distortion1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["distortion2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " joins K single-channel ",
 StyleBox["DistortionOperator", "Input"],
 "s into a single new ",
 StyleBox["DistortionOperator", "Input"],
 " with K channels."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635198392923551*^9, 3.6351983932021008`*^9}, {
  3.635198662379499*^9, 3.635198680150915*^9}, {3.63519872504809*^9, 
  3.63519874687388*^9}, {3.635596804301372*^9, 3.635596827517462*^9}},
 CellTags->"JoinDistortions::usage"],

Cell[TextData[{
 StyleBox["ComposeDistortions[", "Input"],
 StyleBox["distortion1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["distortion2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a new ",
 StyleBox["DistortionOperator", "Input"],
 " which is the composition of the input ",
 StyleBox["DistortionOperators", "Input"],
 ". ",
 StyleBox["distortion1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is applied first, ",
 StyleBox["distortion2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " second, and so on."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635198401978175*^9, 3.6351984031591053`*^9}, {
  3.63519876391542*^9, 3.635198816691313*^9}, {3.635596833837237*^9, 
  3.635596848997655*^9}},
 CellTags->"ComposeDistortions::usage"],

Cell[TextData[{
 StyleBox["PerturbateDistortion[", "Input"],
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " adds the definition ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["True", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " to the given ",
 StyleBox["DistortionOperator", "Input"],
 " ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", where ",
 StyleBox["distortion", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["False", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is assumed to be already already defined. This is done by taking a finite \
difference at each input pulse time step and channel."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6351989129919024`*^9, 3.635198933321733*^9}, {
  3.635198964463352*^9, 3.635198989024255*^9}, {3.635199024925315*^9, 
  3.635199046657999*^9}, {3.6355137499444923`*^9, 3.635513750998176*^9}, {
  3.6355968614131393`*^9, 3.6355968768284616`*^9}},
 CellTags->"PerturbateDistortion::usage"],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.635525825689538*^9, 3.635525826679637*^9}}],

Cell["\<\
Define two DistortionOperators, the second is lifted from the first.\
\>", "Text",
 CellChangeTimes->{{3.635533177425495*^9, 3.63553319893856*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d1", "=", 
  RowBox[{"ExponentialDistortion", "[", 
   RowBox[{"0.5", ",", "5", ",", "10", ",", "1", ",", "0.5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d2", "=", 
  RowBox[{"LiftDistortionRank", "[", "d1", "]"}]}]}], "Input",
 CellChangeTimes->{{3.635525832607853*^9, 3.635525952655033*^9}, {
  3.6355259857556677`*^9, 3.635526013810494*^9}, {3.635526052290475*^9, 
  3.635526052847793*^9}, {3.6355329653234053`*^9, 3.635532966641223*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"ExponentialDistortion", "[", "0.5`", "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{3.635532966945158*^9, 3.635536497943789*^9}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    TemplateBox[{TagBox[
       FormBox[
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"ExponentialDistortion", "[", "0.5`", "]"}], HoldForm], 
          StandardForm], Format], StandardForm], Format],
      "\"\[CircleTimes]numInputChannels\""},
     "Superscript"],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{3.635532966945158*^9, 3.6355364980135202`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["d1", "Input"],
 " works on a single channel pulse, but would fail on a 2-channel pulse."
}], "Text",
 CellChangeTimes->{{3.635533014337894*^9, 3.635533031378487*^9}, {
  3.63553331324927*^9, 3.6355333210893383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d1", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "False"}], "]"}]], "Input",\

 CellChangeTimes->{{3.635526088083426*^9, 3.6355260882077217`*^9}, {
   3.6355262117500973`*^9, 3.635526245728541*^9}, 3.6355293617513037`*^9, {
   3.635529550499442*^9, 3.63552955755024*^9}, {3.6355310864000263`*^9, 
   3.6355310925776176`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.3934693402873666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.7768698398515702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.3113843416634678`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.7466724564292517`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.3002753451252254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.7425856849907877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.2987719059322482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.74203260062064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.298568437563238`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.741957748790752`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.635526088973423*^9, {3.635526209165736*^9, 3.6355262462093554`*^9}, 
   3.635526423380608*^9, 3.635526812707239*^9, 3.635529301393345*^9, {
   3.6355293476490192`*^9, 3.6355293621112432`*^9}, {3.635529532587173*^9, 
   3.6355295578385973`*^9}, 3.635529843983242*^9, {3.6355310822177*^9, 
   3.63553109281701*^9}, 3.635531189726741*^9, 3.63553296355851*^9}]
}, Open  ]],

Cell[TextData[{
 "However, with ",
 StyleBox["LiftDistortionRank", "Input"],
 ", it will apply ",
 StyleBox["d1", "Input"],
 " to any number of input channels:"
}], "Text",
 CellChangeTimes->{{3.6355330451055803`*^9, 3.635533075609664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", "False"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.635526067754736*^9, 3.6355260721047153`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.3934693402873666`", ",", "0.3934693402873666`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.7768698398515702`", ",", "0.7768698398515702`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.3113843416634678`", ",", "1.3113843416634678`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.7466724564292517`", ",", "1.7466724564292517`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.3002753451252254`", ",", "2.3002753451252254`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.7425856849907877`", ",", "2.7425856849907877`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.2987719059322482`", ",", "3.2987719059322482`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.74203260062064`", ",", "3.74203260062064`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.298568437563238`", ",", "4.298568437563238`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.741957748790752`", ",", "4.741957748790752`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.635526072778571*^9, 3.635526426440137*^9, 
  3.635526830359417*^9, 3.635531197640081*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.635533153461852*^9, 3.63553315573699*^9}}],

Cell["\<\
Define a distortion that has a 0.5 length risetime on channel 1, and  a 0.2 \
length risetime on channel 2.\
\>", "Text",
 CellChangeTimes->{{3.635533341447425*^9, 3.6355333653922873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"JoinDistortions", "[", 
   RowBox[{
    RowBox[{"ExponentialDistortion", "[", 
     RowBox[{"0.5", ",", "5", ",", "10", ",", "1", ",", "0.5"}], "]"}], ",", 
    RowBox[{"ExponentialDistortion", "[", 
     RowBox[{"0.2", ",", "5", ",", "10", ",", "1", ",", "0.5"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.635533160428046*^9, 3.635533163085225*^9}, {
   3.6355332038961287`*^9, 3.6355332142490253`*^9}, 3.635533286788475*^9}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         TagBox[
          FormBox[
           TagBox[
            FormBox[
             TagBox[
              RowBox[{"ExponentialDistortion", "[", "0.5`", "]"}],
              HoldForm],
             StandardForm],
            Format],
           StandardForm],
          Format]},
        {
         TagBox[
          FormBox[
           TagBox[
            FormBox[
             TagBox[
              RowBox[{"ExponentialDistortion", "[", "0.2`", "]"}],
              HoldForm],
             StandardForm],
            Format],
           StandardForm],
          Format]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{
  3.635533214528781*^9, {3.6355332819329367`*^9, 3.635533287854072*^9}, 
   3.635536501233203*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "5"}], "}"}]}], "}"}], ",", "False"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6355332974435453`*^9, 3.6355333372988586`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.3934693402873666`", ",", "0.7134952031398099`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.7768698398515702`", ",", "0.9764822541439909`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.3113843416634678`", ",", "1.7115647490035821`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "1.7466724564292517`", ",", "1.9763237928188753`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.3002753451252254`", ",", "2.711551741705928`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "2.7425856849907877`", ",", "2.976322725114865`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.2987719059322482`", ",", "3.7115516540634457`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "3.74203260062064`", ",", "3.9763227179207323`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.298568437563238`", ",", "4.711551653472915`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "4.741957748790752`", ",", "4.976322717872258`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.635533337689064*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 3", "Subsubsection",
 CellChangeTimes->{{3.635533385449169*^9, 3.635533387192634*^9}}],

Cell["Two exponential distortions in a row.", "Text",
 CellChangeTimes->{{3.635589675346204*^9, 3.635589684620039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"ComposeDistortions", "[", 
   RowBox[{
    RowBox[{"ExponentialDistortion", "[", 
     RowBox[{"0.5", ",", "5", ",", "10", ",", "1", ",", "0.5"}], "]"}], ",", 
    RowBox[{"ExponentialDistortion", "[", 
     RowBox[{"0.5", ",", "10", ",", "20", ",", "0.5", ",", "0.25"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.635533395169735*^9, 3.635533414413702*^9}, {
  3.6355365123482323`*^9, 3.635536513509513*^9}, {3.635589590106058*^9, 
  3.6355896208828382`*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    TemplateBox[{TagBox[
       FormBox[
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"ExponentialDistortion", "[", "0.5`", "]"}], HoldForm], 
          StandardForm], Format], StandardForm], Format],"\"\[EmptyCircle]\"",
      TagBox[
       FormBox[
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"ExponentialDistortion", "[", "0.5`", "]"}], HoldForm], 
          StandardForm], Format], StandardForm], Format]},
     "RowDefault"],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.635533398959416*^9, 3.6355334148036222`*^9}, {
  3.635536477198503*^9, 3.635536515126642*^9}, {3.635589618140829*^9, 
  3.635589621213071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "True"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6355896257148867`*^9, 3.6355896611978273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.08703510995697641`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.20760758440654198`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.3655463771512556`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.5273895486646636`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.7437865834904458`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "0.967118898947373`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "1.1988621857011288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "1.4144087315271672`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "1.6676008456347708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "1.91653886356592`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "2.165366104626938`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "2.3924843121136528`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "2.653266424872046`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "2.907253040656683`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "3.159352628847015`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "3.3886193329394447`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "3.6507819095471694`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "3.905666047372696`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "4.158338460076333`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25`", ",", "4.387974756585778`"}], "}"}]}], "}"}], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                 AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameLabel -> {None, None}, 
                 FrameTicks -> {{None, None}, {None, None}}], 
                GridBox[{{
                   RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"20", ",", "1", ",", "5", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[
                 RasterBox[
                 SparseArray[
                  Automatic, {10, 10}, 0.93, {
                   1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                  0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                 AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameLabel -> {None, None}, 
                 FrameTicks -> {{None, None}, {None, None}}], 
                GridBox[{{
                   RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"20", ",", "1", ",", "5", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.6`", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                   TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.08703510995697641`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.20760758440654198`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.3655463771512556`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.5273895486646636`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<60>, {20, 1, 5, 1}]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.635589646826518*^9, 3.635589661563592*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 4", "Subsubsection",
 CellChangeTimes->{{3.635589693361805*^9, 3.635589694818871*^9}}],

Cell["\<\
Define a distortion that doubles pulse amplitudes, but \
doesn\[CloseCurlyQuote]t compute the Jacobian tensor. Call \
PerturbateDistortion on this.\
\>", "Text",
 CellChangeTimes->{{3.635592126170638*^9, 3.6355921611383333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  RowBox[{"DistortionOperator", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pulse", ",", "computeJac"}], "}"}], ",", 
      RowBox[{"AddTimeSteps", "[", 
       RowBox[{
        RowBox[{"pulse", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"2", 
         RowBox[{"pulse", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}]}]}], "]"}]}], 
     "]"}], ",", "\"\<myDistortion\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pd", "=", 
  RowBox[{"PerturbateDistortion", "[", "d", "]"}]}]}], "Input",
 CellChangeTimes->{{3.635591912020658*^9, 3.635592022072102*^9}, {
  3.635592063103397*^9, 3.635592083374576*^9}}],

Cell[BoxData["\<\"myDistortion\"\>"], "Output",
 CellChangeTimes->{{3.635592011018568*^9, 3.6355920223063383`*^9}, {
  3.635592070378646*^9, 3.635592083638389*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"PerturbateDistortion", "[", 
     TagBox[
      FormBox["\<\"myDistortion\"\>",
       StandardForm],
      Format], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.635592011018568*^9, 3.6355920223063383`*^9}, {
  3.635592070378646*^9, 3.635592083639655*^9}}]
}, Open  ]],

Cell[TextData[{
 "The distortion operator ",
 StyleBox["d", "Input"],
 " will not give us a Jacobian tensor (this would cause errors if we were to \
use it in GRAPE):"
}], "Text",
 CellChangeTimes->{{3.635592164690029*^9, 3.6355921806186333`*^9}, {
  3.63559221246732*^9, 3.635592222891034*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", "True"}], "]"}]], "Input",\

 CellChangeTimes->{{3.635592030036265*^9, 3.635592073754363*^9}, {
  3.635592200643733*^9, 3.635592202949304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.63559204634702*^9, 3.635592073986952*^9}, 
   3.635592203215173*^9}]
}, Open  ]],

Cell[TextData[{
 "But ",
 StyleBox["pd", "Input"],
 " will:"
}], "Text",
 CellChangeTimes->{{3.635592183362115*^9, 3.6355921867305937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pd", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", "True"}], "]"}]], "Input",\

 CellChangeTimes->{{3.635592095785887*^9, 3.635592109518573*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "}"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6355920967843018`*^9, 3.635592109746331*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IdentityDistortion", "Subsection",
 CellChangeTimes->{{3.6351988509855833`*^9, 3.6351988531060247`*^9}, {
  3.635264051059217*^9, 3.635264054218485*^9}}],

Cell[TextData[{
 StyleBox["IdentityDistortion[]", "Input"],
 " returns a ",
 StyleBox["DistortionOperator", "Input"],
 " whose output pulse is equal to its input pulse. This is the default value \
of ",
 StyleBox["DistortionOperator", "Input"],
 " in ",
 StyleBox["FindPulse", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635199903056286*^9, 3.6351999689286327`*^9}, {
  3.635596906147133*^9, 3.6355969084686127`*^9}},
 CellTags->"IdentityDistortion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635592334264348*^9, 3.635592335043517*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"id", "=", 
  RowBox[{"IdentityDistortion", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"id", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", "True"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.635592337619499*^9, 3.6355923421696444`*^9}, {
  3.635593732835844*^9, 3.6355937331279793`*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"IdentityDistortion", "[", "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{3.635592342480576*^9, 3.6355936984649057`*^9, 
  3.635593734410549*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.635592342480576*^9, 3.6355936984649057`*^9, 
  3.63559373441276*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variable Change Distortions", "Subsection",
 CellChangeTimes->{{3.6352640596247787`*^9, 3.6352640633690453`*^9}}],

Cell[TextData[{
 StyleBox["TimeScaleDistortion[", "Input"],
 StyleBox["multiplier", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a ",
 StyleBox["DistortionOperator", "Input"],
 " that multiplies the input time step values by ",
 StyleBox["multiplier", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635199981846925*^9, 3.635199982332286*^9}, {
  3.6352000388033113`*^9, 3.635200054015409*^9}, {3.635596920061473*^9, 
  3.635596922916556*^9}},
 CellTags->"TimeScaleDistortion::usage"],

Cell[TextData[{
 StyleBox["VariableChangeDistortion[changeFn,variableSymbol]", "Input"],
 " returns a ",
 StyleBox["DistortionOperator", "Input"],
 " that performs a per-time-step change of variable on the single-channel \
input pulse. This is the most general type of distortion function where \
different time steps don\[CloseCurlyQuote]t affect each other. To compute the \
Jacobian tensor, it is assumed that the functions are analytically \
differentiable\n",
 StyleBox["VariableChangeDistortion[{changeFn1,changeFn2,...}, \
{variableSymbol1,variableSymbol2,...}]", "Input"],
 " is the multiple channel version of the above, where each channel gets its \
own function.\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["Simplify->True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " should be called on the per-step Jacobian as the distortion operator is \
initialized.\n\n",
 StyleBox["Example",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["VariableChangeDistortion[{a*Cos[\[Phi]],a*Sin[\[Phi]]},{a,\[Phi]}]\
", "Input"],
 " changes from polar coordinates to cartesian coordinates in a two channel \
system."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.63519998927201*^9, {3.635200087523037*^9, 3.635200361913072*^9}, {
   3.6352004198109837`*^9, 3.635200519374538*^9}, {3.6352007395177317`*^9, 
   3.635200741475154*^9}, {3.635596647932597*^9, 3.635596702366598*^9}, {
   3.635596733215226*^9, 3.635596759334918*^9}, {3.6355969408121758`*^9, 
   3.635596945106868*^9}},
 CellTags->"VariableChangeDistortion::usage"],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.635596967793539*^9, 3.6355969690757217`*^9}, {
  3.635597068332069*^9, 3.635597068507361*^9}}],

Cell["Multiply all of the time steps by 2.", "Text",
 CellChangeTimes->{{3.635597126072976*^9, 3.635597135705662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  RowBox[{"TimeScaleDistortion", "[", "2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", "False"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.635597077875237*^9, 3.63559711444736*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"TimeScaleDistortion", "[", "2", "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.635597087021734*^9, 3.6355971149590054`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.635597087021734*^9, 3.635597115025971*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.635200535646834*^9, 3.635200536825357*^9}, {
  3.6355970696663837`*^9, 3.635597069938773*^9}}],

Cell["\<\
The Jacobian is automatically symbolically calculated in this change of \
coordinates distortion from polar to cartesian.\
\>", "Text",
 CellChangeTimes->{{3.6352007667786694`*^9, 3.635200801561564*^9}, {
  3.6352011526946163`*^9, 3.635201154051989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  StyleBox[
   RowBox[{"VariableChangeDistortion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
       RowBox[{"a", "*", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "\[Phi]"}], "}"}]}], "]"}], 
   "Input"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["d", "Input"], 
   StyleBox["[", "Input"], 
   RowBox[{
    RowBox[{
     StyleBox["{", "Input"], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"dt", ",", "a1", ",", "b1"}], "}"}], "Input"], ",", 
      RowBox[{"{", 
       RowBox[{"dt", ",", "a2", ",", "b2"}], "}"}]}], "}"}], ",", "True"}], 
   StyleBox["]", "Input"]}], 
  StyleBox["//", "Input"], 
  StyleBox["Column", "Input"]}]}], "Input",
 CellChangeTimes->{{3.63520054574308*^9, 3.635200593335432*^9}, {
   3.635200693948381*^9, 3.635200710816543*^9}, {3.6352007462895327`*^9, 
   3.6352007481882067`*^9}, 3.635596633825913*^9}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"VariableChangeDistortion", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "\[Phi]"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.635200679627729*^9, 3.635200711258662*^9}, 
   3.6352007529669313`*^9, {3.635596629450646*^9, 3.635596634108444*^9}, 
   3.635708362741188*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dt", ",", 
         RowBox[{"a1", " ", 
          RowBox[{"Cos", "[", "b1", "]"}]}], ",", 
         RowBox[{"a1", " ", 
          RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dt", ",", 
         RowBox[{"a2", " ", 
          RowBox[{"Cos", "[", "b2", "]"}]}], ",", 
         RowBox[{"a2", " ", 
          RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "b1", "]"}], ",", 
             RowBox[{
              RowBox[{"-", "a1"}], " ", 
              RowBox[{"Sin", "[", "b1", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "b1", "]"}], ",", 
             RowBox[{"a1", " ", 
              RowBox[{"Cos", "[", "b1", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "b2", "]"}], ",", 
             RowBox[{
              RowBox[{"-", "a2"}], " ", 
              RowBox[{"Sin", "[", "b2", "]"}]}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "b2", "]"}], ",", 
             RowBox[{"a2", " ", 
              RowBox[{"Cos", "[", "b2", "]"}]}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.635200679627729*^9, 3.635200711258662*^9}, 
   3.6352007529669313`*^9, {3.635596629450646*^9, 3.635596634108444*^9}, 
   3.635708362747725*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Distortions", "Subsection",
 CellChangeTimes->{{3.635200826679141*^9, 3.635200829943543*^9}}],

Cell[TextData[{
 StyleBox["ConvolutionDistortion[", "Input"],
 StyleBox["kernel", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a distortion function which convolves the input pulse with the \
given kernel in the time domain to get the output pulse. The ",
 StyleBox["kernel", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " should be a single valued function that outputs a number, in the case of \
one input and one output channel, or a matrix of dimensions ",
 StyleBox["{L,K}", "Input"],
 ", in the case of ",
 StyleBox["K", "Input"],
 " input channels and ",
 StyleBox["L", "Input"],
 " output channels. ",
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and ",
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " are respectively the number of input and output time steps. ",
 StyleBox["dtInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " are respectively the (constant sized) input and output timestep lengths.\n\
\n",
 StyleBox["ConvolutionDistortion[", "Input"],
 StyleBox["kernelIntegral", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " provides slightly more flexibility over the previous calling syntax by \
accepting an integral over the kernel rather than the kernel itself, allowing \
a custom integrator to be used. ",
 StyleBox["kernelIntegral", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " should be a two-argument function ",
 StyleBox["kernelIntegral", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["m", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "dtInput"}], 
     RowBox[{"n", " ", "dtInput"}]], 
    RowBox[{
     RowBox[{"kernel", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "-", 
          RowBox[{"1", "/", "2"}]}], ")"}], "dtOutput"}], "-", "\[Tau]"}], 
      "]"}], 
     RowBox[{"\[DifferentialD]", "\[Tau]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where n is the input timestep index, and m is the output timestep index."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.63520118598318*^9, {3.6352540740762367`*^9, 3.635254074821473*^9}, {
   3.635262608332468*^9, 3.6352630837537003`*^9}, {3.635263152750553*^9, 
   3.6352631568523684`*^9}},
 CellTags->"ConvolutionDistortion::usage"],

Cell[TextData[{
 StyleBox["ExponentialDistortion[", "Input"],
 StyleBox["\[Tau]c", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a single channel distortion that causes an exponential rise and \
fall time of timescale ",
 StyleBox["\[Tau]c", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". ",
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and ",
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " are respectively the number of input and output time steps. ",
 StyleBox["dtInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " are respectively the (constant sized) input and output timestep lengths.\n\
\n",
 StyleBox["Notes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] This function is equivalent to ",
 StyleBox["ConvolutionDistortion[Piecewise[{{0,#<0}},Exp[-#/", "Input"],
 StyleBox["\[Tau]c", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]/", "Input"],
 StyleBox["\[Tau]c", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&,", "Input"],
 StyleBox["numInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["numOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtInput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dtOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", but uses a precalculated integral and is therefore faster to initialize.\n\
\[Bullet] Use ",
 StyleBox["LiftDistortionRank", "Input"],
 " or ",
 StyleBox["JoinDistortions", "Input"],
 " to turn this into a multiple channel function."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6352012275274477`*^9, {3.635263191121716*^9, 3.63526335112886*^9}},
 CellTags->"ExponentialDistortion::usage"],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.6352541290443583`*^9, 3.635254129862289*^9}, {
  3.63526357830147*^9, 3.635263579836933*^9}}],

Cell[TextData[{
 "A single channel distortion. In this case, equivalent to ",
 StyleBox["ExponentialDistortion", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6352635152689533`*^9, 3.635263535885564*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  RowBox[{"ConvolutionDistortion", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"#", "<", "0"}]}], "}"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "#"}], "/", "\[Tau]c"}], "]"}], "/", "\[Tau]c"}]}], 
      "]"}], "&"}], ",", "2", ",", "4", ",", "1", ",", 
    RowBox[{"1", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", "False"}], "]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.635254284943472*^9, 3.635254334244306*^9}, {
   3.635254381046586*^9, 3.6352543832429333`*^9}, {3.63525444180685*^9, 
   3.635254443706551*^9}, {3.635263415127322*^9, 3.635263441249757*^9}, 
   3.635263496104313*^9, {3.635263658568515*^9, 3.635263659737784*^9}, 
   3.635597178781518*^9}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"ConvolutionDistortion", "[", 
     RowBox[{
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{"#1", "<", "0"}]},
            {
             FractionBox[
              RowBox[{"Exp", "[", 
               RowBox[{"-", 
                FractionBox["#1", "\[Tau]c"]}], "]"}], "\[Tau]c"], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "&"}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.6352634276930857`*^9, 3.635263443526917*^9}, 
   3.6352634991120996`*^9, 3.63526366195021*^9, 3.6352663959083157`*^9, 
   3.635597182177923*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], "/", "\[Tau]c"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "4"]}], "/", "\[Tau]c"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"2", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["5", "4"]}], "/", "\[Tau]c"}]], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], "/", "\[Tau]c"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"2", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["7", "4"]}], "/", "\[Tau]c"}]], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "4"]}], "/", "\[Tau]c"}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6352634276930857`*^9, 3.635263443526917*^9}, 
   3.6352634991120996`*^9, 3.63526366195021*^9, 3.6352663959083157`*^9, 
   3.6355971822229843`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.635263583301627*^9, 3.635263584469757*^9}}],

Cell["\<\
A multi-exponential distortion with 2 input channels and 1 output channel.\
\>", "Text",
 CellChangeTimes->{{3.635263562524873*^9, 3.635263577500737*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  RowBox[{"ConvolutionDistortion", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"#", "<", "0"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "#"}], "/", 
            RowBox[{"\[Tau]c", "[", 
             RowBox[{"L", ",", "K"}], "]"}]}], "]"}], "/", 
          RowBox[{"\[Tau]c", "[", 
           RowBox[{"L", ",", "K"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"L", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"K", ",", "2"}], "}"}]}], "]"}], "&"}], ",", "2", ",", "4", 
    ",", "1", ",", 
    RowBox[{"1", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", ".3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", ".7"}], "}"}]}], "}"}], ",", "True"}], 
    "]"}], "//", "Last"}], "//", "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.635254541435273*^9, 3.635254587246319*^9}, {
   3.635255936555893*^9, 3.6352559676675463`*^9}, {3.635259761547264*^9, 
   3.63525977854543*^9}, 3.635259836895347*^9, {3.6352598839996843`*^9, 
   3.635259903203875*^9}, {3.635262001009087*^9, 3.635262073912902*^9}, {
   3.635262113752603*^9, 3.6352621187369547`*^9}, {3.635262192999021*^9, 
   3.635262194553067*^9}, {3.635262395919607*^9, 3.635262399682296*^9}, 
   3.6352625113699636`*^9, {3.6352634527968597`*^9, 3.635263456711238*^9}, 
   3.635597198483917*^9}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"ConvolutionDistortion", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"0", 
               RowBox[{"#1", "<", "0"}]},
              {
               FractionBox[
                RowBox[{"Exp", "[", 
                 RowBox[{"-", 
                  FractionBox["#1", 
                   RowBox[{"\[Tau]c", "[", 
                    RowBox[{"L", ",", "K"}], "]"}]]}], "]"}], 
                RowBox[{"\[Tau]c", "[", 
                 RowBox[{"L", ",", "K"}], "]"}]], 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"K", ",", "2"}], "}"}]}], "]"}], "&"}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{
  3.6352634609979973`*^9, 3.635263505544334*^9, {3.6355971952297573`*^9, 
   3.635597202811635*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "1", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6352634609979973`*^9, 3.635263505544334*^9, {3.6355971952297573`*^9, 
   3.635597202815234*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 3", "Subsubsection",
 CellChangeTimes->{{3.635263589981556*^9, 3.6352635916611958`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"ExponentialDistortion", "[", 
    RowBox[{"1", ",", "10", ",", "120", ",", "1", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputPulse", "=", 
   RowBox[{"AddTimeSteps", "[", 
    RowBox[{"1", ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"inputPulse", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"inputPulse", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}], ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635263592822242*^9, 3.635263854747651*^9}, {
  3.6352639002564096`*^9, 3.635264000818947*^9}, {3.635772816923788*^9, 
  3.635772902471187*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7FO47cSNT/+3h4mg8j/Ycxg8CxW6+gom74DO
r1BSntrhJOwA4XJg8B9VhQTpn2OC8gUw+EUrLF+6vRWC8kUw+AKnds8/YPYH
ap8EBn9J5nyuc8kfoHwZDH7GZq3bHzI4oeYpYPCXiPLXR2b9hapXwuAv2Cv3
WbbkAJSvgsFnwAEAPJFRFg==
        "], {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
              10, 9, 8, 7, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 11.999999999999973`}, {-5.103872594915024, 
         5.103872594915024}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 11.999999999999973`}, {-5.103872594915024, 
         5.103872594915024}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 11.999999999999973`}, {-4.19907263189622, 
         4.19907263189622}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 11.999999999999973`}, {-4.19907263189622, 
         4.19907263189622}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.63577286982335*^9, 3.635772902784827*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IQDistortion", "Subsection",
 CellChangeTimes->{{3.6352541439153347`*^9, 3.635254144234396*^9}, {
  3.635264071882061*^9, 3.635264075026222*^9}}],

Cell[TextData[{
 StyleBox["IQDistortion[", "Input"],
 StyleBox["Igain", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Ioffset", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Qgain", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Qoffset", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["Q\[Theta]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs the 2-channel variable change distortion ",
 StyleBox["{I,Q}\[Rule]{x,y}", "Input"],
 " where ",
 StyleBox["x=(", "Input"],
 StyleBox["Igain", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*I+", "Input"],
 StyleBox["Ioffset", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[")+Cos[", "Input"],
 StyleBox["Q\[Theta]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["](", "Input"],
 StyleBox["Qgain", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*Q+", "Input"],
 StyleBox["Qoffset", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[")", "Input"],
 ", ",
 StyleBox["ynew=Sin[", "Input"],
 StyleBox["Q\[Theta]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["](", "Input"],
 StyleBox["Qgain", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*Q+", "Input"],
 StyleBox["Qoffset", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[")", "Input"],
 ", and where ",
 StyleBox["Q\[Theta]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is the angle from I to Q in an IQ mixer."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.63551004141707*^9, {3.635510078742257*^9, 3.6355100868316383`*^9}, {
   3.6355101292622013`*^9, 3.6355102122291107`*^9}, {3.63551025759659*^9, 
   3.6355102767075157`*^9}},
 CellTags->"IQDistortion::usage"],

Cell[BoxData["NDSolveValue"], "Input",
 CellChangeTimes->{{3.635607051426825*^9, 3.635607053179553*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635597272290969*^9, 3.6355972731695642`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IQDistortion", "[", 
  RowBox[{
  "Igain", ",", "Ioffset", ",", "Qgain", ",", "Qoffset", ",", "Q\[Theta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.635597274611706*^9, 3.635597292936591*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"VariableChangeDistortion", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Ichan$791", ",", "Qchan$791"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Ichan$791", " ", "Igain"}], "+", "Ioffset", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Qchan$791", " ", "Qgain"}], "+", "Qoffset"}], ")"}], " ", 
          RowBox[{"Cos", "[", "Q\[Theta]", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Qchan$791", " ", "Qgain"}], "+", "Qoffset"}], ")"}], " ", 
         
         RowBox[{"Sin", "[", "Q\[Theta]", "]"}]}]}], "}"}]}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{
  3.635597293283586*^9, {3.635597438265327*^9, 3.635597452249086*^9}, 
   3.635597816091221*^9, {3.63559789680194*^9, 3.63559791437927*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NonlinearTransferDistortion", "Subsection",
 CellChangeTimes->{{3.635510281765038*^9, 3.635510286482398*^9}}],

Cell[TextData[{
 StyleBox["NonlinearTransferDistortion[", "Input"],
 StyleBox["gainFunction", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a ",
 StyleBox["DistortionOperator", "Input"],
 " that performs a distortion by taking the discrete fourier transform of the \
pulse, multiplying every fourier component by the frequency and amplitute \
dependent function ",
 StyleBox["gainFunction", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["freq", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["amp", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", and then returning it to time domain. In the event that ",
 StyleBox["gainFunction", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is only a function of frequency, this will be the same as a convolution. \n\
\n",
 StyleBox["Details",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThis function expects two input channels and output pulses have two \
output channels. The first input channel is interpretted as the real part of \
a waveform, and the second as the imaginary part; this complex waveform is \
discrete fourier transformed, and the elements of the resulting complex \
vector are fed to the ",
 StyleBox["amp", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " argument of gainFunction. The ",
 StyleBox["freq", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " argument of ",
 StyleBox["gainFunction", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is computed assuming uniform time spacing. The modified fourier vector is \
inverse transformed and returned, real and imaginary compenents being \
interpretted as the first and second output channels, respectively.\n\n",
 StyleBox["Notes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] It is assumed that the pulse has uniform time spacing.\n\
\[Bullet] ",
 StyleBox["PerturbateDistortion", "Input"],
 " is used to compute the Jacobian tensor."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.635510293719405*^9, 3.635510390502116*^9, {3.635597941574155*^9, 
   3.635597946686429*^9}, {3.6356014501532373`*^9, 3.635601551685849*^9}, {
   3.635601620438122*^9, 3.6356018747431*^9}, {3.635601908911014*^9, 
   3.6356019152467537`*^9}},
 CellTags->"NonlinearTransferDistortion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635597965699574*^9, 3.6355979684520473`*^9}}],

Cell["Define a gain function and plot it.", "Text",
 CellChangeTimes->{{3.6356019255219307`*^9, 3.635601933076226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gainFcn", "[", 
   RowBox[{"freq_", ",", "amp_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"0.2", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "amp", "]"}], "2"]}]}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", "freq", "]"}], "-", "5"}], ")"}], "2"]}], "/", 
     "3"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"gainFcn", "[", 
    RowBox[{"freq", ",", "amp"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"freq", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"amp", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Freq\>\"", ",", "\"\<Amp\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.635598785444351*^9, 3.6355989053410063`*^9}, {
  3.635600966686075*^9, 3.635600967361505*^9}, {3.6356013049807167`*^9, 
  3.635601305177038*^9}, {3.635601381136883*^9, 3.635601414563054*^9}, {
  3.635601934438135*^9, 3.6356019537209883`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXdYj+0b/ytNRQsREWVWZGW778jIiOyZrLIiyd4ZkayQPUr2qlBJdtmj
Qiiioa2lkjR+z+Nzvs/799y/43v8nn86jpfzOe/zen+u+7rPazefsWjUbBUl
JSUvTSWlWv/8fd7e//vFX+f6Kv4e7Ltxp1HNqo0dBJXInTULkzIE8C31Q1r3
/DVdSJgRKyxMKmP+s+2M9sltdwpjS/LW+5kri+CZL7rvWfkxWBDCi766Jakz
P3LQ6Euj6y+EtqvKBHs/HeY79Eb/Mez6TfA5UTXCz1yf+eFB0xu8r84Rav7+
Z8h8idK//xUKntNVgt2SGjA/RfbZD1Wdk8IaMT9A/p3MNfTs/ZowD6Z43m7R
uh/m1ox5BcUf9FOtu595c+bN2inKO+2vnxbMj5E+xmM1s2pqzJjvJT2hs0LX
BGGRz+TXx1tbs87gRxNe/d65YAbrDF6r6s/PUVmSzuBWP5eFrRkYwjqDm/c9
alnj+pJ1Bs9qN0on74SkM/j5UcebN7+WyzqDq7ZUXrR2jqQz+DWyh87gxeQf
OoP3onigM7hI8UNncGsqL3QGv076QGfw5aQndFbolyHoFMWf7DulI+sM/sJ1
huP2lzNZZ/CJDRdu/6i/h3UG9zk5SWfrnlDWGXyYV2Tu1a2vWWfw5vP3mHl+
TmGdwW2nG9dXu/+DdQYvmn7qVGlAEesMbk/20BnckvxDZ/BZFA90Bj9B8UNn
cA8qL3QG/076QGfw+qQndFboVCQcqSj6edKpM+sMXv/ZwvaWRi6sM/jGGRsH
VP7YyzqDV8Wm7T0QdoN1BtcM7blzv0Yc6wzeLa6O7eUfaawzeGiPBSvuHypk
ncF7hn/ZP+fyT9YZPIzsoTN4f/IPncEbUDzQGbxenCJ+6Ax+jMoLncE7kj7Q
Gfw06QmdFXqUCUbnIp4/aG/DOoOvqijes2zYXNYZ/Pfnblf3b9vPOoNv8zYY
dCkinHUGjyya/Tlsw1vWGbzd1Oez9sdnsM7g26PnT3qu/JN1Bv9mfmtogncZ
6wy+i+yhM3h38g+dwZ9TPNAZ/DTFD53BG35RlBc6gx8hfaAzeAvSEzoryl0p
bClrZR70sgfrDP77T/6KOQvcWGfwh957HwWkHGSdwS0eZVg88b/NOoP3Vpo2
8+7VBNYZvKLu412WO3JYZ/BWcTusTRuXsc7gaRc7xfTtUsE6g1uSPXQG19ZV
+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
j39fHfp94UevZf54e79iYaf98nsOS4vZHr97CP3usK/ILA43ty8XPkVf37mm
Tynboz7UUH2AffrFf/tF1UKfzavd9j8qZ3vUk59UT2CfaVN92y1JWbzl/drJ
X6OK7VF/hlD9UcSnJir+XVXMSf3lkZ/4UVCUR4Xr1ckPTzdXn30lKPzqs32Q
a4L1A1Vl1hP8HHE8F37yqH7iuXG/VZrY+2mIdkGaNyLqfOHnon4aUv3Ec2G/
wkq71+X0Wvxc8DXE8Vz4SaH6j+cO/Pse1xZdf9R8PPT9Gz8X9TmG6jOeC/uJ
B9QcfM00RHDY16X3AvHAfirZIx7YW9H7hXhu/83H6oh2jxaGXd6exvHgvUil
9wLPhf2AkzFzpz+ozfHAXoneL8QD+yFkj3hg/4LeU8TTUFetgb2Bnhj+dmSx
0ZIMKR56vxbS+4Xnwr730KG7LO7WleIhe2V6TxEP7PuRPcdD9s70vivetxrh
raCeX7NeXzyXlN7qSOBLYWh0fMG//Xm8p63UDDtGuEQJiB/2MU3P+iYGZHP8
sJ9B7zXihH3gsBdTS331OX7Yb6b2AfHD/gzZI37YK1M7oyinKdsnUPwo1y53
jcdhP/75vsSve2MmxHKc4PWWrvmWr/WNywU+N2jhlpL6Pzh+8IvRb1eMyDHk
OMGvEEf7Bt6C/CNOcL23injQH0E71n75o8kz75QyR3tlvPyA+c6uv5mjXZq+
Wy04ZF0Vc7Q/qt+01s8ZJq0HQ/uwWdXZu9RWWr+E97dTV7WimpPSehu8R3oe
v297u0jrQ1CfG9/uneV7QFrPgHpluS0z0ruBAXP8XsndJ4R6+9cT68ZUrV2S
9FhQ/A0T5tw9nbVoRG8hV1Ozk1+QmQh+hDi+L2j/7T+euRDasITbW/AhxGGP
9t+2/pqc+qa/2B68P3HYo/1P89Ib0resgu3B04nDHu2/RfOZTy2O1rA9uBVx
2KPd1i2/1WmRtwrXZ3A94siLMC5USvNo4Lx+j/op8I/2OXF5gN6l82rsH/wz
cdij/fyjm7XWvqMW24NXEoc92reF93euGtK8DtuDuxOHPdqfo3b2tcZH6bE9
+DHisMf7267rH73IxoZsD25BHPVHUV8MRaUIoy+f/GaxDni/0kKmuLy+Wp/9
gKcThz38vLYr0L6tbcTvNbihbtXy5+3qi6if4Gb0XIz/o94+V1KqO35XB9m6
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
6xlGcW7rOi6x0j2a9awoUcTZzGfl54F7pfGKPhTnNH2dvd3WSOMV6/bFGbW0
zxIKU9XOeZySxitSmxYt8TMvE+rPDOo7w13qX2MeXGWKSXobI6l/3Tq/4GhS
WIlQdLMgNHJjMOuD+Zf2gpJTqyVZrE+f/9Ff/krP/Tm8w4fZ9lJ/2Yuea9eu
hV7V7WzWx4yea1rPZ9X1FkmsTwztmzAYU+N0r1Qaf3C9k//I/B+/eX01PiTc
kcYfNCnOiP6OcQ9WSuMPF3x/5LolFQlP419cU74ijT+8TCl965b0R2hQ88fd
30jqL2M9QNCdLhrHr0v9Zf2Qkj9hbhVC6LKY+bUtrrMOralfmSLr/z4j/5Y1
AbpXZ0n93wXkf7/GK9cF8T9Yhzrk37LVdftWQ7+yDtdo3iQ0cNq5OS7PWQfH
v/X6t3CgxwMbP70Q1qGY5lOeTl38ON5RGjfYN6J4qL3fL2Fgt9kjjH2kcYPJ
o6oOmz9TEiN1W/ccs1vq/2L9g0q/4sw+GQdYh+pblVb2BkpiZeWo6MtFoazD
duonirL+7CTyL9xy7GJrI/VnLch/6uJlg0+4F7EOleS/0NjGOsw2lXU4QvM+
85ovv17+8DXr0Kt/+aaksGph/r7SNwe/SOMAX2g+yKP3t+lFldI4wFqDX5fM
7auEeXrxW6K6SeMAsddr7P2C/ulvPjd49SpX6s9ivUez7LFbta9J/dkljWu+
hP1QEW9pTB7yplsY61BN/T5F/0+Zv+NvyL/Vmr4Dmt2tZh1Okf+5X+/H2HiW
sA6Lyf+pgElfH87+zjr0o3mrJlmBD8LV4lkHw03Vi5NsVMTyy6bdKgeEsw7p
NJ+V1Kc0sndfqV9/4+94vLLY0clgdNZNqV8/4G+86uLyJ6sH25R7sg5Y31IW
Oi1Vra7UP81ao7zL/JmaOO6TbbSOWiTrsOR/9EPtyH+FWZfm5tXKnM80IP/O
L2Mu1fz8xTpkkH+z1oM63dLP5vJuS1dqYW+gJgpb+y24Z3+byzuR5nNVZwTH
3ah/RBr/GaYU5jZZVXTU25fkoOLB5Y1cpnrRbbKWeHudw+60BVI/FOt2ot9o
rPPfKPVDpybX6usXpCnGLtboNHviXS5vFvX7+sv6m7fIv/2uzPpO5apcXh/y
/6j7lorygj9c3knkv05imyHdU/K4XK9pPjH3vP7ZiZuk/vWJKyouSTYaYuIl
9Yn5+lL/usPf+VkdcXShT8B7e6m/iXVHCz+EzhUHSf3N+L/P0Rb9s97bLzjy
gMs1Ff1BWb+yPfm/P/XS4M8LpX6lEvkf5lczQb+L1K+MJf8VQxvGDX9UyOXq
T/Obg7brHDvwSOpHG/6dZ6wt3lROD4jfLvWjg3po1bY30BWb7jokbB0k9Sux
bmppofUNpQlSv3JQgOYJt8l1xeurD3peHxot5UvUjwuQ9R9Pk3+tvUvXDDWX
+o+e5P/Hk0Zz+15V4XLZkf9j3y4s9Bj/k8sVQfOtK0ekPdq/R+ovb/s7/6gj
putbhP2ZK/WXd75Sm5pUpif22mhaz+6E1H9cSuu+koy9pn64LvUfnTaqnXM7
qif28xjcaJv4RPj/9RN9yX/GpPcNg4ylfiL8D+yz98omFzUu11Tyn9/uWZWW
VRnHXxWntcz8ma7YOf/H8y4Tpf7v4Gr1rn6zDEQvx6kO5m2lfiLWCRT+PJJY
/kqKv1Go+npzLQNReJnVLWfFc+G/4xj/b39wEPlXcWnZJXuk1B+E/wnFs1ul
TNHk+BuS//x2y9bVs/vN8d9qpG5oP0pfPGa92nRXiNTPVemgWcc+3lC8mjDb
0MhV6vdhPcboPpkdejhI/dy3qRrjk5YZipe2r4j9VPJKkPfjRsr6cfCfmN1O
r/RGPY4/h/ybZh58O26vNscfT/6PfQsu3HusUho/XJe1emXSWWHg1esLhho4
8bzqaOLuCSYus8qkeVUlpYYZ//c5z7DfS/2pKOpPIc535GcN+QHH/GM+zdtC
z9FrFfYRFA94CPl3ilX0K/FcT8r/m9nOmvYgOY/jrC2b/4V9U+q/GFL/BfFs
Jj+W5Af2uygf3njHvOONzgXsP1F2PjDsf1M+v4vyefj3Jz97yA9+L0fKw58c
slo96sB37l+4UV5aWsfdqptaInPk1alfej5YfzqRnxtCeemLM9fcTqyS4kmj
/PmHLH82oPx2WHr/6m3/xAX/4ykPnJW+MviZWjJz5Kuqbbr7DY1LZv+vKC9t
KctLKylvvNb+zSjTf3531HNbyq9e+3YRzB+FsH/wJ4O/VBpuTWGO/HCxedj+
xSqp/NwplAd2k+WBGZSn/b7t2tt3eCE/twHlM3Y2o3sMiL/B/sEjah9Wbeub
zhz5WO9T8/ubNfvOz42jvMtclndlUV6k6dwionuTn/zcHZRXHD87svXGORHs
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
k2tPbB3Cr/C598zvH3kSX+cZnzsN7qmZZ3x1fDLtu9ZjfnF0Vvzd5Tm0H7Uh
87p0boNiv2Vj5s7qu0/8evBWWErn5IN/9N/bbJZpFO2XMGV+eMt2k6+jj9M+
PWk8ZO93r/LPzsv43HjwpkVRS1sWDKbzAlSlcYwpifF+0U9pn3xt5sV9NptM
CEymfeN6zIe4fzE7tjiX9p02Zh5M5yQo9i00Zd67RdXYPbkPaN+jqTRe4VLp
9GjradpPKI1L7Hx07piKynpBMf8kjUs0PN76T4dvjnw+MPrj5leKV50qz+Nz
4MFrRivOH8C9OeATny6+E/nxAp8HC57/4KTRDqMt0n2UxBskx7iqfplA+xlM
ud/qRfv3FfPoUv+3uleTM2kLfGldu9TP7RBs/3K62nQ+bxb9tUm0z10xTyP1
76aZ3/TTq+UqKM5VkfprJyhvj5f1s5pS/j+a2kPw99SP6EPtIff7qD/SWtaf
qk/9mu3UHoJfWWR165pTtbCE2j3w28SzZP2jNuRnqqwfFEfPjZf1d6pk/R3w
YVQuJ1n/5TPpsIzWsaP/okH74uX9l5HUf6lP7SHy/C7jPaNmNAkQSqk9BK9r
sXzJwaaPhK/UHoL/2GVzVWz0TXhG7SF4yejUMaun/hQmUXsIbv22g+nZM0pi
BLV74M2zFrWICfon36J2D/x03Zdrg7zShdPU7oEnLRg81HLsc8GX2j3wOldS
DjoMuCgMonYPXGVLTtkiXy9u98ALd8x5t9ZqtNCe2j30F0YEnGx389ZDwYva
PXDHHtcdfw/6Jiygdg889fXzhWqDSwQLavfAt4/vuM/HWEVE+wZu/GyUw9Mx
OdyOgY99OypwjU0Itf9SvyZt6Omzalt30r4pqV9jdDZh3+hJzkILasfQjwh6
v3ivseo3QYfaMfCZdaxnGaWWCH+oHQO/2mSRxpSNtWi/tCnzxn0jh2WtCRca
UrsEHujb89mY+wdo/7DUfznqdb3ecI251J5LeXuZz6VHh1edoPOrpfy8pGzy
MZWyxUIQtQ/IM23WZn2fd2mF4EvtAPKiwPxVrbbO3kD7h8P4O/6Gvl+8fon4
HfrOtv+7Xq0ec7NhuVOV2hXy+wJuQPt88b6A59C8DM73xnckMyzb/22DAmEq
ne8N3sRz3biZeYW0/9OA2+3Ba+sFR6wuov2Z9ZkfrghJKh1TTPshjZgf6uiQ
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
BzbytYw=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8V9Mfxz93nHuuokQqJaTMSiQqM6MllFKyo2SlECF7hey9SUZk7xDK
yN5775mM7P17PX+v4+GP832/7/tz7jr3nPd8nW+H3SYMHZ83Go3zQqNRiK4r
2kJ0LR3cLv5c8etVjcat4k8T30v8/KzR2EttUbV91ZZQO16/tVefvXWxZURv
UztLsgu5TtlojFOfbUQv1vEJkv+sfkN03FTy7ySbL34f8cNEZ+jcY9VnDd1r
b8maqR2l4zPV7yDRr3TuGeIniv9C/PXB9++u/nMkf018Z9Gfdby+zr1SdKXY
aDwi/hfxD+q3V9RnVdE+km2g9rqOb9a99xA/WPQh/faqZKuJ7qTj5SSPomfp
eJLk83XfK3StR8VfLnq25AeL/1ryX9T3QLVl1R7Us10k+aHqszvXUNtPxzN1
rd3Eby76idqu4geKXqB+t+v3V3Xe+eJvE/+K+D30/HeIf038jbrXVeKbiJ6h
PjeKf0HyE8VPFz9P/KpqE/Usq4h+r+seoevvLrpAbX/x24lur2t20u9H1o3G
LB0fIPn2oo+qHSl+rOi3ageL30V0lK73hPheaidXfobHdf5u+m0lyZqL9lf7
W/JP9Gy7q88o8Werz2jxu4g/S/wluu8Y8ReIHyp+V/Hnir9J51wtvqnotTyX
+NV13iBds9T1v5T8ErUpkv+iZ/lMsjFqQe0kyfeU/H3Jp4rfR/yH9NG5Y/X7
VqL7ibZWO12/9dDxi6KrqO9bkj2m1iPzHFlT7Qn9Nld0dbW54luX/haniH5X
uc/ForN0/uOSdxD9VsdrSH6R6D06nif58sw1ye5R66D2ptocta5qH6vfCqLH
MY9Eu6s9qXOW0D1uEG2uc7/Wb50lP5t1p7aa+DNFX2duZT7ONYYX65yD9B3v
0G+n6tyeotvo/TvnXldl9Fq9R/IWmdfjMcwz0VmZn+POymPTW7S3zttSsi3U
3lB7KPNz3JXm9Ux0hvp1EX+u6Fq6/3uSdRO9Q8/9oPhlRD+s/N7HiNb67VLJ
g+R3Z15TvOcakr8r2lV0kGQD1N7X8WQ9Q3+1fjpeNfob/abrPKLz3+E80X76
vafaZrxH9Pz8U30GivbP/Exvi85TWzutddY8OuJ+nf+s6IqF9cSGmdf8O6KP
q/VEFv3uP+iah+o+fdO9Boj2Ss82W21ltXt17peV+VNEP1XrJL6p3muK+I7i
TxCdqfvdwncW3ST62X5Hx+p4luRtRO+TbMXMumC56G+9UH2+qLzWpoouVnq9
nyj6gGSrqN2HjuBZMt8bHb2n2uGSr6/nXU+tlY5H6JyWon/oXpPVxvLe+m0P
XfcA8TeJHib5HuLflXxn9f1L/Gi1CZJvK/q85OPFjxD/nPjt0a/it1H7WPxO
fAvx30Wvz1V1zYmiO0r2svo31xr/ieszT9BJaj/r+GSeSXSB+nyaWTfmakur
fyb6uX4fo9ZLfe5Un7Hi1xV/t/hhusfG4g9Q390l7y3+Lsm3kXwT8RMlb6n2
h/iPeD+19cTfoz57lV6/bUvrLHTXfXr2PXXcjfuLDlBriP+MZ9A199XhDawb
9d9J/Cjxx4jfmu8rupn6/44uUv8dmL/id1YbHm0fsZP3ij9O/HXilw22p7+q
/wri2/HuusZwtSWZJ4y9+k9T/1nY28rr+DbRy6J1JrpzPx2fyZiIfpVZBy7C
WtX5UyX/jffVb9/oeDvpjT66/o/MAR0fgUz8S+pziPqU+m1H9blW8uskXwxd
y/wQf43u9bmuOzrp4SN1vJXkO7BesAGsP13nwMLj84r4a8TPEL+o6Ba6dqXz
5os/UOf8gx3VvQ4Wf4X6zGbOqP3F+El+WWF7WojuX5m/R/e8VMcXis9FO+h4
X91nedHhuvY3+AZqu+i3tURv0W/bil+F5xc/krnJuInfmnEXf4X49fVsX/PM
zBHx8xkT8UPVOoqfxnwT30n8leJ7Y8uxiZIN4TnwDdAX4luKnyp+O/GriZ8h
fl31/5K1I9nmam3RqZIPEN8GWyl+oPilxZ8j/mi+sfiH9V6TxQedv5PG5KrC
fhoO3Hd63wlqS6lNzDx/ztFPvfRbhf3Sde4Ntt0bS3BXYb9iKdFBau2wy+pz
tfjzmOp8I7VlxF8k+eHiR4p/Efsgvr34S8RvHPzMv4v2lDywjiVfu7BfeQI6
pPK6YH2cr7k6XPzxrBvJh4g/mnmrzgPEP6L+m+r9fsWm863VBop/VPLrSuuj
fqIfldYzfbE/aiPQ2aJb6/pD1f9YXfNqHW8r+UaiH5TWMxuLDlafTdXnQPX5
tuG5MVb8AXwP8Y+h08R3Zm0yH8Q3EX+2+A3ENxV/LjpV/CLizxTfQzz+9HH6
s4541MWJ4ncQ30X89byX+CXFn8S4Ffa3jxe/kfjFxF8ofhPxS4ifIn5D8YuK
P198e7UvxH+u1lfypURP5V68m/i1RW+t7C93w5dUO0X8OqKXJv2DHzavMr+j
6EGFddKrus7BhXX8m+I7ql2CL6Q+z4helllvjpX8Ymxk5TWLT9VH9LHK+ntb
0dMK66WFDIbG+Wr1eRHbqOMrky56tLL+Hy76dOZrcjyusA15Rn1fqKwf8AO/
knw8tkXyr8VPEP8Juj362Z7iOdEhki8v+nfhmOUP9Xm+sn7qil5JugrdvX1l
m7Wd6JPp3N3Q64Xn57OMt/pOU6vVDinsu74l+UIdX6/WBj+jsl3dSPSdyutv
Q9EFmd+9OX5UZd1e6Hl/KKyrv9N1pic7jY1+FbueOc56pbIcX444Cnvxt/rv
Wzkmwk97u7C9my35BYV1/l/iZ4i/Xnwz0dcq3z+L9gevEb+42j+V3+tZ0e/R
++p/pObPm5VtDXFfV/Wfie1T+6gyjbrOB5XfO4ifkfQN8+zPwv7n0brOb4Xj
sp90jbfVv33mOKgorZOOE702sx+CTfpMvy2TWS9dWdjG1aKfVNZjte51uY4v
lrwU3bu0z7yM6Nr8Jv7pyuM5P43pRtKPvemr3zcR30/8OPGbie8vfl/x/cQP
F7+f+N21/tds2GYMlHw3yReK7y9+BHooOs7Ct8K/21VtnH4/Q+dtUfsbTI3W
I/gb6JUBkr+BbkaPB8/bDpVjPeKLbyrHFPiR7XXuH5X9zy7RfiH+4WrRsSvx
ySrif6ocn+zO3K/sq/5YWZf+9u/6ruwz91GfX1OMMTA6riT+WFDZr8W/7SD5
95X9yP6s18p+OL40fif+5/rRa551ukJuvYB++CiNO+PfVH2G6H0rYk70fW2/
/yjxg2t/19PR/bXjnNOJU2r7sieJv15tmK7TRH3maKwOEt9K/C6149je0ToN
n3YJ8TvXjlF7it+2tn5fQ/xzOvcw9Wktfpb6j2eeid8oWGf+KrqP+p+q5zlR
8knoIuax+C1rz7PTxC8e7T+1iI558ck/r6xr0DlrRce26A30x+HowPTMzaJ9
o+aii0b7souJnqo+f6ZnGyf+6/QuB7AO03MOEf9uGocJ4r8Vv6T4oHE/JnP8
+YfedS3RZUUL/IPM/isxNjr+QvV/Tb89K9mFokPVZ8Xc/vSNlXUpenLNaJu4
ebQvi15cDv8x2C6gDwcm27N15tiAGKEj80d0ZGb7fX6w7RiL7iqt088XPS5Y
n+/CfEh2BZt9kOR9k+6dV/zfTDROy71eW4s/PXceCvt4rPinkp19UvQz0U/R
D2pfqQ3NfM5vut/y2JfSc/ASbCvzT/canOzdu5Vj2MNEXy1t2y4o7X/wHufF
ZBszjyP3GZL5Xr1KU3y8nqVt/WOF7zkpcy7m3sr3Rf/fES3HZ+sVnUsZJPpW
6bzAZaKLRPtqD7AWg/XbYcmGjE969XX1e078RaWfnXVBDD4st03Fv2+SOX/F
tyEewP5ih59Wayb+YvW7L/mQ2Ou2mXM+2IyXdd2nxJ9XOnbCpmBbBuuc5XL7
VfjCrM2VGtaJ+FTriFZ6/kt03iQNzAIdbyP5yqI3V7ZpXUSH57Yl5J7Qrfjl
3OOW6GeYnezz6GSXb6lsj7DXgyr7Oziw65JfVPu4YboV+kf8IZnj65u5r577
btFWorNLj//O5LWCbcp26NjM34K8x0ohxcrqc4vOuUd9WotmufNm5D1WC9aZ
rVJujLzHA+o3unTc3UL0YbXDxY8h5lNblTXL/AqOm4jZdy2tQ5qRayyt/9sw
B3Sv4zPnKE5gXNWeYa6zfsTvI3q3nukx1qboG8HveKGu+VJwPmFH9E1wn2n4
DqxfXbep6EmZcxzkN3oQe4jvrbZ6sO3ooOuPL53b6yj6YXAOZ2ddczy6Uffc
Xt/3L/0+OXOOY3/12wh7xBirbS6+O3mo0raDXNAWrLX07bC9zJ3puv+z4luJ
P7i0bewh/lD0WXDehlzQaaJ91d7Wbxdl1jWsz2+D8za7RueHTtVvm/J7cE6P
3N7faqcwv0VPzpz3IedzdmZ9ga5gXp+v4+/Fn5vmN8/3op5nReZUaZvfU/zt
6vunjjdmLpT2F5j7t+VeNxdktu/4FMz9q3LPc3yJm9C5hXXdQ+IfrhxL/lXZ
v+gnfk7qz5q4X/xrhWPWm9G5pX3ChZKdo3Yy9ou8XmW/6ZbgvOJRanMatgnM
mafwU4PnMzlJ8sjkMMllMsanZ86PfS/586y16O92Rub8G/43enuG+r8dnJsi
50luB1u/m47fyE0/Zu6XzuWSV8E+HZs5j/pi8LokT7hu9JraIvqbTM2ce/8q
uO8Nkr9TOid7JfF38HvcHT32fNM3G84X4XsME/9N8Fq5qvKaYw3e3/AcxQcg
L/dOML1W13k22DcmR/d26VzqFaV9BnTqVUn/Ey9h/27T8fX6fd/aOWfiB2zn
g8T2ou/rt8mlY8k39e7vY28z/8acZm6/XPjbMweuwR6VjtHIvzCHmEtXEbsR
M4t/V/z5+u0M8X/mnk/MK3IR5Hufz+zP4yMwhzkHX+Zovqf6/lM6L/ozazB3
PvfMzGuPOU4e4+nc4/eh+lwcnVf7SvSzPOUAJb80OjfzY7RPjW+NXl6osXqB
+Ylfg17HTpZeo6zVwWlts8af0PmHlY7HyfVh11l/5D1YY6y153nX3DmEF7Cn
uu5TzCeN+faMT1rnXwTn1anplCkWIA+Cf0Sc8u94Qb8uHU/cmDk/Mi06f/ZP
dDxxQ+Y4BH/t5sw2m/w+awT9fEzpfDi6byrfpmEbQXyFzbxH/BXRubq/uXZu
W01OlbgX+3tbaf9uRrLjG0p+S+Y8OHUi8unMxZNKzz1qTCeX9iPuF+2TO1dO
nvyc0usU/fxnOpdzjk9+DjkycrzXZY57WxRed4+UzgvxDMRm36f3Zewuj9Yr
f4qezRpo2BZgj4g7nuZ+hemPpW0i8cJsHZ+u44catolnlNY92DJ8VOIU6iL4
pQ9n/mbtCttMvitzlLn6FXYjt006Uf0+CO5zaYqDr8ocJ4/EF0w28uPge60Q
naufknlcvgy+54qSty38jAuxI6X1wVy+aZHmqq41qfhPh21TeA2x/u7R+S+o
74Gae3+TF8isq8m7359Zn+5TeO2whkYVXuvog8dK9yGHf1Zp3fVEabtJfIcO
PbO0riNuPbW0XsJ/IFaLuetQ2H14zp2Xnp/3uF2/vZw574/f9WLmGPwK3e9y
ZIVrPS9kzjMwx19I8xydje4mJ397+hZ8k+vTPGG+TCucd42i16ndJH5xdFQa
T8aV2gI1BtYJvivPQ2yO/cEO4SfNSTzfCV34frKzLXM/A+O+RG45Y8c35Fv2
TPrsvdT/0HQv/LOP0rP/G3diA8g3jaxMyT/RB3s1kny16AeZ9e2Sufvzze4t
/pvX3aNt1yG1a7KfZNb1xGvMk9Wj9T16H/+UGvGXmXUj8R3+LX4uOZVvMudV
bihd4z1CtHVu3YQ+GpOug+2gJk5/9AO19PlJr5Ib4/rkx4g9WSPdRG9J9gK7
MS7lhcgP3VfY9nUqHCdy/9cr54C/S+t9RuKJJw5IcQU5qjuSfkPP3Y3uRqfg
v6XcDjmeSdV/uR9qxD9m1nttcsfLzLnDUzxFXIUOpg/nUAP/Jem3e0vHHSeU
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtnAf8T9Ubx++9545vKBFJpMhINCSrbVVSiYayFaFkRKShaA9tDUlJaI9/
adEwUmmQ9qShUmlqaf0/b5/7ejmv33nOc+753nHOcz7P53mOhieO7jUqiaKo
ZxpF+hcNzaLoIP0dEKJoq0oUHV5E0blxFP0k5UDJf0lfV/prddEy6bqrTJT+
B+kHSH+Q5DbSdVLbn7nGVP+jJZ8s+Uv1GSu5h64/RePXVP9Rko+QPFzy1pKH
SD5Qcn/JW0o+UfIBkvtJrsbva6yrJNfReP+q7TeN2a78vXGqN9JvjpH+C7Wt
171kuv4Y1U+V/lvpx0g+UvoRuraGxvtT8raSr1SfpeqfSz5W9bHqv0H9a6pt
uOrVVEZq7KrSD5D+DV3TTGOcI7mf6uNU31bjTZbcX/J4yXUk/yZ5G8kX65rn
NdZ6/T1D8i76+5XGf1ptgyS/K7mR+m+r/ier/pfaaqn+sMpk1X/ReN2lP1Ny
b8mjJdeW/IDkyyRfL7m55F8l15R8ocZ4TmNPldxLcm39PVf6h/T3csk3qP+u
kreRPER9B5f3cKzkPVQ/Uvoq0o/VGBskvy35EMk/qs95kreKfU8T1f84yaNU
ryX9rXpHraXbQc/WVnJv6feUvof0VSX/K7m+5Js0zosa+x/J9SRPl7xc8t+S
t+d5JL8g+QeNt1DjvaDx2uj6/6TfQfpbpH9J+l/19yLJ2zDf9BsHS7+V5FdU
78h84b6km6eySX2fkP4W6W9Te0vpf5dcS/Kl0i3WeAsk3yx5pvQtpP9Dcm3J
l0u/RPqDJOtPtFz6g6T/XO2jJeca/xu1DdD9bpK8VvW60u+m/hPV53W1LVLb
g6q3Vv0HlXeY4+q/t+oPqf1tDdxX/ZtIfkO6rswH6Q+TvEz6T6SvLbmb5KWS
P5ZcS/KhkpdI/kjyjrp+pOoXqG293tnW0u+j+gK1vSf9XMbTvbaS7gCNX1Xy
XtI/IP2b0u8j+TrJ/0n+R3J9jXeK6lPVtlF/q0i/m+r3qL5a+lNUvpDcQeMd
qPHqSN9d8gvSr5GuWu7n5bnfkvy6nms99kP3cJXa9tL45/AsPKN0O0k+TfK1
5T2MLNx/H43fSePnGq+55Lm8U9a35F0k3yX5Nclp7vc3W/Krko8o1/drGruz
ri+k31XyPOlXSl9F5Wjdy3dqO0q6Ver3jerXqe1q9dlKbe0lP6r6O+rbT+Uh
5pv67aXxtpC+peS7sQnSxZIbSZ4l+WXJg1Vek9xU/fdX/+rSd5D8mPTvStdc
9zeetUqb+gzLPB/eU/3Qiu0Y9qzgHtW2ja7vLPkZtX+o698KvvcbpJ+jtv3U
tpf+7i35Z/VtofHOkPwwcxgbLf2zqu+g69pr/ET6ntL3V//PpF+t9m9Zf5Lv
VHsv9R+mv3Uy26c5+nuW9Jep3y6S60keIX2s/nVVP0RlJ+kPkn4L6atI7iP9
ldL/qvG3kHy85AuxH5IvkjxU/Sepfz31H1P4efaT7mDJQc/QWPIduuYV6QL2
DHul679Qn/GZ38fWzCP1H6r+kXTrNF5DycvVfqeatlTfYyTXlH4/yU9ojA80
3s7Sj04856eqTw3p91X9cbW9L/0InknySRqvuq5vJvl06WZj09V/K8mDE9vY
FfrbRPLY8n3fp2sSjbez6rerbYXGuxj7Lvks6epzv2qbLF173o/6/q4x20vu
LHm86qcVno/Myy7qP0ttZ0r3IGtQbXfqmo6Sm6t9X+kv0fjDpDtbuh0kV5gD
kudrzFUaa7704yRfLf3vkr+W/jFdv5XkVurfWG1VWUsab5zk53KvhTq65jDV
F6v9P8nPqkxTfYjKrrHblqS+Z+69OutB9cW552ZT9hTWnsZfLrmxfm+8xr9R
fU6QvA32QfXpKsdJrok9Ur1p6vu5TG1jVF+uMW5R/SgwguoPqG295NngC/Wr
qvFnqf6+6qdp/FfV53bJp6n/ENVvTj13arOemRPYSMnfq/xP9cNUEuaWyr2q
V9d4d6p+Dnue6o+k7juX9aUxejCnY9/Dg6pvWfhexqp/NdWXAqrU70m11dAz
b8/4kqdIHqF6AzAHeyHYSPf7E/ZYunqST5a8ffC7flflEdV3VnlB9Q9UnlL9
D/U/UPVm6j9M/bcL3i+bqjys+uMafwX2Vvrh0m+ttieke0vl7uDvzvffQWU+
cwYbqvtpJflHjd1QbUtU31PlSda89FtKv7/k33N/R77nhypPq/6SfqdIfI/8
5qmpbRFtLzOf2cclV1jPqs9X+UzyrSqvqu1gyX9Hbrtb9YaF+3LNL7nfU17a
N8aup998TvX3+H6qz1XbWtVvVnlO/RZI/oV3oXKR6t+wX6i+tepD9T6e0d9N
vFvuUddfmFt+Vu2jpf9Zv/99YpuH7fsJ+yR5IjZJ8g+Sv5U8AZsPttB1r/N8
Kkcyhsqlqr8t/XOsV2wezxr5fTHG7So/Fh6bOc5cf0f656XfpLbfSoxzr/p9
lvtef1WZoPpGledVfx5Mk9ueLJa8mPmueo3Cc/V8bCRjqfzC/AODq//3Kk/z
7sBkqv8C5pL+bDB5bhuxsdz/sR1/lpjrQuyP5D+wIanxbFv68j6C8dAqXb+g
8PxhHmFPsG/TmC9gFrXFaov1dzp7rMb7SNc8iL+hcrrqw9X/fNWXY7PVb7fU
WAHM0DrzGmItvRh5ft6s8q9010geo+ufkH4ja1nlH7B37vnwuNpH6bf76G/d
2H2eVH2hyp+x18hl7JfMwdhti1R/N/dYP6iMzo2R/ivxyrGq36E+k6V7JvJ8
jPQbkf7egKz7/URlIfixXO9rc89N7ol7WyX9/cwVfBXwrsbcFIxv35f+X8l/
4Dsx5yW/pTIfbBDbPzlR153Fs0Re/3+r/8/gTOag9C+rzFR9IHua6n9J/7vu
/2L2q8zPzLP/G/semku/FVirtB+P6e/P0m2ncrzqt6f2D7cHj6i+RmUn1W9i
Delv19S+TKPE+GKhfnM79lbVJ2i8WoW/9Qy+n3S3pfYn67I/g1FVfpSuAfhX
9dmpsUM98C5zIbVuOmtcfz9N/VszJL+iv+vYQ/T3DjBB4vGxfXzTgap3S41d
GifGE9x/F7AgmAbflT1A+l0T+4/sv29LbqQyKPX3xva0UDmZvSz1u2mZ2H/k
/WC72SOHprYJ2AbuCX/4m9Rj38WcZ13mvjfmXS+9n+9Sj3WP2v7W3+8l7554
zuTB+x17FXvWK7r2R+n3TPwNsfXsR+tK/eu57cE3sfes1ZJHlvYZzAgee1hl
Q+xn7pXap8a3xqcHv+EPM9euYD6DRSXvK90ffLeK98uvpM9UVub2z8F+3dXn
P/ZKlft07f6S/1R9G5WnJR8oeVP5PdvgL0qO9P4bSH5Z1Y6S/1J9W2wY+wX2
Ufpdef+qd5b+b9XvV/m6tL9HqP6PSlfpJqnsCXYrn4e2f1PPl6MjY2CwMHs0
ezXfGHw1vcSb4M4zK/ZPwIqQJg0zz3nm/qLI+/ORhfEguPBs9f84GBueqLbq
5f4AF7It+D/1HGeuPxB5P/4s2Bcfmtj/BxOBjbjHU7F/Gn8l+FztIyrGSGAl
5uygYH5ileoD1VZN9ZtSY/takt9OvWZYO69Exg/1CuMRcAn+9fG59895kkfi
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
gjMK4DVyR5rlztclh5Jcyv8DVIie6g==
          "]], Polygon3DBox[CompressedData["
1:eJwt13fYFsUZxeGXr1JFEZAiEKSFEiua0JHeayChCaEJSBWkExDpIL13pPdI
FQIEgxo0ikG9YqIoMUbgEiORSxFFMPfj8sdh5/zmPDO73zs7s5TuOaTd4LRU
KnWMMqlkVio1MT2VKpUzlZoLzKOa2ErsmuA0mf1YPWwjlqIlLkex4tmp1KsZ
qVQR7CWsGP89Xp1/nXJhj/P11W7ic9BS7I/Yo9hC/gtzjMZ2YUXVv2K8vlQ5
Ryq1SKYWrZL7Vm663AG5xthxrCSdwi5gBbHe/AG5atgArAT2+8h5tln8bFpi
jn9hDczR1RyTsFJyk7DGWHdsJ1+UhmGvGK+Z8cbKFcOexl7FmmPjsCLY0LgP
rCk2BptCvbVH45/GM5uzgdwu7dy0Sd9pmeX4Z3wT8/Yw7wKsodxuLA9tlnsd
64B9o51f+y5qo64MNlmmmdqeanfzD9Jc7AoNl98q+xi2hG8j109uH38vTcDe
cc+d5WbGb4mNx85inbAZt9dCrIke+m5hv4vxqYCx8svuwubxhagPf1Btdewp
NYWxvtghrAY2ELsHexI7jNXEBmGtPEs+1+NYfaw1X0Vutlxz8/Ryz3v4u6gz
tk2uilwPNQWwLth27Bdxf1hpLKWmT6wvfhFtoSHwF7L/pTXm6EuPxrrh9+t7
km+k5iBfKNYR9r7+u7Hu/F5zVI0cdlD2LfdWnmqa65rMFfyc/lOylfHdMiXp
Ne3n6YRcKb6q7AKZy8YbJb9T3X6sv/62clf1rZUbQq21d8o9INdBbjDWCtuB
3Y91xPbGulfbQu1lfatlHow1zj+ekaybjjJPYXWjX20prInaidRFbX258/oW
yyyW3aO/AF8QX8L/Fo9N4z75NGwD/wPeRO39/Dv0EnaIzmi/TbP1fSH/Pxqv
9mHXh+iEzJ9d15jjiNxR2o/loPxq2vMrKY1/V26E2oquP6dj2Ejq595ew1sY
Ywi+NDN5B3ao204vxhyx7rEx/Lvyrfnlcstosv4psfe4ruRX0HPaU2N9uD5C
a9T+wxyfqn+Y/0amqv7n0n7aAlM1+anGXKedM95ruWn8AdkT2sczkr5TcvMz
k30l9pf/yC6L9YONxXrGu0QvYPvib6h9MCP5+xyNPSMr2Rtij7igdoXMYWwQ
1gH7HluPdaL1anLxZY3dmS9Nf5Irjr0h+zP+pNpF2Oj4nfCW/Afyk7B+WFHa
LHct9mj9Uz0vlKrFd8Sf4ktqX9e3jh9F/bX/greUG6zvIr2nfSLuJX4TmU+w
t2Lvj7MG24ZtpRLaN2Ktqv8o3lWsOD+AJrunc9jzNCfuMTvZzz+LK43VPqeu
j3Gn6t+FVVT3A9XHL2MbsTtjH6FxxjuDZWJFtDthqyiL30kVtIfRLH2fy+3B
HuJH0jzs6u0zJM6SZ7OTc/OC63gaof2eObu6l/HxbmHjsI+wvtg0bAI2Bvsw
LTkf4pz4N42K/cu1SuyDMvP9JpXM19u8J+N8jbFouNp3ZbuonSDbPt4Fvmj8
zfWt5I/dXpPr411XuzfmjPeXPyPbQd/IeF/iXdVeKFOV78WPpgFyp+Va6Rsa
azT2IuxtrCM2Crsv1lHs/WrfpDL8tnhXsYv8JToS70HsdZ5jFH/aGE35EfgT
2keNV0e+t7rhWDfsCFYb64k9jXWN7wqsFtYLewbrhb2MNcL6YcOwjtg+7DGs
rTmq0wqsRGayXmPdTsRyuo/M9OTdmsR/G+cjPz0t+Raq7Z/v6FfYbExZqi7/
d9ntnuPZ2E/1DebvpE7aW+Uqy3WXuwP7TZzbsWdh3bBBBmmMbcQWG+NlmYFx
1mAvpCXvYryT3eNdVTPXHA/EmcsPpQ5yL8otlTsl9zHt1Z4idzPOeX5O7Ffa
6bTcGAfVz8AW8dfVzsD2YNXi/Na+gX2tb1Ccs3KrtdNiX9J3SK5uVvI3ir/V
jzSCnxlng/Z3amfq2x1/MLykyyrszTiv+QFy1bTnpiW/fayBS3E/2kPcczna
IfNlvNfYWf5vdBgrl5Xsy2VzJnty7M2VsVnYJ8YbaK7NcY5g87BLacmai7X3
CDYf+xwbie3APoxvKXNk4JnmGMuXz0r2+XLmWCWzmipiM7Dzavur3RDnDTYd
qyC3jl9PFbBpWHlsDb823mksKyP5PeJ3OR9jUT5+epxt2MWo83wz43wxxxhz
bIrnx9amJ/cX9/lBPCu2jL8ptwN7P8ai9tgGrJzaLmqny83BvsI2ycVivY7/
EpuZ9tNPk6pz+/niOadkJ/f+pesmKuTeKt0+X7vFea5dU/9CPo/a+vxNqhXf
BVherAF/i2rHNy2WD2vI5zZZy/RkHcR6+DWWC2sR5xVWAmsf56B5tmD54r2J
/4Ng+eP7gt8iVwl7Ir475TZjeYNjx2NNxv81PGcZ7Gv3Xoe/gdfg56vNLVcv
vvfiDI0zJr7dsX9iP1KdeDfk7sAa8Qvl9mL3xDcq9gZ2ISv5veJ3y6DRsX/J
7ZEpHN+3cn+V+0M8R5yT1BB75vZaiDUxNTtZN1dc86hvG+ekecvIddKfF2sX
ZzZWFuscv5nslfi/B5U2/+TYW7KSsU/KfSzfOd5duQ3pyfdG7PGjsGrYV+r6
ZCRnxgLsbFayJiZiX8r25zNiPO05xiustmX83tnJd2kx/KpsDT5drgE/S66Q
XIv45sPqYzOwglhzLCfWPPYM7F6sXZyr8U2ILYgzKb7lsWysGbYEKx77c6wr
7LJ2DXMuplt8DqonN03ubn3N5LKwptgirBjWBvs/X43R2Q==
          "]], 
         Polygon3DBox[{{1572, 899, 1000, 1947, 1431, 1432}, {1427, 1426, 1978,
           1303, 1304, 1979}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksvXVEYBuDlUrRa/ALSYVvUJUEUMRChbiEiqcuAjkgwdYlRI4cgEREV
E9GUkRhhIkZMMHO/thWJ+AH9AZ4dyVl53u9ba+9v73PO+57BloG4EMKs1RAf
QpRL+cAvr0LIYA2z2MZcfmc5B1nPMXZwmjNWn/ybw9zgBLf5k7tc4xG3eMV9
LieZa/g3s0/UXxlTf0gI4VT9kWes0Pskn8uV8gWz1ZfM4RXzotmur7LfwVz9
a/0RuVqvk5/1bqKzvGU+76I6MYRaZ/7IhXKd/FcusP+PRXoNel3uca+u56z6
v5nH6kfu8YKbPOAqd7jATca4ziH+4orVK0+ynaOsYz/L2M0ctjIzmum7emKj
2emsZbNnWGKaepHvuMC3nGcq5/gm+q35mofe6ZEpVon3anKPGXvJ6ikmRc9E
Y0OMjoRxuiz8oE8o1myMe/nvPAO6FkNR
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1339, 1608, 819, 1338, 1983, 1525, 1340, 1984, 1526, 1341, 
       1985, 1527, 1342, 1986, 1528, 1343, 1987, 1529, 1344, 2112, 1609, 1726,
        1898, 2111, 1703, 1610, 1727, 2146, 1530, 1345, 1988, 1531, 1346, 
       1989, 1532, 1347, 1990, 1533, 1348, 1991, 1534, 1349, 1992, 1535, 1350,
        2113, 1611, 1536, 1612}], 
      Line3DBox[{1352, 1899, 2057, 1351, 833, 1353, 1993, 1537, 1354, 1994, 
       1538, 1355, 1995, 1539, 1356, 1996, 1540, 1357, 2115, 1613, 1728, 1900,
        2114, 1704, 1614, 1729, 1901, 2116, 1358, 1997, 1541, 1359, 1998, 
       1542, 1360, 1999, 1543, 1361, 2000, 1544, 1362, 2001, 1545, 1363, 2002,
        1546, 1364}], 
      Line3DBox[{1366, 1902, 2058, 1365, 1903, 2059, 1367, 848, 1368, 2003, 
       1547, 1369, 2004, 1548, 1370, 2005, 1549, 1371, 2117, 1615, 1730, 1789,
        1790, 2154, 1705, 1802, 1616, 1731, 1904, 2118, 1706, 1617, 1905, 
       2119, 1372, 2006, 1550, 1373, 2007, 1551, 1374, 2008, 1552, 1375, 2009,
        1553, 1376, 2010, 1554, 1377}], 
      Line3DBox[{1379, 1906, 2060, 1378, 1907, 2061, 1380, 1908, 2062, 1381, 
       238, 341, 1085, 239, 1382, 2011, 1555, 1383, 2120, 240, 1086, 342, 241,
        1087, 343, 242, 2121, 1384, 1909, 2063, 1385, 2012, 1556, 1386, 2013, 
       1557, 1387, 2014, 1558, 1388, 2015, 1559, 1389}], 
      Line3DBox[{1391, 1910, 2064, 1390, 1911, 2065, 1392, 1912, 2066, 1393, 
       1618, 2067, 1619, 1394, 987, 1620, 1395, 2171, 1870, 1871, 1396, 2172, 
       1872, 1621, 1732, 1622, 1840, 2135, 1866, 1841, 1623, 1733, 1624, 2156,
        1968, 1397, 1625, 1626, 2122, 1398, 1913, 2068, 1399, 1914, 2069, 
       1400, 2016, 1560, 1401, 2017, 1561, 1402, 2018, 1562, 1403}], 
      Line3DBox[{1405, 1915, 2070, 1404, 1916, 2071, 1406, 1627, 2072, 1940, 
       1407, 1628, 1734, 1629, 1408, 1941, 2073, 1630, 1409, 1298, 1873, 1410,
        2173, 614, 1735, 546, 1282, 593, 547, 1736, 482, 2136, 1411, 1631, 
       2074, 1942, 1412, 1917, 2075, 1413, 1918, 2076, 1414, 1919, 2077, 1415,
        2019, 1563, 1416, 2020, 1564, 1417}], 
      Line3DBox[{1421, 2021, 1565, 1419, 2022, 1566, 1423, 1633, 2023, 1567, 
       1707, 1636, 1740, 1568, 1708, 1945, 2024, 1569, 1427, 1979, 2025, 1570,
        1875, 1946, 2026, 1741, 1791, 897, 1838, 1804, 1805, 1742, 2147, 1571,
        1709, 1639, 2027, 1572, 1432, 2028, 1573, 1434, 2029, 1574, 1436, 
       2030, 1575, 1438, 2031, 1576, 1440, 2033, 1578, 1442}], 
      Line3DBox[{1441, 1577, 2032, 1439, 2087, 1925, 1437, 2086, 1924, 1435, 
       2085, 1923, 1433, 2084, 1922, 1431, 1947, 2083, 1638, 1430, 1969, 2157,
        1803, 1739, 1845, 1844, 1429, 2168, 1842, 1843, 1738, 1876, 1306, 
       1428, 1874, 2082, 1978, 1426, 1637, 2081, 1944, 1425, 1635, 1737, 1634,
        1424, 1943, 2080, 1632, 1422, 2079, 1921, 1418, 2078, 1920, 1420}], 
      Line3DBox[{1444, 1926, 2088, 1443, 2034, 1579, 1445, 1640, 2035, 1580, 
       1710, 1806, 1807, 1743, 1581, 1711, 1948, 2036, 1744, 1582, 1446, 1949,
        2037, 1583, 1712, 2137, 1641, 1745, 1792, 1927, 2155, 1839, 1808, 
       1809, 1746, 909, 1713, 1642, 2038, 1584, 1447, 2039, 1585, 1448, 1977, 
       2040, 1846, 1586, 1449, 2041, 1587, 1450, 2042, 1588, 1451, 2043, 1589,
        1452}], 
      Line3DBox[{1454, 1928, 2089, 1453, 1929, 2090, 1455, 1643, 1747, 2148, 
       1590, 1714, 1810, 1644, 1748, 1591, 1715, 1950, 2044, 1749, 1592, 1456,
        2123, 1645, 1593, 1716, 2138, 1646, 1750, 1793, 1794, 2165, 1717, 
       1811, 1647, 1751, 1930, 2124, 1718, 1648, 920, 1457, 1877, 2045, 1594, 
       1878, 1951, 2046, 1752, 1795, 1796, 1719, 1952, 2047, 1753, 1595, 1458,
        2048, 1596, 1459, 2049, 1597, 1460}], 
      Line3DBox[{1462, 1931, 2091, 1461, 1932, 2092, 1463, 1649, 1754, 1933, 
       2125, 1720, 1812, 1650, 1756, 1598, 1721, 2139, 1651, 1758, 1599, 1859,
        2167, 1652, 1600, 1722, 1970, 2158, 1653, 1760, 1797, 1798, 2166, 
       1723, 1813, 1654, 1762, 1799, 2126, 1967, 1724, 1655, 1934, 2127, 1464,
        1879, 930, 1880, 1953, 2050, 1764, 1800, 1801, 1725, 2140, 1656, 1766,
        1601, 1465, 2051, 1602, 1466, 2052, 1603, 1467}], 
      Line3DBox[{1469, 1935, 2093, 1468, 1936, 2094, 1470, 1657, 1755, 1658, 
       2141, 1471, 1659, 1757, 1660, 1814, 1472, 2128, 1661, 1759, 1662, 1860,
        1473, 2129, 1663, 1664, 1474, 1971, 2130, 1665, 1761, 1666, 1847, 
       2142, 1867, 1848, 1667, 1763, 1668, 2159, 1972, 1475, 1669, 1670, 2131,
        1476, 1881, 1882, 2174, 1477, 1883, 1035, 1765, 1671, 1478, 2132, 
       1672, 1767, 1673, 1479, 2053, 1604, 1480, 2054, 1605, 1481}], 
      Line3DBox[{1483, 1937, 2095, 1482, 1938, 2096, 1484, 1674, 1768, 2097, 
       1954, 1485, 1675, 1769, 1676, 1815, 1486, 1955, 2149, 1770, 1677, 1861,
        1487, 2133, 1678, 1679, 1488, 2160, 1816, 1680, 1771, 1681, 1849, 
       2143, 1868, 1850, 1682, 1772, 1683, 1817, 2144, 1489, 1684, 1685, 2134,
        1490, 1884, 2098, 1980, 1491, 1885, 1956, 2175, 1773, 1686, 1492, 
       1047, 1774, 1687, 1493, 2178, 1894, 1895, 1494, 2055, 1606, 1495}], 
      Line3DBox[{1497, 1939, 2099, 1496, 1688, 2100, 1957, 1498, 1689, 1775, 
       2101, 1819, 1818, 1499, 1690, 1776, 1821, 1820, 1500, 1958, 2150, 1777,
        1863, 1862, 1501, 1959, 2102, 1691, 1502, 2161, 1822, 1823, 1778, 
       1852, 1851, 2169, 1503, 1853, 1854, 1779, 1825, 1824, 2145, 1504, 1692,
        2103, 1960, 1505, 1886, 2104, 1981, 1506, 1887, 1888, 2176, 1780, 
       1693, 1507, 1826, 1827, 2162, 1781, 1893, 1892, 1508, 1336, 1897, 1896,
        1869, 1509, 2056, 1607, 1510}], 
      Line3DBox[{1524, 1702, 1076, 1523, 1701, 2110, 1966, 1522, 1700, 1788, 
       1976, 2153, 1837, 1521, 1835, 1836, 1787, 2177, 1891, 1890, 1520, 1982,
        2109, 1889, 1519, 1965, 2108, 1699, 1518, 1975, 2164, 1834, 1786, 
       1858, 1857, 1517, 2170, 1855, 1856, 1785, 1833, 2152, 1974, 1516, 1698,
        2107, 1964, 1515, 1864, 1865, 1784, 2151, 1963, 1514, 1831, 1832, 
       1783, 1830, 1829, 1513, 1828, 2163, 1973, 1782, 1697, 1512, 1962, 2106,
        1696, 1511, 1961, 2105, 1694, 1695}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{643, 820, 1983, 644, 833, 669, 2059, 847, 683, 2061, 861, 
       697, 2065, 873, 711, 2071, 884, 724, 2079, 895, 2022, 737, 906, 2034, 
       750, 2090, 916, 761, 2092, 925, 771, 2094, 934, 781, 2096, 943, 791, 
       2100, 1049, 1128, 951, 800, 2106, 1061, 1135, 959, 810}], 
      Line3DBox[{645, 821, 1984, 646, 834, 1993, 670, 848, 684, 2062, 862, 
       698, 2066, 874, 712, 2072, 991, 1091, 885, 725, 2080, 996, 1095, 896, 
       2023, 738, 1001, 1099, 907, 2035, 751, 1008, 1104, 917, 2148, 762, 
       1019, 1110, 2125, 926, 772, 1029, 2141, 1116, 935, 782, 2097, 1039, 
       1122, 944, 792, 1221, 2101, 1050, 1129, 952, 801, 2163, 1229, 1062, 
       1136, 960, 811}], 
      Line3DBox[{647, 822, 1985, 648, 835, 1994, 671, 849, 2003, 685, 238, 
       699, 2067, 243, 409, 1734, 249, 412, 1737, 255, 1740, 415, 261, 1743, 
       418, 268, 1748, 423, 277, 1756, 430, 1757, 286, 437, 1769, 295, 444, 
       1776, 305, 451, 1783, 317, 320}], 
      Line3DBox[{649, 823, 1986, 650, 836, 1995, 672, 850, 2004, 686, 982, 
       1085, 983, 700, 987, 1088, 988, 713, 2073, 992, 1092, 993, 726, 2081, 
       997, 1096, 998, 2024, 739, 1002, 1100, 1003, 2036, 1150, 1009, 1105, 
       1010, 2044, 1152, 1020, 1111, 2139, 1021, 1156, 1030, 2128, 1117, 1031,
        1160, 2149, 1040, 1123, 1041, 1164, 2150, 1051, 1130, 1052, 1168, 
       2151, 1063, 1137, 1064, 812}], 
      Line3DBox[{651, 824, 1987, 652, 837, 1996, 673, 851, 2005, 687, 863, 
       2011, 701, 1293, 2171, 1294, 714, 1298, 1299, 727, 2082, 1303, 1304, 
       2025, 740, 1004, 1005, 2037, 752, 1011, 2123, 1012, 763, 1022, 1272, 
       2167, 1023, 773, 1032, 2129, 1273, 1033, 783, 1042, 2133, 1274, 1043, 
       793, 2102, 1053, 1275, 1054, 802, 2107, 1065, 1276, 1066, 813}], 
      Line3DBox[CompressedData["
1:eJwVzz8vQ2EcBeAfKrohQUIn38BHkIjEYrkTBoMYJJK2LOifiMFg6OBzkJBU
JUWiDFUDjXRh6GKRGLoZiafDk/Oe8953uLMbuSQ7EBEJlcGI5lDEfDqiJfdS
ES9yQW/Lff1NLuodeaC/yyX9Qxb0seGIkj4uR+nai/ZJ57J9Sk7waS/ZZ5wz
TPNl+x7xnf2Mc5ZZ9a7n7tD5gksS1uw/9iPnKleskLVfyxrH1Lnpv7Gvyztu
OeGevL0hN3nkgQpNdtw9yW2eaXHKlv1Vttnlj1/m/Mc/bUww8w==
       "]], 
      Line3DBox[{656, 827, 1988, 657, 840, 1997, 676, 981, 2119, 854, 690, 
       986, 2121, 866, 704, 990, 2122, 877, 717, 2074, 995, 888, 730, 2083, 
       1000, 899, 2027, 743, 1007, 910, 2038, 755, 1014, 920, 766, 1024, 2127,
        929, 776, 1034, 2131, 938, 786, 1044, 2134, 947, 796, 2103, 1055, 955,
        805, 2108, 1067, 963, 816}], 
      Line3DBox[{658, 828, 1989, 659, 841, 1998, 677, 855, 2006, 691, 2063, 
       867, 705, 2068, 878, 718, 2075, 889, 731, 2084, 900, 2028, 744, 911, 
       2039, 756, 1308, 1309, 921, 2045, 767, 1312, 1313, 930, 777, 1316, 
       2174, 1317, 939, 787, 2098, 1320, 1321, 948, 797, 2104, 1324, 1325, 
       956, 806, 2109, 1329, 1330, 964, 817}], 
      Line3DBox[{660, 829, 1990, 661, 842, 1999, 678, 856, 2007, 692, 868, 
       2012, 706, 2069, 879, 719, 2076, 890, 732, 2085, 901, 2029, 745, 1255, 
       1256, 2040, 1257, 1311, 1015, 1310, 1016, 2046, 1154, 1315, 1025, 1314,
        1026, 2050, 1158, 1319, 1035, 1318, 1036, 1162, 1323, 2175, 1045, 
       1322, 1046, 1166, 1327, 2176, 1056, 1326, 1057, 1170, 1332, 2177, 1068,
        1331, 1069, 1072}], 
      Line3DBox[{662, 830, 1991, 663, 843, 2000, 679, 857, 2008, 693, 869, 
       2013, 707, 880, 2016, 720, 2077, 891, 733, 2086, 902, 2030, 746, 912, 
       2041, 757, 1017, 1109, 1018, 2047, 1155, 1027, 1115, 2140, 1028, 1159, 
       1037, 2132, 1121, 1038, 1163, 1047, 1127, 1048, 1167, 1228, 2162, 1058,
        1134, 1059, 1171, 2153, 1234, 1070, 1141, 1071, 1075}], 
      Line3DBox[{664, 831, 1992, 665, 844, 2001, 680, 858, 2009, 694, 870, 
       2014, 708, 881, 2017, 721, 892, 2019, 734, 2087, 903, 2031, 747, 913, 
       2042, 758, 922, 2048, 768, 931, 2051, 778, 940, 2053, 788, 1333, 2178, 
       1334, 1335, 1336, 1337, 1292, 1291, 807, 2110, 1073, 1142, 1074, 818}],
       Line3DBox[{666, 971, 2113, 972, 667, 845, 2002, 681, 859, 2010, 695, 
       871, 2015, 709, 882, 2018, 722, 893, 2020, 735, 904, 2032, 2033, 748, 
       914, 2043, 759, 923, 2049, 769, 932, 2052, 779, 941, 2054, 789, 949, 
       2055, 798, 957, 2056, 808, 1076, 1077, 1078}], 
      Line3DBox[{809, 958, 1060, 2105, 799, 950, 2099, 790, 942, 2095, 780, 
       933, 2093, 770, 924, 2091, 760, 915, 2089, 749, 905, 2088, 736, 2021, 
       894, 2078, 723, 883, 2070, 710, 872, 2064, 696, 860, 2060, 682, 846, 
       2058, 668, 832, 2057, 642, 819, 965, 1079}], Line3DBox[CompressedData["

1:eJwVzTsoxWEcxvH3nOO4TWab7GaHIoqyGFCyIGVBFDlhs8vEcUtiMjJalMmg
DO73+zG43yfF5wzfnuf/e75v/6KOvobeSAihHyWxEDbwlxXCDwbwjfx4CCO5
IXzpxfY1nOmL6MEn8jjDnA+90L6KU30BnXhHmz2X96YX2Jdxos9nNryilZPD
edGz7Qs41pPuc7IFz5mN8yR/oyGkOEf6IGdWNuIRcc5D5t+cMU63/dD3DOpx
jyxOWqY5o5wDfRp1uEPMPuTdrX7ESXL29SnU4AZRzrXcsnfb9/QUqnCFZu8j
nEt9ndPO2dUnUYELBPu5XLE32bu8mfBdjh3fS+61stq9zG1bH3dLyEq3hNum
Xir/AeAiQ64=
       "]], Line3DBox[CompressedData["
1:eJwVzj1LwmEYhfE7C3Jtbgra2yMQQgoiDMIgmlLBSXMJ2tujsUVEsjeDglwK
wYJqyRoMWvoCfYCWpsDfM1ycc67n+b/MlRubexMRUcTCZMQz/qYi9vGJUerZ
iHm+j1O7jneU+KGc5Xto61W8YtfZi5zhu2glhwb/KAeYTs+gqRf4HfmAe/xn
Ik6crfNFu4c7/PJH/IZ+ixv8cBX3Dvk1+xrd9J/ct7MDfsW+wjZ3KT/4Gr+s
17gLeY4nvsTn9DN00ne5rfQO95bsL73Drco8N5LHdllf1N8wxBiMJDEu
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Jf6OUTmvi2Q+PUAmvjOjhZ0qIHcyOj+CmK9E0BqHz1GP4dt8lf9IixYEfFC+
c5GQr9YKbErLSwDDinevzhQ/BAEps4x3RH63N0Xi84j4R+h/JKokr/ca9FVd
I2LtqXHQ/Ds/LSbz02ddLOJJNzqRxpq47rHWLmhnOZI139qLmEzihNTc+tD7
iv3jP40awGLhnkTb0170c/qV1Py6HvRoZOrss8QyiNu9+Sh/NIHLX82su8TU
hA5VO5lRHmaB7YpfZRekxtASg8bdLnofEW1Az6b1Z8LhELud6xpbAmdeNAvx
/BCDtLoeabyvcwTDtUl05sTfUefE0F4hmoeo8N05Oj0zNWDmd16O83p/jjd2
pQzuoPol6VWU2BXoTXV8uIGQH5h+9b187i1M/ArfvWeJK3B82GjGOUJB2ne2
QXJdCbglLG+a2hQJX199b35+msjjaGSoeejaRXnofKy3peuzLnRj/ntNVFY3
6A6GWjRx9KA32u4h8uP9SOdHyRMny0bI/9YbuoPIQ/XVdBMUGnpReZVUcH9p
Oeynm6rLZh5A23xpxRKWl6I+i9MuR82ioMihbH2pIrEe1p4a+X4+EU2PHT/N
t+ERLJW7PMxL/L0CBBhCFb88Rjeq9sWP/NaCUpk+d2XMB6i+a72NrSfc4bKj
kbW/CpEKFiXFRP6SsnsV89hICuR1j9y+cdQN9O8Xj+cR+d0Hprq2oJYvQH8x
yeF5/hsIPx26bws7ni8NNd/csyjfzGEMjPkU2Y1mjlcNliv0gOfdX2z0pl0o
57WUe+bWQbQe8t7d+94IHBxta6G9ExWu8n1MxzSAdEaEmMWJfWxf6hF57qJe
pDYTIKpw6h0KvVif2nDJFRZW8pheIvJrSU5754jd7qhuIVwq6vgVaK4SmlmH
+UM0X5uyIh+YG1L3yyjUBwPtl5MaxLwen2Cm7d2XDooWbuoD0h5gJev15EQz
Bd2M8dvgx1MFKed3aU4eI/bNBLFpwxJ8L5Pr/q+8cmDry1S9fiKv9FRKNbLr
AaHUA1LBjh2oe5vSPM2BIdS2/8SWyyuawKJTrvu7djt6z8lWYmk+iHqP5JU4
8ldCj/gk6xe6HnTVI18sTT4V8VwNtGzycyO+5x0Thd0UFMjn3OPp7Yl4hOwZ
ZZ5dBQn1d2aFhP+3rIIH+E4+h1PTMYh5+TX4tMN4RwO+N6GhLf/x5QMk+Ib8
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
/8LFsf/dR3uK7KMdlPjMYKN1ORisUeC56BsHt3ptmu2ZCX+saPeXXu6E8+y+
qRLWheDDPjpiwjSC/Ju2cMQP9sLdX2H72gNr4AT3bQbGLf1InOyvvZzsr72S
7K+t8WnONZGzCzgGdF7FrOgEsexjedsK+lCGnEAkatOVjvvyi2FkdR9YSRsr
PF87iA5M7wgg9FFIMksg1mf1W5GJ9Te0rmEjxkVbFerE8bjM3DuZ8bj/9d2u
IPtul5B9txkb0mgS1DpR3lSHtvTNQqhQaeNeSvi/uB/3d7Ifd5PjUzZR23JU
4rGyQ8InDq6cDs/ZRcRhcZ9uU7JP90slB1MizihNIeMJjnOZeCA1zov7d+eT
/bv1b8ftJf7uyC5FnPp33+dYRf27717U19uT7Ou9MZA/b1/mJXSN98/ffWn8
n7/7ONnv+8qift9Pv3/NEfX1AOfNcT9NxK6CjNOyF/0LFMQadPGO/Iw2bK2Q
f1Wdvhe4NBaMcN9qn+9DunGq7yHkmObDERUP2LFz9XhCBwW9Dzn6ceTeAPTS
jamCbR3Y6bOaFHd2Iz73p/mEHMmsOa2B5WpeN82x3PVHfc/0ix7Uz/7YOHag
GDyVujwfeg4iDvO953bE1aD55tcjW3++hfd7M9byao6jwbeJQsS46F4i1yM8
7oqSLOq4Ka53HxH+o9DEJKr/Ccmrqf7vFl0nTviPfnX/8b/I4Y//b/eff5Tz
wwu0bPxbGCz1of9CGoMHod8+5/dl13VdqC4b5RtKEoEP8cwMuG9RkUzFFxXX
DDCueMRBx+cFpueEzevrKOjIzkG1U0GDwBC6T7m9qQ6kPeg5MhW70G13B1VC
jnq2+VzCcpMrtzdiuXkHiwthBx1ZvmQ9tsPGy2KB7QiZNxwj/EHIIq8J+9PQ
l0v1p00h6D7hD1Ib+uNPXcsff2Z+lgjRB/tCwpEYHft3hrBu5t5xfkL/7D79
fC1ufTjldOLA7zdiYLjFWHqW0O96GxMmsjwbqj1EzxsPewPD+vs5LgT+j9rb
rJDoPYRu1z1uXT1ZB9/mNfiz/DpQlE3SeUIfMfoNU/V1Y0IB62u77mqjC/ZF
W1mKtPG4ivpPqeMKn2y7QYyLVsf/GXe/7p9xB/of1c/c9YcVHO9LKyeuQw64
OL2Yp6D9yr+3trJeAxSg+4k9VBz2eQ6yTGP+nBNHApRNcmHfZmPze4m+cOFs
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
R5I63/8LVtGxPg==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["freq", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["amp", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 293.0962635677495},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3000000000000003`, -2.3999999999999995`, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6355988977922907`*^9, 3.6355989058500843`*^9}, 
   3.635600909626976*^9, 3.6356009684391108`*^9, 3.635601305617262*^9, {
   3.6356013827556133`*^9, 3.635601415030798*^9}, 3.635601954330608*^9}]
}, Open  ]],

Cell["\<\
Set the input pulse to a sum of two cosines at a low frequency (1) and high \
frequency (5). Notice that the output pulse has the low frequency suppressed, \
as expected.\
\>", "Text",
 CellChangeTimes->{{3.63560200243412*^9, 3.6356020391770277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"NonlinearTransferDistortion", "[", "gainFcn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputPulse", "=", 
   RowBox[{"AddTimeSteps", "[", 
    RowBox[{"0.05", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Pi]", " ", "t"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Pi]", " ", "5", "t"}], "]"}]}], ",", "0"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0.05", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputPulse", "=", 
   RowBox[{"d", "[", 
    RowBox[{"inputPulse", ",", "False"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inputPulse", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"outputPulse", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<input pulse\>\"", ",", "\"\<output pulse\>\""}], "}"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635599106875173*^9, 3.6355991366976643`*^9}, {
   3.635599186683652*^9, 3.635599339008368*^9}, 3.635599394116094*^9, {
   3.6355994428384953`*^9, 3.6355995514562273`*^9}, {3.635600923678627*^9, 
   3.635600926235656*^9}, {3.635601969365776*^9, 3.635601975444557*^9}, {
   3.635602041116467*^9, 3.6356020641656837`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.011111111111111112`], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      LineBox[CompressedData["
1:eJxdlltoXFUYhYdaq2ixARNNpegkTUR0LLEXTWOnWWnSprnP/T6ZMzNnZk5B
GJGKSjQcRdAUwdYHpX2QPIi+6EOhN6zBkyLaqvVSEaQxdGwplJDEKopSqlg9
/5a9JhCGPT9r/2t959/7TEuhGiqt8Hg8p2/8//vp/l3t9kT77ryjutwtX8B4
ePpAy1OnP3aXt6KYenrl+q8vSr0BkWtfnD35y2+ybsTt+94e3vrch9vcdbOq
i34dgq5e1l6Y7v6ib8W1yH/9pd4G8eG4H/ejKarXH4BF+gfxEu3vq+u/Ac82
T61qav9R/HUgTP4fQYbybUSE8m/C5YjOZ7PyJ59bcJ3qj+JJ0j+GF2j/TgSp
/1ZUu25ZvWb+phl33YUQ+X8cE5RvW11+P3qJz/Y6ft1ooTqQ0PU2kKP9ezCq
97d78FXQ/8zEltv8bn2H8if6HUovfnrxhJ7f7sU88eljfnYfRmj+dip/ot+J
Ltp/F8ap/y68dcxcdPbPyfPtxyD570cf5dut/Il+N07Q/A0wP3sAG4nfoJoP
0Q+q8yH1IcSp/xA6/6i0nzw0+5FbH+bnbw/jKOUb4fmxR/At8Rut4zeKZuI3
hgDpx+rmL6D8uWsE0Gh5+7tnV7jP1w4goPt3AjhE+YLYq+dHEIs6PzvI/Jwg
/ia+IeVP9CGs1fe3Q0hQ/xCOBhbmzlkr5XyElT/RhzGp57PDyp/ow1hFfCLM
DxGYet2+USd9ROUXfVT5k/5RxC5/c+pgzxV3/uwoxsh/FGeIXww+yh+DV58v
O1bHL4YBmr84rvt0fRzHkjq/OJLUP44fXvmz6cqFZZm/hPIn+gQ+S+r8Euig
/Al0Eb9kHb8kOohfEvtJn8RxfX9PSvmT/im88/2FN8+8uOD6s1PoJv8pfKrn
86TxPPFLI0rzl67jl657f2TQR/oMlohfBkPUP4P1m070Tly6JPdLVt2Pos/i
APHLYjPlz8Kk8ztex28cv+p1exyvkX4cy8QvhxT1z2FxaSmfit8l5zeH7eQ/
h9eJn4GX9fxeA1M6PxjMzzDwE/E1AF0/baBNn2/HwLDev2bAfzHka3vobjm/
eYzo/r15pPXzhTw69fxGHgeJT575Tecxo8+fk8erur6WRzud3wIy1L+Aez6o
Ls39tcblhwL8un+jgCTdTwW1v+QvYEbn4xSYX62A92n+iiqf9C+q/MK/qPhI
/yLmP183e/xcg8vPLiq+0r+ItrSWzymq5yP5izhL82cyP6+JKZ0fTDRv0Pmb
yNB8m2q+pL+J7zC5dzJ5r+vPMdV8Sn8TMbr/Smq+JX8JN8f1+SsxP6Ok7mfh
X8KXxL+kzp/wL/Hvl1oJPe+ujp4/1Sq/X8rYQ8+/jBaav7K6HyR/GU1xff7K
zG+6jCjNXxmNOr9aGW/Q+a2o+036V7DWd776e6LV5YcK399GBffR/FXU/Sr5
K+jS+TkV5lerqPtZ+Fv4hPhbyGf1+bP4/WVYuHr4vX0NP7fL/WLBoudvYUHP
51g44tPzW+r9Jfn3/M/vH32DmVE=
       "]], 
      Hue[0.9060679774997897, 0.6, 0.6], 
      Directive[
       PointSize[0.011111111111111112`], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      LineBox[CompressedData["
1:eJxdlmtMHFUUx7cUClIe28Y2akWXlioYbJDa0hYqf16FUij7ZnnPzM7OrkFD
Ix/8YJqMr8RGGixGmphoNr6N8UMbQRsLnTYxVlvpQ6HWD2QTUy1gCkaLtaSg
du7Uc2YTsrmcnPM/53f/997NVXq8kSSHw3H637//vs3PXHnpVPayg9295eIf
WP7apkMjX82eMJdpKKgb/rJwWUzEnUg541W0P2bF+m64RgIty6+OHjfX9yDV
jIv8++EqvZ0v1i6kmPVF/npcXLitL+J5UBeKys6lzon1Q/DdpPF8pLP8R/BZ
Da1faNPfhIZJefbFXy+UmesiW/+PYXgHna/Y6k/kb8bTC5TP4wib/Yn1Fnj+
ovGtSGP5Jbjop/W32fS34/yU1n9kxTXBb4cVF/mluLGBzldm47cTwWQn4fOE
1Z9Yl2PgT8oPSKL5OnDWS+tXIInq6xUY2NqWm1M4LfhVIpn2r1di2xY6XxWf
X69CxxzlU23tr8ivxuvZThKvwUqWX4PFe2n9XUhn+rsw/+nih0WHfxH91XJ+
ei3cbL46y98ivw5v/kb57Ob89N04tZLyrbfmE/n1uJBL6+/h/tP3YOajt5Rg
8qzY3wYrLvIbUBeh8zVy/+mNePYq5beX+0/fi767KL8mG/8mBDbQ+m6uDzdW
X77+/bsv/27y0928f8ONbJXO5+Hzw4O+acJP9/Dza3hwMpPy83L/wouCLFJf
99r0vagdHpk/8ODfgp+Pnx/4UK2R+XQf52f4cHKG8vNDpvzgR3oa4af7rfMh
8v3oL6D8AnAw/QCeOVvYs3RmSvC7Exf5AcgK5RfEUj+dP4ienym/ILoYvyB+
WEf5NcPB+DXjYwfl12zTb8bgw+rlS+sSgl/I1n8IgVzKL2SbP4S3U6i/Wrj/
0ILJFZRfi3U/i/wWjK+l/Fr5/YFW9KrFTeezJgW/Vix9S/tvRXcV5ddm49eG
7TOUXxskxq8NjWsov3ZbfjvW5lB+7bjF9NvxwAfHNj53ZUzcLx1WXOR3oJf6
Q++w9kfkd+D569R/nVAYv06UraH8Om38OvHjzSHCr8vGrwvZXkdfyci84Ndl
2/8uPFpP+Ul8fpeE9+cJP0jW+TDXkoSNGYSfLnH/xSV8sTj0f31D4vwSEk5N
Dxy/T0seMfVlzs8lQ3mD8INs9Sf0ZYS+Ifx0mfsvLkPeTPgZMueXkDE2Qfkp
nJ9LwdHRzMFr7uSdpr7C/ScpSHmB+kPh/OIK9HHCz1C4/xIKavOp/8I2/mFc
+onwQ5jzk8Lo7s07kVOSYfLTw5xfPAzHMcLPCPPfb4kw0kap/1T+/rpUvFNM
+EHl76+kYjCV+lvl729cxb6XnPvPdd8w7xfjTlzoq8geIvM5IlZ9oR/BoUrC
BxHEmP8iyJ+g5zuCVcx/Eax/iuyPEcFqph/B0Su+8P5b6eb+OjQrLvQ1NL1K
/AENTja/hgNuej41qz+hr8EzRvgaGrIYfw1GL73/ovz9dUXxXui7rydWZZr7
iyh//6Qo0roJPz3K+cWjyHiF8DOiiDL/ReH30d83MWs+oR9D05HPif9iyGL6
MYwfDp0+WJFn8tNjtv2PoWwf4WfE+PuRiOGTQvp+PGm9b+X/AFzfumA=
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 200.}, {-2., 2.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0., 200.}, {-2., 2.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"input pulse\"", "\"output pulse\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.635601975779647*^9, 3.635602064707962*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DEDistortion", "Subsection",
 CellChangeTimes->{{3.6355105600507097`*^9, 3.635510561889806*^9}}],

Cell[TextData[{
 StyleBox["DEDistortion[", "Input"],
 StyleBox["deFn", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["outputForm", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["solnSymbol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["min", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["max", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a distortion function that distorts pulses by discretizing the \
solution to a set of differential equations which depend on the input pulse. \
\n\n",
 StyleBox["Arguments",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet]",
 StyleBox[" deFn", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a function ",
 StyleBox["deFn", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[pulse]", "Input",
  FontWeight->"Bold"],
 " that returns a set differential equations in a format suitable for ",
 StyleBox["NDSolve\n", "Input"],
 "\[Bullet]  ",
 StyleBox["outputForm", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is an expression containing symbols from solnSymbol specifying how the DE \
solution is related to the output pulse channels\n\[Bullet]",
 StyleBox[" solnSymbol", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a symbol or list of symbols representing the DE variables to solve for\n\
\[Bullet]",
 StyleBox[" t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a symbol representing the independent DE variable\n\[Bullet]",
 StyleBox[" min", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and ",
 StyleBox["max", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " are the starting and stopping values of t to simulate for\n\[Bullet]",
 StyleBox[" \[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is the time interval at which to discretize the solution\n\[Bullet]",
 StyleBox[" M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is the number of output pulse time steps\n\n",
 StyleBox["Notes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet]",
 StyleBox[" ", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "The output of the DE solver is an interpolating function. This function is \
sampled from ",
 StyleBox["\[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*", "Input"],
 StyleBox["\[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " in steps of ",
 StyleBox["\[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ".\n\[Bullet]",
 StyleBox[" ", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "If ",
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["*", "Input"],
 StyleBox["\[Delta]t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[">", "Input"],
 StyleBox["max", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", you will receive warnings about exceeding the range of the inerpolated \
output of the DE solver.\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nAll options to ",
 StyleBox["NDSolve", "Input"],
 " are valid and will be relayed to NDSolve. Additionally:\n\[Bullet]",
 StyleBox[" ", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["DESolver", "Input"],
 ", ",
 StyleBox["DESolverArgs", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.63551056927591*^9, 3.635510697283154*^9}, {
   3.635510789196241*^9, 3.635510900337906*^9}, {3.6355112874250183`*^9, 
   3.63551145601562*^9}, {3.6355120725702*^9, 3.635512240033944*^9}, 
   3.635512313714209*^9, {3.635512397734919*^9, 3.6355125011105633`*^9}, {
   3.635512553407587*^9, 3.6355126297407837`*^9}, {3.635512782382333*^9, 
   3.635512782549241*^9}, {3.635512881621739*^9, 3.6355128819651814`*^9}, {
   3.635513144485175*^9, 3.635513148188222*^9}},
 CellTags->"DEDistortion::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.635512815131969*^9, 3.635512815819769*^9}}],

Cell[TextData[{
 StyleBox["DESolver", "Input"],
 " is an option for ",
 StyleBox["DEDistortion", "Input"],
 " that changes the solver function from ",
 StyleBox["NDSolve", "Input"],
 ". Normally, this will be used to call ",
 StyleBox["ParametricNDSolve", "Input"],
 " instead of the default ",
 StyleBox["NDSolve", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635512908757943*^9, 3.6355129355881577`*^9}},
 CellTags->"DESolver::usage"],

Cell[TextData[{
 StyleBox["DESolverArgs", "Input"],
 " is an option for ",
 StyleBox["DEDistortion", "Input"],
 " that is a list of arguments to be given to the ",
 StyleBox["DESolver", "Input"],
 " used by ",
 StyleBox["DEDistortion", "Input"],
 ". This option is only necessary if the ",
 StyleBox["DESolver", "Input"],
 " used has options other than those of ",
 StyleBox["NDSolve", "Input"],
 " (which are accepted as normal options to ",
 StyleBox["DEDistortion", "Input"],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6355129497760773`*^9, 3.635513048761857*^9}},
 CellTags->"DESolverArgs::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635602081449011*^9, 3.635602082160956*^9}}],

Cell["\<\
A simple contrived example where the initial values depend on the input \
pulse, which only has one time step.\
\>", "Text",
 CellChangeTimes->{{3.6357734467181587`*^9, 3.635773450703834*^9}, {
  3.635773526788755*^9, 3.635773550831991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deFn", "[", "pulse_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "10"}], 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{"y", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "10"}], 
        RowBox[{"y", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"pulse", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"pulse", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.635603235065881*^9, 3.63560326201156*^9}, {
  3.63560477798484*^9, 3.6356048311074247`*^9}, {3.635773133228456*^9, 
  3.635773133766221*^9}, {3.63577317426667*^9, 3.6357733796218157`*^9}, {
  3.635773498810618*^9, 3.635773518169348*^9}}],

Cell["\<\
We want the output to be the solution to x and the solution to y.\
\>", "Text",
 CellChangeTimes->{{3.635773560069644*^9, 3.635773574645339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"DEDistortion", "[", 
   RowBox[{"deFn", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "t", ",", "0", ",", "2", ",", "0.1",
     ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.635603147657769*^9, 3.6356032337468767`*^9}, {
  3.635604826230831*^9, 3.635604874577791*^9}, {3.635604998265481*^9, 
  3.635605000632244*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"DEDistortion", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{
  3.635604874850224*^9, 3.6356049130976*^9, 3.635604947552082*^9, {
   3.63560500136511*^9, 3.635605014532193*^9}, 3.635773068263507*^9, 
   3.635773142252668*^9, {3.6357731763543243`*^9, 3.635773187417673*^9}, 
   3.635773225373859*^9, {3.6357732558360853`*^9, 3.6357733813919697`*^9}, {
   3.635773503559463*^9, 3.635773519520322*^9}}]
}, Open  ]],

Cell["Example of an input pulse being distorted.", "Text",
 CellChangeTimes->{{3.635773583478372*^9, 3.635773598726445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}], ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.635773086030303*^9, 3.635773122338511*^9}, {
  3.63577341466358*^9, 3.635773423593265*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 2.}, {0., 2.}, {1., 0.}, {0., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{2, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotLabel -> 
       FormBox["\"x\"", TraditionalForm], 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.18, 3.18}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQP8Fd5TrJb9s581EwR22qPzOX12qMRv/QXln8Tg
z5+x8/nLhi/2JsYgcBmDn2b0gGmV1Euo+psY/Ij80KjJ+mfsIa55gME36NKf
vtvp+n6wccaPMfj7ijua1wW+3Z8GBs8w+CcdM5Z8s/m2H2zdzJcY/BdvDD1O
PPi9/wwYvMHg97AutLkg8H//fzB4j8F/zf7gw8m6/1DzPmLwq3MNl52X/At1
72cM/q2WlLRgwR/7z4Lt+4LBP1zm5JN76cP+dLB/vmHwDUVXmzL9u7+fERxe
PzD4Sb3WPyWu7LSfDXbPTwy+6P1nQg/dntmbgt3zG4Pfvonz65INn+3Pg93z
B4O/q2XzjfbSX/aZYPf8w+Dv8fySfPjkP3uIexgc0PmwdAgAW2VLvg==
           
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.0252965932538567`, 
         3.0252965932538567`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotLabel -> 
       FormBox["\"x\"", TraditionalForm], 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.0252965932538567`, 
         3.0252965932538567`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 3.}, {0., 3.}, {1., 0.}, {0., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{2, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotLabel -> 
       FormBox["\"y\"", TraditionalForm], 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.18, 3.18}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQMx3yd/lLzK5jBrJgjstEfnF5Q1J8V2MEP5JzH4
0VdqQnQl/9qbGIPAZQz+1bJHK29//mAPUX8Tg6+2nq3i8cnz9hDXPMDgf59y
8vL9bw/2g40zfozBj1mQNMHd4PP+NDB4hsGXmXni6lft3/vB1s18icE/5Hl0
0aEz//efAYM3GHyWR3/kVmQxHPgPBu8x+Gv/+hkw5P2DmvcRg/9R9laVpfRP
qHs/Y/BnLrr58P/Kj/vPgu37gsEvlEtsWK71aH862D/fMPhZuqeuHnk8cz8j
OLx+YPBnu55K2DDprv1ssHt+YvDfr9qif4nhtb0p2D2/MfjihrvXysZ9tD8P
ds8fDP68groZt/Z9ss8Eu+cfBr9o7e91i7d+tIe4h8EBnQ9LhwDt4VLq
           
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.0252965932538567`, 
         3.0252965932538567`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotLabel -> 
       FormBox["\"y\"", TraditionalForm], 
       PlotRange -> {{0, 2.0000000000000004`}, {-3.0252965932538567`, 
         3.0252965932538567`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6357731127219257`*^9, 3.63577314572514*^9}, 
   3.635773191193739*^9, {3.6357732294349537`*^9, 3.635773383038789*^9}, 
   3.6357734242568703`*^9, {3.6357735047209597`*^9, 3.6357735203412657`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FrequencySpaceDistortion", "Subsection",
 CellChangeTimes->{{3.635513103130096*^9, 3.6355131080897427`*^9}}],

Cell[TextData[{
 StyleBox["FrequencySpaceDistortion[", "Input"],
 StyleBox["freqs", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a distortion function whose domain are frequency amplitudes of the \
specified frequencies. ",
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is the number of points in the output pulse, each step with length ",
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ".\n\nThe input pulse should have the same length as ",
 StyleBox["freqs", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", ",
 StyleBox["N", "Input"],
 ", with format ",
 StyleBox["{{x1,a1,b1},{x2,a2,b2},...,{xN,aN,bN}}", "Input"],
 ". The values of ",
 StyleBox["x", "Input"],
 " don\[CloseCurlyQuote]t matter, and the output channel amplitudes are  \
calculated as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["channel", "1"], "=", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       SubscriptBox["a", "n"], 
       SubscriptBox[
        OverscriptBox["c", "\[RightVector]"], "n"]}]}], "+", 
     RowBox[{
      SubscriptBox["b", "n"], 
      SubscriptBox[
       OverscriptBox["s", "\[RightVector]"], "n"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["channel", "2"], "=", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{
       SubscriptBox["b", "n"], 
       SubscriptBox[
        OverscriptBox["c", "\[RightVector]"], "n"]}]}], "-", 
     RowBox[{
      SubscriptBox["a", "n"], 
      SubscriptBox[
       OverscriptBox["s", "\[RightVector]"], "n"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SubscriptBox[
       OverscriptBox["c", "\[RightVector]"], "n"], ")"}], "m"], "=", 
    RowBox[{"cos", "(", 
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{"dt", "(", 
       RowBox[{"m", "-", "1"}], ")"}], 
      SubscriptBox["f", "n"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SubscriptBox[
       OverscriptBox["s", "\[RightVector]"], "n"], ")"}], "m"], "=", 
    RowBox[{"sin", "(", 
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{"dt", "(", 
       RowBox[{"m", "-", "1"}], ")"}], 
      SubscriptBox["f", "n"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "m", "\[LessEqual]", "M"}], TraditionalForm]],
  
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " element of ",
 StyleBox["freqs", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635513175251381*^9, 3.63551321900181*^9}, 
   3.635513650271751*^9, {3.6357749633899918`*^9, 3.635774980034553*^9}, {
   3.635775058517964*^9, 3.635775171784047*^9}, {3.635775233925189*^9, 
   3.635775553681727*^9}},
 CellTags->"FrequencySpaceDistortion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635774127049354*^9, 3.63577412797122*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"FrequencySpaceDistortion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "0.05", ",", "100"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.635774401016877*^9, 3.635774453347596*^9}, {
  3.635774735049123*^9, 3.635774745065151*^9}}],

Cell[BoxData[
 TagBox[
  FormBox[
   TagBox[
    RowBox[{"FrequencySpaceDistortion", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}],
    HoldForm],
   StandardForm],
  Format]], "Output",
 CellChangeTimes->{{3.635774445897892*^9, 3.635774453620762*^9}, {
  3.635774738655163*^9, 3.635774745270775*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635774772827341*^9, 3.6357747895558147`*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 1.}, {0., 1.}, {1., 0.}, {2., 0.}, {2., 0.}, {
        3., 0.}, {3., 0.}, {0., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{2, 8, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxtlktIVWEUhe9VyzTTzGjWQATpRUVWmhhXQiHCQYi9fGQ+ew0kyl6DmkaF
ZUSlllCYpYVNyggundCSlEpFCIwg1PBVWJrv1Fuuf53BdfmDyAc/Z39773WO
hmcXJOf5OByOxv8/s7+9z29XacnsqXLNZU9KQlhwwQD5lfDj4dtlZ7r6XJuj
Zk+9cEZqoV9EcyfvNwrv7tsQ/auhjXVbhP3Tl0dFVhbH4XFRbcLJ5r6Vj/NZ
mPUslCtpF35kfK0POF+F2a/lwfkmzHnxeR3C9n3j2yVcyXofUe+7cCZ9D6Of
bmG7Xyfq9goHXi5P2nau2l0Gnz7hJM57C3x+COdwX83w+SnMebmOwmdA2M6L
k7may3bePuF58/Aec9/4DgpXsN4R1BsSTqWv6eePcCL7Ne/EsHDAyXbrWUht
nOlXeRfnfRc+I8Lp3JeZx6iwve+t8BkT9jX9Wr7wGRe289YCn3mY9+/BZ0K4
mvWOwWdSOIu+0fD5KxzDfv1Qd0o46H5Oe13na3crfJR3ct7l8JkWTuO+jsNn
Rvgh9x0DH48w58V9OuLnsp03kxflKebV5FG52ut75xTO9vreKcd6fe98hC/1
nJ7o/1IfZ75nyrmct/leKTPv1ib4+ArXcN934KNs520G3ztlO2+58PET5rys
JvgoP2G9jfBZILyXvrfgo5zGfqfgo/zAUxS+MrTbnQ2fhcIJnPd7+Cjnc1/r
4eMv/JL7vgkfZR/mbRI+ynbeDsFnkfA089YAH+WnrLcOPgHC++h7Az7KGex3
HD7KsYUXRx1Vre6D8AkU3sF5v4WPch73tQY+i4Vrue/r8FHmvKxR+CjbeUuH
T5Aw52XVwUeZ87JWwWeJMOdlFcFHOZP9DsNHOeLKYE9HYq87FT7BwvGc9xv4
KOdyX5HwCRHmvFxX4aNs520IPsp23kxelgr7834mfJVLWc/kSXk/fd+hH+Us
r7wpn3Cfahu40OReC59Q4e2ct8mjMv9fsYrho/yC+zZ5VXYyb2PwUbbzZvK8
TJjzsjLgo1zmlXflA/Sth49yDvs174NyxYqUmsrz/e7V8AkTPst5m/dF2f57
dQ0+ys+5b/M+KXNerhH4KDt4/gGbOP0W
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 0.}, {2., 0.}, {2., 0.}, {
        3., 0.}, {3., 0.}}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxtltlLVWEUxe9VyzTTyp6jCKSJiqxMMj4JCUwjGoQyc8zGB4Oo6D+IiCai
Mkuwweaix+LCKS1JKQeEwAgijcoKK3POoVx7nQddfSCXHxzu/u39rbO9swtL
NhWHBQKB2n9/o5/jz6XS0XPbjecN7YuTftQ0e8aPhXOzD0XMaWj1liWOnmrh
W10Xyo60tfP5WuGRLWnxsSUdnlVtFLbPnx6+LrFZ2H9+F84bYb8eypW2COfR
9xXOO+GN7HcE571wZM6MxITKipB93wfhLHvemW+bcL7Vc69R76PwTfN1u9HP
J2H264KYyxdhzsuVwaddOcueXw6fb8LXWa8BPt+Ffd+98OkQ3sx+g6w7nm1e
j1Lq8X3KGZy3+f4SLuR97UG9TuG7vG/r57dw0Pr17J3oEvbzZv3+h/n8Zfh0
C99hPZtHjzDn5a2AT69wEvsNR90+4ejj5ZnJR5+EGuGjnM55X4FPv/B23tc+
+AwIV/K+k+DzRziceYmAz6Cwn7cm+Chz3q4cPkPCnJfbD59h4QL6roTPiHAy
++XOSx3PlrdnKZYX5WLO2/KonD1m3wWFb4zZd8qcF/ddmLCfN9tnyoPcd7av
lP28L4VPuHAWfS/CR3kV+x3GvlOOOtjiPYyrCe2ET4RwEeddBx/lbbyvJfCZ
IPyA930ePsrD3HeD8FH281YIn4nCft5ewkf5Kustgk+kcDp9z8FHeTX7HYCP
sr2vdSn58JkkXMB518BHeSvvayF8ooTv877Pwkd5iHnpg4+yn7dc+EQLhzGv
z+GjfI315sNnsvA6+p6Gj3Iq++2Bj3JMRVFLVWt9KAc+McJ5nHcVfJQ5LzcX
PlOE7/G+T8JHmfNyXfBR9vOWDZ9YYc7LPYWPMuflEuATJ5xB3xPwUV7Dfjvh
o2z7rinF8jJVeBbnnQdf5QO8L8uTMuflvUA/ymPzpuznbQF8pgn7ebM8KvP3
incGPsqZ9LW8Kqex3174KB/7fLj/69vmkOV5uvBMznsHfJQ5L2d5V+a+dtXw
Uea+d/Y+KPt5mwefeOF+Pm/vizL/X7lT8FFeT197n5TXst9u+CgHeP4CN9Hn
5g==
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.635774774685484*^9, 3.635774790085401*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 1.}, {2., 1.}, {2., 0.}, {
        3., 0.}, {3., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{1, 5, 4, 3}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJx1lltLlFEUhmfUzuf6Bd1EZWg01UgRn0RBRBfhZWWaaZZBQRfVj4isiErH
sQI72PkcXe3IHDI6GEIQBBFGzFB0sFEnm7TmXe+GZl7aIPLA4nuftdx74dy6
vVUNRaFQqOfvT+53/vkWtLbkTmdQyBfTJ2MH+lPkB8IbU+XRr4m+YGkkd7qE
q4yd1fcIX7DvOcvtFaaPw+cifcLnWb8D57Wwz0NcyxvhDfR9hvNWmD7BGM47
YT8v+9574Q7Wm2+/8FrmPUfeB+H19G1EPx+Ffb9h5CaF/bxi8EkJX2L9Mvh8
Eq5g3kv4fBZeR99d8PkifI79hjmXQvbzeoHvKdMnMN/vwiuYtxN5A8L19LV+
fghfY7/2JtLCfl7Wr/Jl1rfBZ1B4M/NsHkPCa+i7HD7DwvfZbzFyM8J+Xr3w
Ub7C+jh8fgpXM68JPiPCq+kbhc8v4XvstwS5WWE/r1fwUaaPa4fPb+Ea5u2G
z6hwJX0r4DMmTJ+AO6+ykP287L4ot7Le7qPytrx9FxZelbfvlO/m7bsiYT8v
22fKMdbbvlLezrwl8CkWPkjfU/BRvsN+R7HvlP286uFTItzG+qfwUW5g3mL4
jBPeT98T8FE+y36z8FH286qDz3jh66x/Ah/lUuaVwWeC8E36HoeP8m32OwIf
ZT+vWvhMFI6zPgEf5SbmLYLPJOF99D0GH+XT7DcDH2U/r63wmSx8g/WP4aNc
zryF8JkifJW+R+CjfIv9DsFH2c9rC3ymCrez/hF8lPcwbz58pv2P3WH4KPN7
Lg0fZT+vTfCZLsx+3EP4KEeYNw8+M4Q76XsIPsr8ewQD8FH287L7MlO4m/U1
8FXOJC3P7pMy76PrRj/K8bz7puznVQqfWcJ8T7yPylHmHYWPcgfnZfdVmfsg
GIaPsp+X3efZwgnWV8NHOZv8974rcx+6Lvgoc586ew/Kfl4L4DNHuJn19l6U
VzKvGT7KZzgve0/K/H8qGISPcojnD3iVXTs=
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 0.}, {2., 0.}, {2., 0.}, {
        3., 0.}, {3., 0.}}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJx1l1lIlGEUhkcdM80lM7rrQgRpI6IxW/jh76IuKqOQMcpMzTZNxKIM6qLo
LipsISJbBCMEb4ouix/+0pKUckEQlChGI9sQNR11XKZ8z/lAffEDkQeG8z3v
mfMdNLWoPPtEpMfjafr/M/N7/nlYNXPq7Pmcn1vhTWvtcYVfEYf9O1ISy/vd
DN/MaViQ5fNNxAVaT25tI47JW+5Lr61xUM7XQVwon7dP4nQS6302rqvqIvbk
CH/E+Uxs6oVxvhKLz0tL6gWIizSP+PYSR8h97ifc941YfdxTyPOdWH3cCPTr
B3Hc9eqsrRdfO4/g85P4sObZBJ/fxFHaj1b4/CFWX7sEPv3ER7We+AwQS7/e
Wi2ox5yrecR3kFh93GLcN0Q8qfMmef4S52g9eRPDxLHnutwXSY2O5GU+pHke
w2eEeNo/ux9BYtOvTPiMEu/SelHwGSOW77PZaoMP80HN8wQ+48RT2o/T8AkR
R2o/N8Nngni31vPCZ5I4vuZYV31Pi9MOH2b1savhM0WsPnYpfKaJ1cfeAp8w
8R6tpztv+3yWeWu3ZF6Yz2gemUfmqTn7LoLY9Ev2HXPWnH0XSXyt78L4r+4O
R/YZs/rovmLWebc3wieKeFz5AXyY92q9aew7ZnkPndZx+HiJyzVPM3yYzXvc
AJ9oYvVx78OHuVjrTcKH+Wm4MnVlctApgs8iYr/m+QAf5midp/XwiSEe0H7d
gw/zPq0Xgg+zvNduqxA+i4nLNE8jfJgntB/r4BNLHFK+Cx/mEq03Bh/mbRVX
gp66gJUPnzjibM3zDj7Mpl9r4LOE2PTrNnyY92u9IHyYZZ98sfLgE09cqnnq
4cNs+rEKPgkLciV8mE29Yfgwp90Y7AvsHHNy4ZNIbPK8gQ+zV/uVDp8k4kHt
1034MJvvYwg+zLLvApbMy1LiTM1TAF/mxJzZ88Rs5vE98jCXzZk35rPO+Y7+
y93WWvgkE5v3JPPIbP5euQMf5iHtl8wrs9kHo/Bhln3ca8k8LyPO0DxH4MOc
oP2SeWc2+7ABPsxmn8p7YH62wv+89lLIWQ2fFOKrmkfeC7Pp1y34MJt+yXti
PqD1RuDDbP7f+AfjYpd6
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.635774774685484*^9, 3.63577479028372*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 0.}, {2., 0.}, {2., 1.}, {
        3., 1.}, {3., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{4, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxllltIVFEYhccZyzQr0x7qrZKie5KVScYJMXyoJ1Ei07SLYxfKCCrrodfC
QkuiUlOIwFAhKiSSBiazIqNSE4ouUFakVpiX8X4r114HGteGYfhgc/7v3/86
e2bBnpykLKfD4aj/95n49l+dVnHRxKqwJnN66vHAyIav5BrhpPbVMX+eNXvX
Rk+sOmFHSkLEzJwOr9lfL1zuu1py8lu719RtFA7JK9sWe6rSg8dFNwtXmf2W
G+utMOtZKFf0XniL8bVeYn0STjP9esexPgvzvLzmeS3Cu7nf+H4TdrPeK9T7
Luyibzb6+SFcyX4DULdN+FzricGfH+riSuDTLnyb570OPr+ER5LNvBrg81t4
J+d9AD4dwm7mJYC5msx23l7jecrbud/4dgnHs95+1OsWdjJvpp8e4WL2a94J
n3Dk+a7Wli1tHtOv8n2e93X49Ar3mPOyzHn0Ce/mvNfDp194L/Pigs+AsJ23
Rvgo7+D+UvgMCuey3kH4DAkHMG8x8BkWvs5+A1F3RPhI/s+aj1W1nib4KN/g
eZfBZ1TYx7wdgs+Y8HLOewN8xoUzmRfeeZsns503kxfleO43eVQ+5nffBQj/
Tv7/vlO+43ffOYXLV87bGPW9w2PuM+V7PG9zXymPM29r4OMS9rWZeV+Dj3Iu
8zKG+07Zzts++AQKZ3D/C/goVzBvUfCZIhzMvF2Bj/Jp9jsCH+XY/uxFD4vv
xu2Bz1ThUp73c/go93Feq+ATJBzDeV+Gj3IB8zIEH2U7b5nwmSacyP3P4KOc
xXor4BMsHM77rhA+ygXsdwA+ynP2z0+0ars9u+ATIszfC+sJfJTt+2IZfKYr
c94X4aNczrz0wUfZzlsafEKFo7j/MXyUF7LeEvjMEA6ibz58lM+wXx98lJvj
K3K23myKS4XPTGEvz/sRfJRDOa/F8JklnMB5X4CPch7z0g0fZTtvJi9hwtXc
nwFf5TesZ/KkbP9feIp+lAv98qacElt91B3W51kOn9nCGTxvk0flTt53l+Cj
fJbzNnlVPsy89MNH2c6byXO4cBP3p8NHucAv78pzmbc6+CjfYr/mfVAeDvM6
Rz+6Ni2FT4TwF563eV+UhzivAvgovzO/F3yflB8wL73wUXZw/QX+dwQ1
           
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 0.}, {2., 0.}, {2., 0.}, {
        3., 0.}, {3., 0.}}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxtlUtIlFEYhme8ZJmZJQQtS4juSVYmDY0La5EtQjRIKsXStEiJqIhWQZBU
2AUrL+kiwi7SokVQMTCRJSmVihBkgZiSl8LSvKdj+X7vv3DeDsjwwOH/nu87
7zkuyylKyw1xuVwN//5mfoNXRfnMeugN5gdDtyvPdPb6jZ8LT6enxEYX9fs3
JcysOuFdvRsSf9a3cn+DcHbmqbC4pq+s2yxsv7+8+FxCq/A+7s/D+iicynoo
V/5J2J1hvu+wvgg/Yr/TWO3CkZeqdyedfeGz73UI19h++nYKT9q8vO9Rr0s4
yXy9R9DPN+FM69fvxlx6hDkvfyV8eoUzuH8zfL4LH2K9Jvj8EA7QtwA+/cJ3
2a+b5xbMNq9Gzwd8T/kx522+A8IhPK981BsUTuZ5Wz+/hU8wL3YnhoSdvFm/
yqncfwc+w8IVrGfzGBGe4n3ZAp9R4XvsNxR1x4SLu0+P97W1+prho1zLeVfB
Z1x4nOd1FD4Twjt53onw+SNcxLyEwWdS2MlbC3yU87m/Gj5TwqWsdww+AeFw
O2/vVvhMCzv3jW9ecjBb3to8lhdlH+dteVSemPXeuYXrZ713ymmz3rsQYSdv
9p4p7+F+e6/+w6y3ET6hwtG8L2XwUb7JfgN475TjLg90d+wY8x2GT5jwfc67
ET7KA8xbPHzChZfwvG/BR7mKeZmEj7KTtxz4zBE+zv1v4aN8kfXWwydCOJR5
K4WP8gX2OwEfZbuvnZ5s+MwVfsZ518NHmf8v/GvhM0+4vcfO+wZ8lM8zL2Pw
UXbydhA+kcJ7uf81fJRTmLfV8JkvHMW8XYOP8kn2OwIf5cKSvuefa1s8++ET
JdzAeb+Cj3IEz2slfBYIL+d5l8BHuYx5GYKPspO3TPhEC2/n/pfwUXaz3gr4
LFSm7xX4KBez30H4KNt71+exvMQIF3DeWfBV7mPeLE/KuTzvN+hH+dysvCk7
eVsDn0XCddxveVR+wnrX4aM8Ql/Lq3IV+x2Fj3LNuqXb4rsCPsvzYuF0zvsA
fJSH+d5Z3pWf2n311sFHOYt5sfug7ORtFXxihWO43+6LciHzdhU+yrHMm90n
5Tz2OwwfZRfXX7yK/QY=
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-1.06, 1.06}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.635774774685484*^9, 3.635774790481406*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6357744590732183`*^9, 3.6357745397286873`*^9}, 
   3.635774619728099*^9, {3.635774704763135*^9, 3.635774718980451*^9}, {
   3.635774759547187*^9, 3.63577476064056*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 1.}, {0., 1.}, {1., 2.}, {2., 2.}, {2., 3.}, {
        3., 3.}, {3., 0.}, {0., 0.}}, {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{2, 8, 7, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-3.18, 3.18}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-3.18, 3.18}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxtlstLlFEYxked0korFcJVIJFYSYR2sYWMf0O0ssuEXcwKi0LKRS2EFl00
CzEvJdSikDCrTdbGj6ZEpcwShKArRhZFpI23SZ2a533OYnw6IOMPjt/7O+/7
fGfMLj26bX+iz+fr/fcT+4xfWcXNTbHVFpjP7ecifUe2p5MfCUeisfUhsLEg
tkLCZ4azW4rSkz3b3yt8K3y15eRwmmd1B4QT7BcPjysYFE4FfgwcwBoSbnuX
Gb2wIxJAuaY3wjWvgxXva0YCz7HeCu8tehwOnR/tivJc85kN9Ox5n4QruN98
h4U7We8F6n0W7qBvGc7zRdid1/ryVXjaRLta4PNNuJ393gSf78LHOa+X8Pkh
3M8+lMPnp3AH82I+v4Rd3vrxPOU73G++o8ITrHcQ9caEz9LXzvNb+CbPa+9E
WDiD87TzKuew39fgMy5cx3lZPyaE73Hem+EzKRxkXpLw3Clhl7cB+CiXcP91
+EwLj7DeIfhEhO/Tdwt8/gg3st9+lJ0R9tPnFXyU3fveCp9Z4VOc12H4zAmv
Zr8L4RMVfsC88M4rns8ub5YX5Vbutzwqe3H3XYJwWdx9p9wZd98lCq9gv+w+
U87nee2+Um7lvPLhkyRcyHk3wke5mnmZw7mUXd72wccvfIz7++CjXDho9TbA
Z4Gwu68b4KPsZ79n8Pkfpk8pfBYKu7z1wEe5nPNaD59k4Qb2ux4+yiHmxb4X
lV3e9sAnRfgG93fDR3mG582DzyLhevpegY9yLc87hb9TXsl+7YbPYuEUnvcp
fJQ7Oa+18FkiXMW81cFHuYd5sXtd2eVtJ3xShXO5/wl8lCtZLxc+acK36VsL
H+Us9juMT+Uov29L4LNU2GO/Pfgon+a8cuCzTLiK/b4IH2WPeRlDWWWXN8vL
cuEh7g/CV/nurJ3X8qRcTd9nOI9yXVzelFdxnuvgky6cN2f1LI/KzZzXZfgo
b+V9Y3lVrmReJuGj7PJmec4QnuL+XfBRfhiXd+Vu+obgo+z+37P3QbmBeVsD
n0xhlzd7X5RPcF6X4KOckWD17H1SHmBexlFWmf3y/QVbOev8
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-6.36, 6.36}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-6.36, 6.36}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {0., 0.}, {1., 0.}, {2., 0.}, {2., 0.}, {
        3., 0.}, {3., 0.}}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-3.18, 3.18}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-3.18, 3.18}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxll1lIVGEYht3KfUkpxLCwQMpERC1LtDN30QYiXVUuWJlpGXQRdBXRTYto
SgwuaUlFSBHhTQvKDJqhYjZZaoZQZpSViY2jjktj+X6fF+P7g8gDw/mf/5zn
fMPE5J/NOuHl4eHR+f9v6f/KVVO9tBqNlTzQ0Bvtvz/UKvycuDivOv5g7lpr
SvLSaiOO3Zh23xUVrJ/vJE6bqovuNwYssquNeFGWgcslvyMuSL18KbNn0SjA
6ieuyr77edrUbmC76kHipoGh65G3nZZurCFiR9mLpO4Zp0W2/UQceK3+wK4L
Xc1yvWHiMfm8+o4QN8p+xmvs95U4LAe+lpM4zzfiQjmvxRP3a5RYn7W1Fj4/
iE/L/Ta2w+cXcaI8L9Mb+IwR6/M2nYLPOPF76cUkPhPEQQ3HBlu/jKf34HrM
H7Q38f1DXKK9FWI/O3GM9ibnmSR+7JDe5L44iOe0Nzkv817t7RZ8poifHJHe
5H5MEz/U3nbAZ4Z4Xnvzho+T+Or387M/P4402+DDPKe91cFnlviB9lYEnzli
m7wvllT4zBOXaG8+8Fkg9tHe3sKH2S7326iHz19ik/ZWDB8XsT5v0074LBJ3
aG/avWklS2+udOmF2a69SY/MhW7zzpP4kNu8Y97nNu+8iKe1N5lnzEXam8wr
5kydd0nw8SZu196q4MM8rL25sC1zRbtzcmJTWMtx+PgQj2hvXfBhrtHeEuGz
iviKzjszfJj7tLcF+DCv097y4bOauFV764AP827tLQE+vsQF2ttN+DA3aW8y
N5i7ngVsDo/zzciDjx/xmPb2Cj7My73Fw8efeGGD9FYJH2azzjsnfJj99T3J
gU8AcZb29hI+zH7yvIw4+AQSd2hvN+DD/Eh7k+6ZU/dMDf3uc6YfhU8Q8fpy
6a0VPszN2tsW+AQTZ2pvZfBhtmlvDvgwR2pvh+ETQmzT71srfJgDtbdY+IQS
L/dWCh/mp9qbHT7MMu9CMqSXMOIy7S0XvsxF2pv0xJyg864d52HuceuN2Vd7
2wafNcR27U16ZM7T79sK+DDf096kV+ZR7W0GPsy95tLoyHMRLdJzOHGlzrts
+DDXam/SO/NEnvTWBh/mi9qbvA/MUdrbVvhEEJtnpDd5X5hTtLdy+DCf0d7k
fWK+o71NwYd5+ffGP7amC3E=
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 4.99999999999999}, {-6.36, 6.36}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 4.99999999999999}, {-6.36, 6.36}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.635774534232362*^9, 3.635774540017294*^9}, {
  3.635774708606699*^9, 3.63577476363529*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CompositePulseDistortion", "Subsection",
 CellChangeTimes->{{3.635513112002344*^9, 3.635513115880706*^9}}],

Cell[TextData[{
 StyleBox["CompositePulseDistortion[", "Input"],
 StyleBox["divisions", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["sequence", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a distortion that emulates a composite pulse structure. ",
 StyleBox["divisions", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a list of rules assigning symbols to indeces of the input pulse, and ",
 StyleBox["sequence", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a list of the (possibly repeated) symbols representing the structure of \
the output pulse, where each one can be optionally phase rotated. It is \
assumed there are two input channels (for the phase rotations to work).\n\n",
 StyleBox["Example",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nFor example, ",
 StyleBox["CompositePulseDistortion[{a->1;;30,b->31;;-1},{a,{b,\[Pi]/3},{a,2\
\[Pi]/3},b}]", "Input"],
 " assigns the input pulse indeces ",
 StyleBox["1;;30", "Input"],
 " and ",
 StyleBox["31;;-1", "Input"],
 " to ",
 StyleBox["a", "Input"],
 " and ",
 StyleBox["b", "Input"],
 ", respectively. The output pulse will then be a concatenation of the \
segments ",
 StyleBox["a", "Input"],
 ", followed by ",
 StyleBox["b", "Input"],
 " phase rotated by \[Pi]/3, followed by ",
 StyleBox["a", "Input"],
 " phase rotated by 2\[Pi]/3, and finally ",
 StyleBox["b", "Input"],
 ". "
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635513276940012*^9, 3.635513646534224*^9}, {
  3.6357762727648373`*^9, 3.6357763119097033`*^9}},
 CellTags->"CompositePulseDistortion::usage"],

Cell[BoxData["RotationMatrix"], "Input",
 CellChangeTimes->{{3.635775967428303*^9, 3.635775969092741*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.635774133352996*^9, 3.635774134282524*^9}}],

Cell[TextData[{
 "Assigns the input pulse indeces ",
 StyleBox["1;;30", "Input"],
 " and ",
 StyleBox["31;;-1", "Input"],
 " to ",
 StyleBox["a", "Input"],
 " and ",
 StyleBox["b", "Input"],
 ", respectively. The output pulse will then be a concatenation of the \
segments ",
 StyleBox["a", "Input"],
 ", followed by ",
 StyleBox["b", "Input"],
 " phase rotated by \[Pi]/3, followed by ",
 StyleBox["a", "Input"],
 " phase rotated by 2\[Pi]/3, and finally ",
 StyleBox["b", "Input"],
 ". "
}], "Text",
 CellChangeTimes->{{3.635776334701556*^9, 3.635776337763866*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", " ", 
   StyleBox[
    RowBox[{"CompositePulseDistortion", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "->", 
         RowBox[{"1", ";;", "30"}]}], ",", 
        RowBox[{"b", "->", 
         RowBox[{"31", ";;", 
          RowBox[{"-", "1"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"\[Pi]", "/", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}]}], "}"}], ",", "b"}], "}"}]}], "]"}],
     "Input"]}], 
  StyleBox[";", "Input"]}]], "Input",
 CellChangeTimes->{{3.635776078105785*^9, 3.635776079485594*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputPulse", "=", 
   RowBox[{"GenerateSmoothRandomPulse", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{".1", ",", "50"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"inputPulse", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"inputPulse", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", "d"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635776093468877*^9, 3.635776235922414*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJx11V1Ik1EYwPFtapm6piUGeZF1kYSlMT82KTkxFNQoa5ZgTSNDm7Ow1k3a
FHF9GaLERDc16UZFC6lM/EKOYVaTtGmJzhxszunSMLMQK5vl43lveuiBMX4M
zvm/H5ztzsiVZwp4PJ7y72f9u9qwPp1Eo30sfdo6TXhsOHO/h2X/Hty/08Fs
RC4T5erkHg4SEb4+75GV5VXRiUXcembkCr7w6qFKO9vfimwrzJw7Jp8isFy4
HTk4SJLSRK0kC2YGWbUaNjA3YiGwneETcu+Fw+WtbWbyFuYz8lIjVazGjJI1
mC/IzT8dOv9iE1vvK7IwsD2k6uBr1vsNeTZeLOo720UGYb/vyIqG5AVJnIFc
hOtZRp6QqXtmjM2UD/drBfnJXW2PLaqX1kDPD2SzSK5akhhpJPT8Qlbb2vNu
vzTRd9CziizbJTtqLPxAs6HHhdxVXhOvfj7GenhH/nUUX+8rTpqgQ7AetpfM
W9YpnWS9fGRdkPFGxxkLVcJ+AuSQnHqFtc7CrscNOXTxmta2MEkFkOOObE/P
TzFEfmTXi62qjQ6evz5Oa6HHA9nYd1nca+buxybkUVOsJjTfRKOgZzPyYqHZ
T7/yirpBjydyTuhxdbdnBzVBD3Zxhb61YDmLPoCeLcj9SU2pZXntRAU9Xsht
oqymVP4bIoEeb+T6hdju8YAR4g49PshKn6W4YdcYGYYe7JjM0itFlRZSBz1C
5GqXOtCZZiM50LMVOfqSMvF0g51IoUeEfK9A1KfROcjG8/RFvh9xUpvsP0s2
3hfsc7qAkqEdTrLxPmKv1cSPTJU62Xnnh1xwwqS4leFk5x329LPKvY/uzLLz
bhtyQv/NAwnzDnaeYbeUaHNPaezsvMLeI9DMvdhnJWLo2Y6ccb5FKuwfI3ro
wX6YtuKdnjJAXHDeYXP/G9x5xJl7v3j/mT/SIPMH
        "], {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{103, 102, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 
              39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
              55, 56, 57, 58, 59, 60, 61, 62, 63, 64}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{2, 104, 102, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19,
               18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1}}], 
             
             
             PolygonBox[{{103, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.016666666666666666`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 102, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            103, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
            80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
            96, 97, 98, 99, 100, 101}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxl139QzHkcx/HdwiEV6fKjUH5ERTXRVoM+pqOL+4HQnKyQK6kz0c3NhWoa
e3fkmjq2S/nRuSOR0zmdS7nuE/1gEzbV1EbabWtbS+k6JaTueu+3f7w+Mzs7
j3++3+f3u+/PZ2YdQqMDw0xEIpHi/8/Q9/CKk/3q/Xt+KzueObQK2bt22/n2
7vypbYIV4BTLaHngyDa2aOHQqgFHpB7zWZU4fD0VOE1svmdxupYZa9RgTUKY
4ZPAFkaXW6gFz7X3CrrA1Syclg4c2e9WaXjQxOh2mU/AJduXpOZfVbEqWs/A
3Tlc2r+0jg3Seg7Ofd0mtz6gFK73D9jctsDlmPstofdfcHuAh2XppiJ2l+73
Aiw9t67Ta0Um20HP0wtu9Isp1ilyuZjeVx/48iFZsUZSwk9QzyuwyjIwsttL
wT2p5w04RlOw97syJb9PPf1gvxl+HykSavlO6hkAF6WeCIj5o17oES171xJx
xniP1Y38Hl0PPdbPzK/Q+5HQKwbL7RX7rwU38Qi6nwnYJSpbqs5qEp7HFOza
9aVM0/mIG/fECLA2ZF9QpudD4XnRkSd95j6NbeAnqWckWFG6y6NENfw+RoHr
lMvjXPcpuYR63gN3JagmZPRVcFPqGQ22913Xdd7hGVdSD7rTuUFZEWvgp6hn
DHiGRVbzxEQ9j6SeseDB6lfPKwN03It6zMC6rcvqHFu1fAT1jAPPyq4IDd2u
4dXUg7awKq3f/VsTz6Iec3Btx52Dt8428CjqsQC7XFkb56uo4d7UYwmO3dFf
kJ5wT/g9x4NDUnqP3wqsEOYFnTziTlNPzt/CPKL7G3xMvFPyufG8mwB2V93Y
/1lZDjeed+i+WfeDAjed5sbtYAWe52WoHNvzMzeeZ2jRtW3mbtmXuPG8QtfO
uen0JyviHtQzEaycc/7Fw7ZynkE96Nc5ogY7UTUfoPMOPX2krLAqr5l9Tj3W
4LOXcq3ky7WsknrQi7PiXQ+a6pg79bwPri2u6emYpmfp1IPWf+WfF3PqCeun
HvSAW/Spku8NLJR6bMBHN7SPlnUb2G3qQc9eEyAJe2hgrtQzCTw/ySXKao2B
pVEP2j3SucMz+Al7TT3oy9LH4v2meraVeiaD51SqO5M36FgF9aAn2915ZRPc
yuZTzxSw6C9JRNnUFnaUetCFjvsGE/2aWR/1oDdNem62q1PFQqhnKlhjN5h4
5uNaVkY96JPWRTU96irmTD224PVhX5+RN5awH6gH/cw/erok/xfWSz3oWFFV
dvGoPC6lHjvwksjVUySHS/lN6kH/VCHfM8X/Pp9HPdPAWV4dC4I+rOMp1IN2
aH6sPp3VyF9QD1qau2XH4I/NPJh6poPtLA47vpnQwkuoB61fdHOM7+xW7kg9
M8AvPdNd+8Q6nkw96Jy3H4RvvNjOu6kHHeX6acz10de4cV7swQfSMvLje8P5
FupFl6++sDFlb4EwT+irluEXNopvs3J6HnR25/LrDTYPhHlDR4zrXlE9UM9c
qMcBvDQseXdiepMwj+jjAzG2+s0adoR60D5fRKzacE4rzCv6cLxlaZy8jb2k
HvSRRWtl66zbhXmeCd4it0m6N0nPNlMPevBEwIOWZL0w7+j4NUrpt6F6Vko9
6NYr6Y4XD7YL+wG9svybBSuftjEn6pkFzkuSRa+P0zLjfkHPNIkz3HBSs1Tq
QYduy/M2L69nxv2EPr25zywkqJL1UA96+H/IfwZjKrU=
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJx11V1IU2EYwPFtTi3LrxU1K8gmammBaDnL9EmD0Iy0RJJQiFKnaYkomNWF
pelF6UUf5pyWCwLJUhQptcnpQtGiUpHSbUXO6dTclnMjtJamzzm76aEHxvix
cd7/OTvn3a7z+aczBTweT7b6Wnuvk69NF8yHp4qros0MjxuHHZ+HSWPtCVIL
57fEy/FTL3z7F5j9YWszQjyWFSO+O2rlvq8mVjXebL9UYOPWHydudvtkLW2w
MXi4MD3xk1cZyfIMG5OFYyB+1J0eVz5oZXA5+SyxIsAY7zm9wLzHMRLLPQ4P
unZYmBWcH8Q1t0oSI2GeO56F2CdKWWaWmLheKzFfrTkkks0yH3A9G/GYcLH9
etoUI8Pz+UlcY0jSDGzWMXy8XovEhXHXov2OqhkF9iwRX+3fO67fPcQcwJ7f
xJbUOrX/4mtmEHvsxOJfUu+24UbIwZ5l4sSzD32OL/UB28M78q/zA0fz3CtG
4CMej3qnRJ558J4W2F4+sbIppKqkVAfZuJ6AOK8Dzgg+TwJ7Pk7EN6qVkvrO
aRBgjpD49hVhJWz9Duz5UkudnwUEmOegHnucibeLZS3vjpm46+FCXGnfcioy
2Azh2ONKPPDnfkzFUzM4Yc86Yn+Zqr2LMcMQ9lAby7JH9WVmaMCe9cTZj4sm
RHYTXMQeN+JJocolJdQEUuzZQPx8xae4M8QIQuzZSOyuzclK4M/BMPZQJ05U
uO5oWX0usceduO/ciaqImBnIxR4P4jblg6DWXgNEYI8nceZ8lKg6dor7Pb2I
g2t9i/W9eu5+oT45Kb7TkzLB3Y/U23wF5UEr48Dud97EL/fl+xXUfAN2v6NW
Be4Zmqv8CuzjICL+0jtTqDNogd3PqJsUGUWX+zXA7lfU3bHJ0tYoDYRizybi
5qRcyZt0DdRiD7VX2gVFT6QWlnG/o3b8bzj2A95/5i81uO8v
        "], {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{102, 103, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
               14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
               30, 31, 32, 33, 34, 35, 36}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
              58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 
              42, 41, 40, 39, 38, 37}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.016666666666666666`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 102, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
            97, 98, 99, 100, 101}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1:eJxl13tM01cUwHFaQMEpKL6oihRQQNDFAVoE4QwWNxzbxBkiMWVzAgWng4Fm
oLiFicIyBd8oogyIcw4RB3MiiF6CyEuUVxQpioUWCpZ2bUFFZHR6fvUfz02a
5pM0v9/31557kzpsifsyim9iYtLw+vXm/e3SrgyzzfDXsNPZb1Y5vGtPUeB4
sEhndAPxxNq+S8I6PfPyfLPaiR9KAmyPdgwbP99JXJm3t/S7+BHG1ciIL065
P5xydoTh5TzlxAVlkRuyI0eYBFc/cW5FeNC+5mGGt8seJM5xHlprrdSzJlxD
xNlWq5snX9ExA65/ibP271rnC1rj9XTEAr/8VI2j2tg7TMzrlPrYRA+yu3i/
EeKHZqOle8R9LBqf5zlxVn+ItH5WD+Ph9zVKvCMo2d/po06Wgz0viXfXLZXJ
XVvYCux5RawLO925ePQ6a8aecWLbMdGMktY82Io9E8TrNp0UfPryNnA9Jh++
6ziXju3T0trhHl6P2t4xO2rVsS7gennE+ReWZ+xK6YEYvB+fePsV2Mh/oADu
eUyJf87MdzxzTQncnjAjPpBklg5znwL3vNQi80JnZ40KzmCPOfF82+jixo/V
xu9jEnH6+Jz1vu4aWIk9k4nr/zsekPa7Bkyxx4JYsN65MPdAJ7RgD7X3OSuD
nbgbzmKPJbEl337xyV964FvsmULs0p0QVXRHDiLseY848OD8zcfUfWCGPVOJ
nUtLrhxWKKEVe6gLnt3lD55/vS+xZxrxvnGLpzI3FWzDHiviU9tfWd6QDIE3
9lgTl6r8+NUhauPvOZ34tP3WBK8nauO8UC8snj0WZqExziO1ld8j753VauDO
uxnEKxNC7zWaqoE776ijhgWb8qtVwG0HG+I4SXXy6meDwJ1n1IJ4ZZvsiBK4
84rao9zB0JapAA/smUn8q8Iyb2OvDE5hD/WjD+ILJeadMIHnHbWw9s87SWla
iMSeWcQvvIalXTd10Ig91GuSYotv/qiH5dgzm7jCPzlT3KSHLOyhthDtuqX9
Ww/j2EPdbV1/4qqfHrZgzxxibWLd54MJOqjHHmqVXYdnjVgL72PPXGLeN5eE
5pYaOI491DWVwRtZ/1MYwx7qlKKgM8uilLAZe2yJj2REpNRmyaEWe6jrd5e5
8hY8gaXYIyAu9OhpPVfxAI5iD/Xo2H7fRnETjGIP9aqw2LLK76/CV9gzj9jk
k9Len66dZzXYQz2z4Y+b96fWMjfsmU+8aG9u+UhTGzuMPdQGSdnaKnMpe449
1EuGrEXaNTImxp4FxIUZRXwvOzmrxh7qAh/9c68f+pgr9tgR/3XCIXWPv5Jl
Yg91YkDynOMRA2wEe6iDVAZha/sA24Q9C4lXiHROjw8NsCrsoZ5U1VryT6GS
OWOPPbGHuyJ8kXc/O4g91D4Lt13XByuYHnuoF0dXlpYzjXFehMRDqTEd8lQN
fI291DG/7ey1GVcb54laYVY5KdRDDbfxeaiLDILEa8uHjPNGPa1rqySYpwJ3
7HEgXtebNnlB8aBxHqlvb/4swztgAI5gD3VJ/gm3yzX9wM0rdZTWzyYzsA9e
YA+1+ylhorxGDtw8OxJ/obA9eCO0F8Kxh3qekL/PzSADbt6pry6Lc4rPegK3
sIe60mVJiyr9MXD7gfpRzcCOnv4uWII9TsQXciJ3xtZJgdsv1BWBG0SX/aRw
CHuoL4Zsc6wKlwK3n6iniyNybvh2wTPsoX77P+R/0rwg2Q==
           "]]}}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, True}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameStyle -> {Automatic, Automatic, Automatic, 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, 
       PlotRange -> {{0, 9.99999999999998}, {-1.3657602401901994`, 
         1.3657602401901994`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.635776217043996*^9, 3.63577623638396*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell["Distributions", "Section",
 CellChangeTimes->{{3.63448265269621*^9, 3.634482654024417*^9}}],

Cell["Pulse Penalties", "Section",
 CellChangeTimes->{{3.634482659363901*^9, 3.6344826640243053`*^9}}],

Cell[CellGroupData[{

Cell["Plotting Tools", "Section",
 CellChangeTimes->{{3.634482829144292*^9, 3.634482831296011*^9}}],

Cell[CellGroupData[{

Cell["PulsePlot", "Subsection",
 CellChangeTimes->{{3.635606383492382*^9, 3.6356063863016872`*^9}}],

Cell[TextData[{
 StyleBox["PulsePlot[", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " plots the pulse amplitudes of the ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". Each input channel is plotted on a separate subplot. The output pulse, as \
distorted by the ",
 StyleBox["DistortionOperator", "Input"],
 ", is optionally plotted as well.\n\n",
 StyleBox["ListPlot Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["PulsePlot", "Input"],
 " accepts all options which ",
 StyleBox["ListPlot", "Input"],
 " accepts. When an option value is wrapped in ",
 StyleBox["DistributeOption", "Input"],
 ", for example ",
 StyleBox["PlotLabel\[Rule]DistributeOption[", "Input"],
 StyleBox["\[OpenCurlyDoubleQuote]channel1\[CloseCurlyDoubleQuote]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[CloseCurlyDoubleQuote]channel2\[CloseCurlyDoubleQuote]", "Input",
  
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[CloseCurlyDoubleQuote]channel3\[CloseCurlyDoubleQuote]", "Input",
  
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", the successive arguments are individually sent to each subplot.\nSeveral \
options to ",
 StyleBox["ListPlot", "Input"],
 " are automatically set to produce quality pulse plots. These default values \
will be overridden if they are specified in ",
 StyleBox["PulsePlot", "Input"],
 ". Changing certain of these options to do with frames and padding when ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["True", "Input"],
 " may cause problems.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "In addition to the options of ",
 StyleBox["ListPlot", "Input"],
 ", valid options for ",
 StyleBox["PulsePlot", "Input"],
 " are:\n\[Bullet]",
 StyleBox[" ShowDistortedPulse", "Input"],
 " specifies whether the output pulse due to the ",
 StyleBox["DistortionOperator", "Input"],
 " should be plotted. Valid values are ",
 StyleBox["False", "Input"],
 ", ",
 StyleBox["True", "Input"],
 ", and ",
 StyleBox["\[OpenCurlyDoubleQuote]Only\[CloseCurlyDoubleQuote]", "Input"],
 ". If ",
 StyleBox["True", "Input"],
 ", the output channels will be superimposed on the input channels. If ",
 StyleBox["\[OpenCurlyDoubleQuote]Only\[CloseCurlyDoubleQuote]", "Input"],
 ", only the output pulse will be plotted.\n\[Bullet]",
 StyleBox[" ChannelMapping", "Input"],
 " specifies which output pulse channels should be plotted on top of which \
input pulse channels in the case that ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["True", "Input"],
 ". The default value ",
 StyleBox["Automatic", "Input"],
 " preserves channel order and attempts to spread the output channels as \
evenly as possible over the input channels; in the standard case where the \
number of input channels is equal to the number of output channels, this will \
be the expected 1 to 1 mapping. Enter this option as a list of lists of \
output channel indeces. For example, {{1,3},{2,4}} specifies that the first \
and third output channel are plotted on top of the first input channel, and \
the second and fourth output channel are plotted on top of the second output \
channel.\n\[Bullet]",
 StyleBox[" PulseScaling", "Input"],
 " specifies a set of axis scaling parameters. The default value ",
 StyleBox["None", "Input"],
 " does not modify any scales. When ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["False", "Input"],
 ", setting this option to ",
 StyleBox["{xscale,ampscale}", "Input"],
 " multiplies the x-axis values by ",
 StyleBox["xscale", "Input"],
 ", and the y-axis values by ",
 StyleBox["ampscale", "Input"],
 ". ",
 StyleBox["ampscale", "Input"],
 " can also be a list of length equal to the number of input channels, in \
which case each channel can have a different scaling. When ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["True", "Input"],
 ", set this option to ",
 StyleBox["{xscale,inputAmpscale,outputAmpscale}", "Input"],
 ".\n\[Bullet]",
 StyleBox[" PulseLayout", "Input"],
 " ",
 "determines the layout of the pulse plot. Set to ",
 StyleBox["Row", "Input"],
 " for a single row, ",
 StyleBox["Column", "Input"],
 " for a single column,  ",
 StyleBox["{rows,columns}", "Input"],
 " for a grid of a specified shape, or ",
 StyleBox["List", "Input"],
 " for just a list of the plots with no layout.\n\[Bullet] ",
 StyleBox["PulsePaddingMultiplier", "Input"],
 " determines the vertical padding within a plot. This number is multiplied \
with the maximum absolute value of the plot amplitudes to determine the y \
limits. If set to a tuple, ",
 StyleBox["{inputMult,outputMult}", "Input"],
 ", the input and output pulses get different multiplier paddings."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6356781985727777`*^9, 3.635678202053685*^9}, {
   3.635767530141574*^9, 3.635767590758665*^9}, {3.6357677784284554`*^9, 
   3.635767836500763*^9}, {3.6357679795652857`*^9, 3.6357681834796343`*^9}, {
   3.635768218595337*^9, 3.635768450989819*^9}, {3.635768482365139*^9, 
   3.6357687324540863`*^9}, {3.635768764311047*^9, 3.635768829711265*^9}, 
   3.635770065205719*^9},
 CellTags->"PulsePlot::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.635676773952529*^9, 3.635676774611393*^9}}],

Cell[TextData[{
 StyleBox["ShowDistortedPulse", "Input"],
 " is an option for ",
 StyleBox["PulsePlot", "Input"],
 " and ",
 StyleBox["PulseFourierPlot", "Input"],
 " which specifies whether the output pulse due to the ",
 StyleBox["DistortionOperator", "Input"],
 " should be plotted. Valid values are ",
 StyleBox["False", "Input"],
 ", ",
 StyleBox["True", "Input"],
 ", and ",
 StyleBox["\[OpenCurlyDoubleQuote]Only\[CloseCurlyDoubleQuote]", "Input"],
 ". If ",
 StyleBox["True", "Input"],
 ", the output channels will be superimposed on the input channels, see ",
 StyleBox["ChannelMapping", "Input"],
 " for configuration. If ",
 StyleBox["\[OpenCurlyDoubleQuote]Only\[CloseCurlyDoubleQuote]", "Input"],
 ", only the output pulse will be plotted."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635676783484169*^9, 3.635676786018333*^9}, {
  3.635676819302569*^9, 3.635676894141822*^9}, {3.6357678951885977`*^9, 
  3.635767951194305*^9}},
 CellTags->"ShowDistortedPulse::usage"],

Cell[TextData[{
 StyleBox["ChannelMapping", "Input"],
 " is an option for ",
 StyleBox["PulsePlot", "Input"],
 " and ",
 StyleBox["PulseFourierPlot", "Input"],
 " which specifies which output pulse channels should be plotted on top of \
which input pulse channels. The default value ",
 StyleBox["Automatic", "Input"],
 " preserves channel order and attempts to spread the output channels as \
evenly as possible over the input channels; in the standard case where the \
number of input channels is equal to the number of output channels, this will \
be the expected 1 to 1 mapping. Enter this option as a list of lists of \
output channel indeces. For example, {{1,3},{2,4}} specifies that the first \
and third output channel are plotted on top of the first input channel, and \
the second and fourth output channel are plotted on top of the second output \
channel."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635676907230582*^9, 3.6356771582801723`*^9}},
 CellTags->"ChannelMapping::usage"],

Cell[TextData[{
 StyleBox["PulseScaling", "Input"],
 " is an option for ",
 StyleBox["PulsePlot", "Input"],
 " which specifies a set of axis scaling parameters. The default value ",
 StyleBox["None", "Input"],
 " does not modify any scales. When ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["False", "Input"],
 ", setting this option to ",
 StyleBox["{xscale,ampscale}", "Input"],
 " multiplies the x-axis values by ",
 StyleBox["xscale", "Input"],
 ", and the y-axis values by ",
 StyleBox["ampscale", "Input"],
 ". ",
 StyleBox["ampscale", "Input"],
 " can also be a list of length equal to the number of input channels, in \
which case each channel can have a different scaling. When ",
 StyleBox["ShowDistortedPulse", "Input"],
 " is ",
 StyleBox["True", "Input"],
 ", set this option to ",
 StyleBox["{xscale,inputAmpscale,outputAmpscale}", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.63567724244307*^9, 3.6356774881321697`*^9}, {
   3.635677967593367*^9, 3.635677967921659*^9}, {3.6356994629980373`*^9, 
   3.635699479996532*^9}, 3.635768187601697*^9},
 CellTags->"PulseScaling::usage"],

Cell[TextData[{
 StyleBox["PulseLayout", "Input"],
 " is an option for ",
 StyleBox["PulsePlot", "Input"],
 " and ",
 StyleBox["FourierPulsePlot", "Input"],
 " which determines the layout of the pulse plot. Set to ",
 StyleBox["Row", "Input"],
 " for a single row, ",
 StyleBox["Column", "Input"],
 " for a single column,  ",
 StyleBox["{rows,columns}", "Input"],
 " for a grid of a specified shape, or ",
 StyleBox["List", "Input"],
 " for just a list of the plots with no layout."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6356777507768917`*^9, 3.635677909256299*^9}},
 CellTags->"PulseLayout::usage"],

Cell[TextData[{
 StyleBox["PulsePaddingMultiplier", "Input"],
 " is an option for ",
 StyleBox["PulsePlot", "Input"],
 " and ",
 StyleBox["PulseFourierPlot", "Input"],
 " that determines the vertical padding within a plot. This number is \
multiplied with the maximum absolute value of the plot amplitudes to \
determine the y limits. If set to a tuple, ",
 StyleBox["{inputMult,outputMult}", "Input"],
 ", the input and output pulses get different multiplier paddings."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635700660555283*^9, 3.6357007278037233`*^9}, {
  3.6357011305063667`*^9, 3.63570115489896*^9}},
 CellTags->"PulsePaddingMultiplier::usage"],

Cell[TextData[{
 StyleBox["DistributeOption", "Input"],
 " allows you to distribute a given ",
 StyleBox["ListPlot", "Input"],
 " option to each subplot of ",
 StyleBox["PulsePlot", "Input"],
 " or ",
 StyleBox["PulseFourierPlot", "Input"],
 ". For example, ",
 StyleBox["PlotLabel", "Input"],
 "\[Rule]",
 StyleBox["DistributeOption[\[OpenCurlyDoubleQuote]X\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]Y\[CloseCurlyDoubleQuote]]", "Input"],
 " will give the first subplot title \[OpenCurlyDoubleQuote]X\
\[CloseCurlyDoubleQuote] and the second sub plot title \
\[OpenCurlyDoubleQuote]Y\[CloseCurlyDoubleQuote]."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.635702495969613*^9, 3.635702604366819*^9}},
 CellTags->"DistributeOption::usage"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.6357689507470818`*^9, 3.63576895232404*^9}}],

Cell["Barebones pulse plot.", "Text",
 CellChangeTimes->{{3.635769009659631*^9, 3.635769034737159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", "pulse", "]"}]}], "Input",
 CellChangeTimes->{{3.635768960977283*^9, 3.635768999517934*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
      1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
      0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
      0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 12, 7, 8}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
      2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{11, 12, 9, 10}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
            1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{3.6357689998372927`*^9}]
}, Open  ]],

Cell[TextData[{
 "Same thing but with some styling and using ",
 StyleBox["DistributeOption", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.635769256298686*^9, 3.6357692610905943`*^9}, {
  3.635770267591811*^9, 3.635770272623713*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<X component\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Y component\>\"", ",", "14", ",", "Bold"}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<time (\[Mu]s)\>\"", ",", "\"\<amplitude (MHz)\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<time (\[Mu]s)\>\"", ",", "\"\<\>\""}], "}"}]}], "]"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.635769038628624*^9, 3.635769231406991*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
      1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
      0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
      0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 12, 7, 8}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"amplitude (MHz)\"", TraditionalForm], None}, {
        FormBox["\"time (\[Mu]s)\"", TraditionalForm], None}}, FrameStyle -> 
     Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 400, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"X component\"", 14, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
      2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{11, 12, 9, 10}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
            1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\"", TraditionalForm], None}, {
        FormBox["\"time (\[Mu]s)\"", TraditionalForm], None}}, FrameStyle -> 
     Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 400, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"Y component\"", 14, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6357690483009157`*^9, 3.635769065478539*^9}, {
  3.6357691205390873`*^9, 3.635769232056301*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.6357689771618977`*^9, 3.635768978269103*^9}, {
  3.635769020673541*^9, 3.635769020794546*^9}, {3.635769303393445*^9, 
  3.6357693035319443`*^9}}],

Cell[TextData[{
 "Put a convolution distortion on a pulse and look at the difference between ",
 StyleBox["ShowDistortedPulse", "Input"],
 " being ",
 StyleBox["False", "Input"],
 ", ",
 StyleBox["\[OpenCurlyDoubleQuote]Only\[CloseCurlyDoubleQuote]", "Input"],
 ", and ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6357696068632727`*^9, 3.635769633375824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", 
      RowBox[{"LiftDistortionRank", "@", 
       RowBox[{"ExponentialDistortion", "[", 
        RowBox[{"0.1", ",", "5", ",", "80", ",", "0.1", ",", "0.01"}], 
        "]"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PulsePlot", "[", 
      RowBox[{"pulse", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"DistributeOption", "[", 
         RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "]"}]}], ",", 
       RowBox[{"ShowDistortedPulse", "\[Rule]", "#"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"25", ",", "25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "10"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    
    RowBox[{"{", 
     RowBox[{"False", ",", "\"\<Only\>\"", ",", "True"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.635698732609721*^9, 3.635698768618702*^9}, {
  3.6357049831642*^9, 3.635704999050316*^9}, {3.635705807412517*^9, 
  3.6357058303301897`*^9}, {3.635706061948951*^9, 3.635706091155819*^9}, {
  3.6357061272919397`*^9, 3.6357061348586273`*^9}, {3.635707026372208*^9, 
  3.635707048080329*^9}, {3.6357082921923323`*^9, 3.635708292812504*^9}, {
  3.63570841180661*^9, 3.635708411979032*^9}, {3.635708539727036*^9, 
  3.635708539962389*^9}, {3.635708599794784*^9, 3.635708610984044*^9}, {
  3.635709938201185*^9, 3.63571000112113*^9}, {3.6357100694227123`*^9, 
  3.635710069502595*^9}, {3.635769305828113*^9, 3.635769588986437*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
          1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
          0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
          0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 12, 7, 8}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 11, 10, 9}}], 
               PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
         ImageSize -> 300, Method -> {}, PlotLabel -> 
         FormBox["\"A\"", TraditionalForm], 
         PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
          2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
          2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{11, 12, 9, 10}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
         ImageSize -> 300, Method -> {}, PlotLabel -> 
         FormBox["\"B\"", TraditionalForm], 
         PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]},
    {
     TemplateBox[{GraphicsBox[{{}, 
         GraphicsComplexBox[CompressedData["
1:eJx11n1Q03UcB3DkuCYSnoAJGC0IAuIpppUm6UcENMEnWHlcoAiGJHXHg3bg
Sq8MvPCBJ4HECYo8HKTQMAwQZGwgLQXkqY2BwHgUYiCMjSlW5u9z21+f63vH
7V4Ht9/39/2839/DLiImKNLQwMCg6OUP8/nN6oodw7wkuJZ9QXP8aSkY6Jbe
+t9/d17pEdQj0jmLuEe7O9l7XyvUsJOnA2vyidkizszhiS7d3xcRC67HVVpz
ZHA5l1llxJKhLWu9LfqhFr+vgthtKX5vW84gKAOZJ1YSe1svPxs2otA9r4qY
U1YxnRc0AitkhbGbV1QT29ay/DuvjgJuJ7eW2OZnaak0dAKcQ9PEGud64m5l
lg2H+xdU434biNsCG/yMpmaAeZqssJH4kap6QHhxDqbxfUTEgfdtSk6YqGA9
ribis2ZKh/iwBd37NhM72JlFrbqohiYNs+N7xBkSn+wvyjRggufxOzGv/YjM
p3gRuDhwCfHK/XUJTila4ON5/UG81u+M4Kc0LYzymA3dJ+6xupAUKVsEVzzP
VuL4yMLSO56LcIw5rtg2Yt/BzDXKXA3U4Xm3EzuucvwywUwDyzD9HcTRIR7L
X2SroRjnQb3ngDBru6Madg4zG+4k3ne7tOtd0QLM4LyovXhmourIBcgQMwfe
Rfxa0KCR2nwB3sd5dhPvtBzfmrJxHuQYGOqQ7o+exLGVcBLn3UO8+fyDBnnk
BNgxx8H+k9hD88uxgo3DcA/zQL0rpIBrYiGHo0eYJSU+pMh779XcDjDFvMiI
r7g0xbzeL4LKHcyBUds6/mOR2X4VPsU89RJ7jh7cVOJSKXyGhaO+lC8PPK1q
EuZh3uTE11ziT6QbFwu9sfB9xOYv+HOXJA9hHPNIXf/hLW9/rgJSsJD9xGYB
4W4Bk4/BHfP6iHjx39tWOc2z0NnKLOpkZ/O4oW9V8DXmeYD4t8tOOdIADVgz
41w9SHzGKy0jQqqFu5h3aoGxifsr9ksQzmwndIh4nfbXrOINf4Mh9kFB/Hmw
VaK/+Dl8gvOg7kt1rjJmP4MS7Au1u2dlqv2dRXiK86JWp/r5JKarwR/7NEzM
4nRvOclXwRWcJ7Wb1HTGQzoHs9g3at/oBCErcRa24rxHiMduPjkgzpiGTOwj
9Tm+79SbqkkYw+1Q13hZpkdlTsAH2NdR4oMOqm1JX43Bj5gXal7jKFvDG4E+
rAt1vqieK6xRgBvmaYyY5VLUJN42CKew79QRfPs30sL7oQPzRh1SXj52uqUX
3sL7YJz43I0Y4/loKRzHPFLvCV7PfvhxD7TgfUG9ML9hqPizLrDCvE4QK25Y
cn7gv7x38T6hHncXTPWZtkM95pma5RRqJ+A8gJV43zwmNr75ju06vgQOYd6p
xYe3fy/0aYFbeB9RLxuwjwp+uxmMsA+TxAVVYTZpm8SwH/tAbfPcwZV3qhFK
sQ/UvXaS1L3yu7CEfaB2KveVORjWwS7swxQx1/XoGvfYGsjHPlDr/+/T36d6
6+8/g/9Z/wFWggAn
          "], {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{163, 162, 77, 78, 79, 80, 81, 82}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 164, 162, 76, 75, 74, 73, 72, 71, 70, 69, 68, 
                67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 
                52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
                37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
                22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                6, 5, 4, 3, 1}}], 
               
               PolygonBox[{{163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 
                152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 
                140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 
                128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 
                116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 
                104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
                90, 89, 88, 87, 86, 85, 84, 83}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.016666666666666666`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
              65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 162, 77, 78, 79,
               80, 81, 82, 163, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 
              94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 
              108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
               121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
              133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
               146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 
              158, 159, 160, 161}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
           2.4844511803067872`}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
         ImageSize -> 300, Method -> {}, PlotLabel -> 
         FormBox["\"A\"", TraditionalForm], 
         PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
           2.4844511803067872`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
         GraphicsComplexBox[CompressedData["
1:eJx11HtMk1cYBvDvKywIRFzWssFUwkUSokjGEImJ7j1dcDIimVSYLkPmFCno
lColczgEQaJDQGADh7PIfTilAwajICiFycXBQhG5CXK/bMUOWYiVIdu+N/jX
m52kaX5p0+/0vM9zHA5FyI6IOI7L/+8lvJ+RqHeNRp+H3MyUBaVRA9zKeumX
n8clz7rJunUr/oa4+5lfonTPIGjsEvX+mhxiO637k8NTYyvfLyQuyz9Zbus+
DVezhXWDuHX4nTelYj3U4O+piV0XT33QkWWAWX/hieXEUttVSZ+Mza08r5LY
/YZar5LNg0VvgWKHRTWxfY2Zr+76X4Dbya4hVuzYyIszF8Al6HLjgksdsffH
1T3FNkaoxv3eIe7KkFgvBS+C8LTeggZiRZRTw9TxJdDj/9ESGzcNDd/yXQYP
XE3Ejsd8TCSL/6z831+Ih7WO9VsbONa0IOz4HrG0UVvRqeCZJZ5HC7HbhjNB
114Vsb048FbiZvk2Z488EfsOz6uNGMxelDo3iNh4tLCh+8RuETsTnGJEbBOe
Zzux8fJQyzkmYpHCcSk6iNcFmjgVmYvYbTzv34hLxEpTvo9nPKa/kzjLwmf7
6zd5VoTzoH7vkrjqZDzP3h8VNqwj/n7Iwu/mAZ49wXlRZ8k9fw3ZzrP0RuHA
u4hzEkwNPnY888R5PiBeHzeeZmHCs34MDPWpdelTh//gWAzOu5u4da1Ps3U3
xxyE47B7SKz8edZ8+i7H7mEeqOV+uX8XlHIsPFRYPcTjXt669SqOrca89BJL
vL7dsjGVY+W7hAOj1oVpe/LjOBaIeeojjupwsjqi5NhzLBz1F9MZMf7hHFNh
3vqJt6VMpe2WL4MUCz9AHH0sKfPh0nOYxDxSV0bGpM6/WICvsJCPiFPrdFWh
B+dhM+Z1kPh0YNO+IU8D6NqFRf2K6Wuf+/vOQBTmeYi4LHqtdtkwBrbCOCWP
idWn20P2uQ5CPeadOtmz2nsg9AF8KmwnaJg4bnNoi62hGUTYhxHiuTvm8bk5
9RCA86DWXAr+zLKjFoqxL9Qzj96WOjANGHFe1HOSAuePnlaBL/ZplDhAKVW0
DfwE13Ce1BerRuNtnpWDAftGPbJGaR0hLQOG8x4jtvfPU/UeLYUM7CN15979
b7yV8wNM4HaoN2hnjt+2LoGt2Ndx4vOx9h5L94vgIuaFesTsqVisKYABrAt1
p7y6/cfePHDFPE0QTwRbJZs458JZ7Dt1mWfGu+FeKujEvFHbFK5WF0dcBUe8
DyaJ97fm1l7XXwEl5pF6T41ONlaYCc14X1D7KB/LszO/BhvM6xSxQi/jzmrS
4SjeJ9TdB0oq2lalQR3mmXpuMqMrwDQFrPC+mSZ2sdmZd0KaBAcx79RbahqL
OrQXoALvI+q+W5FrLGMTwRT7MEMcFvgnHxSZAB9iH6gDKivq47PPQQn2gTqs
tjkkvj8WFrEP1MYrJ8qydV/CbuzD78T2FXcPXRBHQw72gZr7n/Uv+KDQJg==

          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 162, 161, 160, 159, 158, 157, 156, 155, 154, 
                153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 
                141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 
                129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 
                117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 
                105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 
                91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 
                76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 
                61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 
                46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.016666666666666666`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
              65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
              81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
              97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 
              110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
               123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 
              135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
               148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
              160, 161}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
           2.4844511803067872`}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
         ImageSize -> 300, Method -> {}, PlotLabel -> 
         FormBox["\"B\"", TraditionalForm], 
         PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
           2.4844511803067872`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]},
    {
     TemplateBox[{OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {
            0.2, 1.}, {0.30000000000000004`, 1.}, {
            0.30000000000000004`, -1.}, {0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {
            0.5, 0.}, {0.30000000000000004`, 0.}, {0.4, 0.}, {0., 0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 12, 7, 8}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 11, 10, 9}}], 
                 
                 PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 
                11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3.18, 3.18}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
           ImageSize -> 300, Method -> {}, PlotLabel -> 
           FormBox["\"A\"", TraditionalForm], 
           PlotRange -> {{0, 0.8000000000000005}, {-3.18, 3.18}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n9Q03UYB3D0uBAJT8AEjBYIAQIjppUm6SMCmmAqrDwuUARDkrrjh3bg
Sq8MvPAHAwQSJyjiOEghMIwhyNhAWgrIrzYGAuPXhBgIYxuKlfl9wn96Pnfc
7nXH8f18P8/7/RkOkbHBUYuNjIwKXvwwny/Xlexz+qNPiuHrFWXbB3nJ8H9/
e1bjGdwlWXAWcdfcRyk+e5pBxEqZCBLlE7MknMmD6o6F379GXH41vsKWo4CL
ucwqIZYNbF7lY9UL1fj3yog95hN2t+T0gyaIeWIFsY/tktPhQ6qF51USc0rK
JvKCh2CpojBu09IqYvtqk4D2y8OA28mtJrb7SV4sD1ODaxhfqnetJe7UZNlx
uH9CFe63jrglqM7feHwSmKcpCuuJH2qr+sTnp2EC30dCHHTPruiYmRbW4Wog
Pm2hcUoIn11430ZiJweL6OXnddCgZ3Z8lzhD5pv9eYkezPA8fiPmtR5S+AoN
wMWBy4iX7a1JdEmdAwGe1+/Eq/xPlf/In4NhHrOhe8RdNueSoxQGcMfzbCZO
iCosvu1lgCPMccW1EPv1Z67U5OqhBs+7ldh5ufMXiRZ6WIRtaCOOCfVc8jxb
B0KcB/WufeKsbc462DHIbLideM+t4o63JbMwifOi9uZZSKqiZiFDyhx4B/Fr
wf3GOstZeBfn2Um8w3p0S+qGGVBiYKhDOz94HM/SwHGcdxfxprP365RRanBg
joP1B7Gn/ucjBRsG4S7mgXpnaAHXzEoJhw8xS058QJX3zqu5bWCOeVEQX3Jr
iH29VwIV25kDo7Z3/tsqs/UyfIJ56ib2Gt6/scitQvwUC0d9IV8ZdFLbIM7D
vCmJr7glHEs3FYp9sPA9xJbPBdMXZA9gFPNIXfv+TZ8ArgpSsZC9xBaBER6B
Y4+AjXl9SGz455ZNTuMUtDczizrF1TJ+4BstfIV57iP+9aJLjjxQD7bMOFf0
E5/y5mdEyufgDuadutzUjP2K4zxEMNsJGyBeO/dLlnD9X/Dfd4aK+LMQm6QA
6TP4GOdB3ZPmWmnKegpF2BdqtldFmuNtAzzBeVHr0vx9k9J1EIB9GiQ24XRu
Pi7QwiWcJ7WH3HzSUz4NU9g3ar+YRLFJ0hRswXkPEY/ceLxPmjEBmdhH6jMC
v/E3tWMwgtuhFnlbp0dnquE97Osw8X4n7dbkL0fgB8wLNa9+mKXnDUEP1oU6
X1LLFYtU4IF5GiE2cbvWIN3aDyew79SRAsc3+BG90IZ5ow4tLR052dQNq/E+
GCU+cz3WdCZGDkcxj9S7QtaxHnzYBU14X1DPzqwfEH7aATaYVzWx6ro153vB
i3sX7xPqUXb5eI95K9RinqlNXMIcyjn3YRneN4+ITW+ssV8rkMEBzDu19OC2
78S+TXAT7yPqRX2O0SFvNYIx9mGMuKAy3I6/UQp7sQ/Uds+c3Hkn6qEY+0Dd
7SBL2628A/PYB2qXUj+F0+Ia2Il9GCfmuh9eyY4TQT72gfrl/4H/Aktu+Ic=

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
             2.4844511803067872`}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
           ImageSize -> 300, Method -> {}, PlotLabel -> 
           FormBox["\"A\"", TraditionalForm], 
           PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
             2.4844511803067872`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {
            0.2, 2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 
            2.}, {0.4, 2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0.,
             0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{11, 12, 9, 10}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3.18, 3.18}}, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
           ImageSize -> 300, Method -> {}, PlotLabel -> 
           FormBox["\"B\"", TraditionalForm], 
           PlotRange -> {{0, 0.8000000000000005}, {-3.18, 3.18}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n1M1HUcB/Df76AhMLF1R0Eq40E2psgiROamfb7XMInJkhPSFpIpcqAp
pxzLMARBpiEgYGCYhyAPYQoBQRwIykHyYNA4RJ4EeX6owwtpN09Cqt8n/KfP
d2O318b4fX/fz/v9PRwORMgOiTiOy/v3R/h8uXIzUwxKoxpOSUp3jEafhf87
LnnWTdatXfbXxN3P/BKluwZBbZeo81fnENtp3J8cnBpb/v0C4rLrx8tt3afh
SrawbhC3Dr/zplSsgxr8e6XErgsnPujI0sOsv/DEcmKp7YqkT8bmlp9XSex+
o1Snks2DRW++YptFNbF9jZmv9tqfgNvJriFWbFvPizMN4BJ0sdHgUkfs/XF1
T5GNEapxv3eIuzIk1ovBCyA8rTe/gVgR5dQwdXQRdPg+GmLjhqHhW75L4IGr
idjxiI+JZOHv5ff9mXhY41i/uYFjTQZhx/eIpY2aik4FzyzxPFqI3dadCrr6
qojtxoG3EjfLtzh75InYt3hebcRg9qLEuUHExqOFDd0ndovYnuAUI2Ib8Dzb
iY0Xh1rOMBGLFI5L0UG8JtDEqdBcxG7jef9KXCxWmvJ9POOxDZ3EWRY+W1+/
ybNCnAf1exfEVcfjefb+qLBhLfF3QxZ+N/fx7AnOizpL7vlLyFaepTcKB95F
nJNgqvex45knzvMB8dq48TQLE571Y2CoT6xJnzr4O8dicN7dxK2rfZqtuznm
IByH3UNi5U+z5tN3OXYP80At98v9K7+EY+GhwuohHvfy1q5VcWwl5qWXWOL1
zab1qRwr3yEcGLU2TNNzPY5jgZinPuKoDierQ0qOPcfCUX8xnRHjH84xFeat
n3hLylTaTvkSSLHwA8TRR5IyHy4+h0nMI3VlZEzq/AsDfIWFfEScWqetCt0/
Dxsxr4PEJwOb9gx56kHbLizqV0xf+9zfdwaiMM9DxGXRqzVL+jGwFcYpeUxc
erI9ZI/rINRj3qmTPau9B0IfwKfCdoKGieM2hrbY6pvhv++MEeK5O+bxuTn1
EIDzoFZfCP7MsqMWirAv1DOP3pY6MDUYcV7Uc5J854+eVoEv9mmUOEApVbQN
/AhXcZ7U56tG422elYMe+0Y9skppHSEtA4bzHiO2989T9R4ugQzsI3Xn7r1v
vJXzPUzgdqjXaWaO3rYuhs3Y13His7H2Hov3C+E85oV6xOypWKzOhwGsC3Wn
vLr9h948cMU8TRBPBFslmzjnwmnsO3WZZ8a74V4q6MS8UdsUrCwtirgCjngf
TBLvbc2tvaa7DErMI/WuGq1srCATmvG+oPZRPpZnZ14CG8zrFLFCJ+NOq9Ph
MN4n1N37iivaVqRBHeaZem4yoyvANAWs8L6ZJnax2Z53TJoE+zHv1JtqGgs7
NOegAu8j6r5bkassYxPBFPswQxwW+AcfFJkAH2IfqAMqK+rjs89AMfaBOqy2
OSS+PxYWsA/UxsvHyrK1X8JO7MNvxPYVdw+cE0dDDvaB+uX/gf8AsUXQJQ==

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
             2.4844511803067872`}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], ImagePadding -> {{25, 25}, {20, 10}}, 
           ImageSize -> 300, Method -> {}, PlotLabel -> 
           FormBox["\"B\"", TraditionalForm], 
           PlotRange -> {{0, 0.8000000000000005}, {-2.4844511803067872`, 
             2.4844511803067872`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.635769321037745*^9, 3.6357694286882257`*^9}, {
  3.635769462187499*^9, 3.635769497521447*^9}, {3.6357695326878643`*^9, 
  3.635769589592057*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 3", "Subsubsection",
 CellChangeTimes->{{3.635769692198303*^9, 3.6357696938868437`*^9}, 
   3.635770089188149*^9}],

Cell[TextData[{
 "Vary the ",
 StyleBox["PulsePaddingMultiplier", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6357700232922173`*^9, 3.635770029892819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PulsePlot", "[", 
      RowBox[{"pulse", ",", 
       RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
       RowBox[{"PulsePaddingMultiplier", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6357697199733067`*^9, 3.635769764468485*^9}, {
  3.6357698143585043`*^9, 3.635769966038134*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
          1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
          0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
          0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 12, 7, 8}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 11, 10, 9}}], 
               PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3, 3}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-3, 3}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
          2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
          2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{11, 12, 9, 10}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3, 3}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-3, 3}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]},
    {
     TemplateBox[{GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
          1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
          0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
          0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 12, 7, 8}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 11, 10, 9}}], 
               PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 0.5}, {-3.5999999999999996`, 3.5999999999999996`}},
          DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-3.5999999999999996`, 3.5999999999999996`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
          2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
          2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{11, 12, 9, 10}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 0.5}, {-3.5999999999999996`, 3.5999999999999996`}},
          DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-3.5999999999999996`, 3.5999999999999996`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]},
    {
     TemplateBox[{GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
          1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
          0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
          0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 12, 7, 8}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{13, 11, 10, 9}}], 
               PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-6, 6}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-6, 6}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
         GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
          2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
          2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{11, 12, 9, 10}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                1}}]}]}, {}, {}}, {{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-6, 6}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-6, 6}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.635769893119776*^9, 3.6357699666986437`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Vary the ",
 StyleBox["PulsePaddingMultiplier", "Input"],
 " with ",
 StyleBox["ShowDistortedPulse->True", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.635770036314735*^9, 3.6357700508773727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", 
      RowBox[{"LiftDistortionRank", "@", 
       RowBox[{"ExponentialDistortion", "[", 
        RowBox[{"0.1", ",", "5", ",", "80", ",", "0.1", ",", "0.01"}], 
        "]"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PulsePlot", "[", 
      RowBox[{"pulse", ",", 
       RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
       RowBox[{"PulsePaddingMultiplier", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6357699715410423`*^9, 3.635770011530518*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {
            0.2, 1.}, {0.30000000000000004`, 1.}, {
            0.30000000000000004`, -1.}, {0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {
            0.5, 0.}, {0.30000000000000004`, 0.}, {0.4, 0.}, {0., 0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 12, 7, 8}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 11, 10, 9}}], 
                 
                 PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 
                11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n9Q03UYB3D0uBAJT8AEjBYIAQIjppUm6SMCmmAqrDwuUARDkrrjh3bg
Sq8MvPAHAwQSJyjiOEghMIwhyNhAWgrIrzYGAuPXhBgIYxuKlfl9wn96Pnfc
7nXH8f18P8/7/RkOkbHBUYuNjIwKXvwwny/Xlexz+qNPiuHrFWXbB3nJ8H9/
e1bjGdwlWXAWcdfcRyk+e5pBxEqZCBLlE7MknMmD6o6F379GXH41vsKWo4CL
ucwqIZYNbF7lY9UL1fj3yog95hN2t+T0gyaIeWIFsY/tktPhQ6qF51USc0rK
JvKCh2CpojBu09IqYvtqk4D2y8OA28mtJrb7SV4sD1ODaxhfqnetJe7UZNlx
uH9CFe63jrglqM7feHwSmKcpCuuJH2qr+sTnp2EC30dCHHTPruiYmRbW4Wog
Pm2hcUoIn11430ZiJweL6OXnddCgZ3Z8lzhD5pv9eYkezPA8fiPmtR5S+AoN
wMWBy4iX7a1JdEmdAwGe1+/Eq/xPlf/In4NhHrOhe8RdNueSoxQGcMfzbCZO
iCosvu1lgCPMccW1EPv1Z67U5OqhBs+7ldh5ufMXiRZ6WIRtaCOOCfVc8jxb
B0KcB/WufeKsbc462DHIbLideM+t4o63JbMwifOi9uZZSKqiZiFDyhx4B/Fr
wf3GOstZeBfn2Um8w3p0S+qGGVBiYKhDOz94HM/SwHGcdxfxprP365RRanBg
joP1B7Gn/ucjBRsG4S7mgXpnaAHXzEoJhw8xS058QJX3zqu5bWCOeVEQX3Jr
iH29VwIV25kDo7Z3/tsqs/UyfIJ56ib2Gt6/scitQvwUC0d9IV8ZdFLbIM7D
vCmJr7glHEs3FYp9sPA9xJbPBdMXZA9gFPNIXfv+TZ8ArgpSsZC9xBaBER6B
Y4+AjXl9SGz455ZNTuMUtDczizrF1TJ+4BstfIV57iP+9aJLjjxQD7bMOFf0
E5/y5mdEyufgDuadutzUjP2K4zxEMNsJGyBeO/dLlnD9X/Dfd4aK+LMQm6QA
6TP4GOdB3ZPmWmnKegpF2BdqtldFmuNtAzzBeVHr0vx9k9J1EIB9GiQ24XRu
Pi7QwiWcJ7WH3HzSUz4NU9g3ar+YRLFJ0hRswXkPEY/ceLxPmjEBmdhH6jMC
v/E3tWMwgtuhFnlbp0dnquE97Osw8X4n7dbkL0fgB8wLNa9+mKXnDUEP1oU6
X1LLFYtU4IF5GiE2cbvWIN3aDyew79SRAsc3+BG90IZ5ow4tLR052dQNq/E+
GCU+cz3WdCZGDkcxj9S7QtaxHnzYBU14X1DPzqwfEH7aATaYVzWx6ro153vB
i3sX7xPqUXb5eI95K9RinqlNXMIcyjn3YRneN4+ITW+ssV8rkMEBzDu19OC2
78S+TXAT7yPqRX2O0SFvNYIx9mGMuKAy3I6/UQp7sQ/Uds+c3Hkn6qEY+0Dd
7SBL2628A/PYB2qXUj+F0+Ia2Il9GCfmuh9eyY4TQT72gfrl/4H/Aktu+Ic=

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.34382186821395, 
             2.34382186821395}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.34382186821395, 
             2.34382186821395}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {
            0.2, 2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 
            2.}, {0.4, 2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0.,
             0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{11, 12, 9, 10}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n1M1HUcB/Df76AhMLF1R0Eq40E2psgiROamfb7XMInJkhPSFpIpcqAp
pxzLMARBpiEgYGCYhyAPYQoBQRwIykHyYNA4RJ4EeX6owwtpN09Cqt8n/KfP
d2O318b4fX/fz/v9PRwORMgOiTiOy/v3R/h8uXIzUwxKoxpOSUp3jEafhf87
LnnWTdatXfbXxN3P/BKluwZBbZeo81fnENtp3J8cnBpb/v0C4rLrx8tt3afh
SrawbhC3Dr/zplSsgxr8e6XErgsnPujI0sOsv/DEcmKp7YqkT8bmlp9XSex+
o1Snks2DRW++YptFNbF9jZmv9tqfgNvJriFWbFvPizMN4BJ0sdHgUkfs/XF1
T5GNEapxv3eIuzIk1ovBCyA8rTe/gVgR5dQwdXQRdPg+GmLjhqHhW75L4IGr
idjxiI+JZOHv5ff9mXhY41i/uYFjTQZhx/eIpY2aik4FzyzxPFqI3dadCrr6
qojtxoG3EjfLtzh75InYt3hebcRg9qLEuUHExqOFDd0ndovYnuAUI2Ib8Dzb
iY0Xh1rOMBGLFI5L0UG8JtDEqdBcxG7jef9KXCxWmvJ9POOxDZ3EWRY+W1+/
ybNCnAf1exfEVcfjefb+qLBhLfF3QxZ+N/fx7AnOizpL7vlLyFaepTcKB95F
nJNgqvex45knzvMB8dq48TQLE571Y2CoT6xJnzr4O8dicN7dxK2rfZqtuznm
IByH3UNi5U+z5tN3OXYP80At98v9K7+EY+GhwuohHvfy1q5VcWwl5qWXWOL1
zab1qRwr3yEcGLU2TNNzPY5jgZinPuKoDierQ0qOPcfCUX8xnRHjH84xFeat
n3hLylTaTvkSSLHwA8TRR5IyHy4+h0nMI3VlZEzq/AsDfIWFfEScWqetCt0/
Dxsxr4PEJwOb9gx56kHbLizqV0xf+9zfdwaiMM9DxGXRqzVL+jGwFcYpeUxc
erI9ZI/rINRj3qmTPau9B0IfwKfCdoKGieM2hrbY6pvhv++MEeK5O+bxuTn1
EIDzoFZfCP7MsqMWirAv1DOP3pY6MDUYcV7Uc5J854+eVoEv9mmUOEApVbQN
/AhXcZ7U56tG422elYMe+0Y9skppHSEtA4bzHiO2989T9R4ugQzsI3Xn7r1v
vJXzPUzgdqjXaWaO3rYuhs3Y13His7H2Hov3C+E85oV6xOypWKzOhwGsC3Wn
vLr9h948cMU8TRBPBFslmzjnwmnsO3WZZ8a74V4q6MS8UdsUrCwtirgCjngf
TBLvbc2tvaa7DErMI/WuGq1srCATmvG+oPZRPpZnZ14CG8zrFLFCJ+NOq9Ph
MN4n1N37iivaVqRBHeaZem4yoyvANAWs8L6ZJnax2Z53TJoE+zHv1JtqGgs7
NOegAu8j6r5bkassYxPBFPswQxwW+AcfFJkAH2IfqAMqK+rjs89AMfaBOqy2
OSS+PxYWsA/UxsvHyrK1X8JO7MNvxPYVdw+cE0dDDvaB+uX/gf8AsUXQJQ==

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.34382186821395, 
             2.34382186821395}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-2.34382186821395, 
             2.34382186821395}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}]},
      "RowDefault"]},
    {
     TemplateBox[{OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {
            0.2, 1.}, {0.30000000000000004`, 1.}, {
            0.30000000000000004`, -1.}, {0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {
            0.5, 0.}, {0.30000000000000004`, 0.}, {0.4, 0.}, {0., 0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 12, 7, 8}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 11, 10, 9}}], 
                 
                 PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 
                11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n9Q03UYB3D0uBAJT8AEjBYIAQIjppUm6SMCmmAqrDwuUARDkrrjh3bg
Sq8MvPAHAwQSJyjiOEghMIwhyNhAWgrIrzYGAuPXhBgIYxuKlfl9wn96Pnfc
7nXH8f18P8/7/RkOkbHBUYuNjIwKXvwwny/Xlexz+qNPiuHrFWXbB3nJ8H9/
e1bjGdwlWXAWcdfcRyk+e5pBxEqZCBLlE7MknMmD6o6F379GXH41vsKWo4CL
ucwqIZYNbF7lY9UL1fj3yog95hN2t+T0gyaIeWIFsY/tktPhQ6qF51USc0rK
JvKCh2CpojBu09IqYvtqk4D2y8OA28mtJrb7SV4sD1ODaxhfqnetJe7UZNlx
uH9CFe63jrglqM7feHwSmKcpCuuJH2qr+sTnp2EC30dCHHTPruiYmRbW4Wog
Pm2hcUoIn11430ZiJweL6OXnddCgZ3Z8lzhD5pv9eYkezPA8fiPmtR5S+AoN
wMWBy4iX7a1JdEmdAwGe1+/Eq/xPlf/In4NhHrOhe8RdNueSoxQGcMfzbCZO
iCosvu1lgCPMccW1EPv1Z67U5OqhBs+7ldh5ufMXiRZ6WIRtaCOOCfVc8jxb
B0KcB/WufeKsbc462DHIbLideM+t4o63JbMwifOi9uZZSKqiZiFDyhx4B/Fr
wf3GOstZeBfn2Um8w3p0S+qGGVBiYKhDOz94HM/SwHGcdxfxprP365RRanBg
joP1B7Gn/ucjBRsG4S7mgXpnaAHXzEoJhw8xS058QJX3zqu5bWCOeVEQX3Jr
iH29VwIV25kDo7Z3/tsqs/UyfIJ56ib2Gt6/scitQvwUC0d9IV8ZdFLbIM7D
vCmJr7glHEs3FYp9sPA9xJbPBdMXZA9gFPNIXfv+TZ8ArgpSsZC9xBaBER6B
Y4+AjXl9SGz455ZNTuMUtDczizrF1TJ+4BstfIV57iP+9aJLjjxQD7bMOFf0
E5/y5mdEyufgDuadutzUjP2K4zxEMNsJGyBeO/dLlnD9X/Dfd4aK+LMQm6QA
6TP4GOdB3ZPmWmnKegpF2BdqtldFmuNtAzzBeVHr0vx9k9J1EIB9GiQ24XRu
Pi7QwiWcJ7WH3HzSUz4NU9g3ar+YRLFJ0hRswXkPEY/ceLxPmjEBmdhH6jMC
v/E3tWMwgtuhFnlbp0dnquE97Osw8X4n7dbkL0fgB8wLNa9+mKXnDUEP1oU6
X1LLFYtU4IF5GiE2cbvWIN3aDyew79SRAsc3+BG90IZ5ow4tLR052dQNq/E+
GCU+cz3WdCZGDkcxj9S7QtaxHnzYBU14X1DPzqwfEH7aATaYVzWx6ro153vB
i3sX7xPqUXb5eI95K9RinqlNXMIcyjn3YRneN4+ITW+ssV8rkMEBzDu19OC2
78S+TXAT7yPqRX2O0SFvNYIx9mGMuKAy3I6/UQp7sQ/Uds+c3Hkn6qEY+0Dd
7SBL2628A/PYB2qXUj+F0+Ia2Il9GCfmuh9eyY4TQT72gfrl/4H/Aktu+Ic=

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-4.6876437364279, 
             4.6876437364279}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-4.6876437364279, 
             4.6876437364279}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {
            0.2, 2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 
            2.}, {0.4, 2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0.,
             0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{11, 12, 9, 10}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n1M1HUcB/Df76AhMLF1R0Eq40E2psgiROamfb7XMInJkhPSFpIpcqAp
pxzLMARBpiEgYGCYhyAPYQoBQRwIykHyYNA4RJ4EeX6owwtpN09Cqt8n/KfP
d2O318b4fX/fz/v9PRwORMgOiTiOy/v3R/h8uXIzUwxKoxpOSUp3jEafhf87
LnnWTdatXfbXxN3P/BKluwZBbZeo81fnENtp3J8cnBpb/v0C4rLrx8tt3afh
SrawbhC3Dr/zplSsgxr8e6XErgsnPujI0sOsv/DEcmKp7YqkT8bmlp9XSex+
o1Snks2DRW++YptFNbF9jZmv9tqfgNvJriFWbFvPizMN4BJ0sdHgUkfs/XF1
T5GNEapxv3eIuzIk1ovBCyA8rTe/gVgR5dQwdXQRdPg+GmLjhqHhW75L4IGr
idjxiI+JZOHv5ff9mXhY41i/uYFjTQZhx/eIpY2aik4FzyzxPFqI3dadCrr6
qojtxoG3EjfLtzh75InYt3hebcRg9qLEuUHExqOFDd0ndovYnuAUI2Ib8Dzb
iY0Xh1rOMBGLFI5L0UG8JtDEqdBcxG7jef9KXCxWmvJ9POOxDZ3EWRY+W1+/
ybNCnAf1exfEVcfjefb+qLBhLfF3QxZ+N/fx7AnOizpL7vlLyFaepTcKB95F
nJNgqvex45knzvMB8dq48TQLE571Y2CoT6xJnzr4O8dicN7dxK2rfZqtuznm
IByH3UNi5U+z5tN3OXYP80At98v9K7+EY+GhwuohHvfy1q5VcWwl5qWXWOL1
zab1qRwr3yEcGLU2TNNzPY5jgZinPuKoDierQ0qOPcfCUX8xnRHjH84xFeat
n3hLylTaTvkSSLHwA8TRR5IyHy4+h0nMI3VlZEzq/AsDfIWFfEScWqetCt0/
Dxsxr4PEJwOb9gx56kHbLizqV0xf+9zfdwaiMM9DxGXRqzVL+jGwFcYpeUxc
erI9ZI/rINRj3qmTPau9B0IfwKfCdoKGieM2hrbY6pvhv++MEeK5O+bxuTn1
EIDzoFZfCP7MsqMWirAv1DOP3pY6MDUYcV7Uc5J854+eVoEv9mmUOEApVbQN
/AhXcZ7U56tG422elYMe+0Y9skppHSEtA4bzHiO2989T9R4ugQzsI3Xn7r1v
vJXzPUzgdqjXaWaO3rYuhs3Y13His7H2Hov3C+E85oV6xOypWKzOhwGsC3Wn
vLr9h948cMU8TRBPBFslmzjnwmnsO3WZZ8a74V4q6MS8UdsUrCwtirgCjngf
TBLvbc2tvaa7DErMI/WuGq1srCATmvG+oPZRPpZnZ14CG8zrFLFCJ+NOq9Ph
MN4n1N37iivaVqRBHeaZem4yoyvANAWs8L6ZJnax2Z53TJoE+zHv1JtqGgs7
NOegAu8j6r5bkassYxPBFPswQxwW+AcfFJkAH2IfqAMqK+rjs89AMfaBOqy2
OSS+PxYWsA/UxsvHyrK1X8JO7MNvxPYVdw+cE0dDDvaB+uX/gf8AsUXQJQ==

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-4.6876437364279, 
             4.6876437364279}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-4.6876437364279, 
             4.6876437364279}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}]},
      "RowDefault"]},
    {
     TemplateBox[{OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {
            0.2, 1.}, {0.30000000000000004`, 1.}, {
            0.30000000000000004`, -1.}, {0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {
            0.5, 0.}, {0.30000000000000004`, 0.}, {0.4, 0.}, {0., 0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 12, 7, 8}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{13, 11, 10, 9}}], 
                 
                 PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 
                11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n9Q03UYB3D0uBAJT8AEjBYIAQIjppUm6SMCmmAqrDwuUARDkrrjh3bg
Sq8MvPAHAwQSJyjiOEghMIwhyNhAWgrIrzYGAuPXhBgIYxuKlfl9wn96Pnfc
7nXH8f18P8/7/RkOkbHBUYuNjIwKXvwwny/Xlexz+qNPiuHrFWXbB3nJ8H9/
e1bjGdwlWXAWcdfcRyk+e5pBxEqZCBLlE7MknMmD6o6F379GXH41vsKWo4CL
ucwqIZYNbF7lY9UL1fj3yog95hN2t+T0gyaIeWIFsY/tktPhQ6qF51USc0rK
JvKCh2CpojBu09IqYvtqk4D2y8OA28mtJrb7SV4sD1ODaxhfqnetJe7UZNlx
uH9CFe63jrglqM7feHwSmKcpCuuJH2qr+sTnp2EC30dCHHTPruiYmRbW4Wog
Pm2hcUoIn11430ZiJweL6OXnddCgZ3Z8lzhD5pv9eYkezPA8fiPmtR5S+AoN
wMWBy4iX7a1JdEmdAwGe1+/Eq/xPlf/In4NhHrOhe8RdNueSoxQGcMfzbCZO
iCosvu1lgCPMccW1EPv1Z67U5OqhBs+7ldh5ufMXiRZ6WIRtaCOOCfVc8jxb
B0KcB/WufeKsbc462DHIbLideM+t4o63JbMwifOi9uZZSKqiZiFDyhx4B/Fr
wf3GOstZeBfn2Um8w3p0S+qGGVBiYKhDOz94HM/SwHGcdxfxprP365RRanBg
joP1B7Gn/ucjBRsG4S7mgXpnaAHXzEoJhw8xS058QJX3zqu5bWCOeVEQX3Jr
iH29VwIV25kDo7Z3/tsqs/UyfIJ56ib2Gt6/scitQvwUC0d9IV8ZdFLbIM7D
vCmJr7glHEs3FYp9sPA9xJbPBdMXZA9gFPNIXfv+TZ8ArgpSsZC9xBaBER6B
Y4+AjXl9SGz455ZNTuMUtDczizrF1TJ+4BstfIV57iP+9aJLjjxQD7bMOFf0
E5/y5mdEyufgDuadutzUjP2K4zxEMNsJGyBeO/dLlnD9X/Dfd4aK+LMQm6QA
6TP4GOdB3ZPmWmnKegpF2BdqtldFmuNtAzzBeVHr0vx9k9J1EIB9GiQ24XRu
Pi7QwiWcJ7WH3HzSUz4NU9g3ar+YRLFJ0hRswXkPEY/ceLxPmjEBmdhH6jMC
v/E3tWMwgtuhFnlbp0dnquE97Osw8X4n7dbkL0fgB8wLNa9+mKXnDUEP1oU6
X1LLFYtU4IF5GiE2cbvWIN3aDyew79SRAsc3+BG90IZ5ow4tLR052dQNq/E+
GCU+cz3WdCZGDkcxj9S7QtaxHnzYBU14X1DPzqwfEH7aATaYVzWx6ro153vB
i3sX7xPqUXb5eI95K9RinqlNXMIcyjn3YRneN4+ITW+ssV8rkMEBzDu19OC2
78S+TXAT7yPqRX2O0SFvNYIx9mGMuKAy3I6/UQp7sQ/Uds+c3Hkn6qEY+0Dd
7SBL2628A/PYB2qXUj+F0+Ia2Il9GCfmuh9eyY4TQT72gfrl/4H/Aktu+Ic=

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-9.3752874728558, 
             9.3752874728558}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-9.3752874728558, 
             9.3752874728558}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}],OverlayBox[{
         GraphicsBox[{{}, 
           
           GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {
            0.2, 2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 
            2.}, {0.4, 2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0.,
             0.}}, {{{
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 PolygonBox[{{11, 12, 9, 10}}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroupBox[{
                 
                 PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
                  1}}]}]}, {}, {}}, {{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.019444444444444445`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, DisplayFunction -> 
           Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, 
             RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-3, 3}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], 
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.016666666666666666`], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              LineBox[CompressedData["
1:eJxl1n1M1HUcB/Df76AhMLF1R0Eq40E2psgiROamfb7XMInJkhPSFpIpcqAp
pxzLMARBpiEgYGCYhyAPYQoBQRwIykHyYNA4RJ4EeX6owwtpN09Cqt8n/KfP
d2O318b4fX/fz/v9PRwORMgOiTiOy/v3R/h8uXIzUwxKoxpOSUp3jEafhf87
LnnWTdatXfbXxN3P/BKluwZBbZeo81fnENtp3J8cnBpb/v0C4rLrx8tt3afh
SrawbhC3Dr/zplSsgxr8e6XErgsnPujI0sOsv/DEcmKp7YqkT8bmlp9XSex+
o1Snks2DRW++YptFNbF9jZmv9tqfgNvJriFWbFvPizMN4BJ0sdHgUkfs/XF1
T5GNEapxv3eIuzIk1ovBCyA8rTe/gVgR5dQwdXQRdPg+GmLjhqHhW75L4IGr
idjxiI+JZOHv5ff9mXhY41i/uYFjTQZhx/eIpY2aik4FzyzxPFqI3dadCrr6
qojtxoG3EjfLtzh75InYt3hebcRg9qLEuUHExqOFDd0ndovYnuAUI2Ib8Dzb
iY0Xh1rOMBGLFI5L0UG8JtDEqdBcxG7jef9KXCxWmvJ9POOxDZ3EWRY+W1+/
ybNCnAf1exfEVcfjefb+qLBhLfF3QxZ+N/fx7AnOizpL7vlLyFaepTcKB95F
nJNgqvex45knzvMB8dq48TQLE571Y2CoT6xJnzr4O8dicN7dxK2rfZqtuznm
IByH3UNi5U+z5tN3OXYP80At98v9K7+EY+GhwuohHvfy1q5VcWwl5qWXWOL1
zab1qRwr3yEcGLU2TNNzPY5jgZinPuKoDierQ0qOPcfCUX8xnRHjH84xFeat
n3hLylTaTvkSSLHwA8TRR5IyHy4+h0nMI3VlZEzq/AsDfIWFfEScWqetCt0/
Dxsxr4PEJwOb9gx56kHbLizqV0xf+9zfdwaiMM9DxGXRqzVL+jGwFcYpeUxc
erI9ZI/rINRj3qmTPau9B0IfwKfCdoKGieM2hrbY6pvhv++MEeK5O+bxuTn1
EIDzoFZfCP7MsqMWirAv1DOP3pY6MDUYcV7Uc5J854+eVoEv9mmUOEApVbQN
/AhXcZ7U56tG422elYMe+0Y9skppHSEtA4bzHiO2989T9R4ugQzsI3Xn7r1v
vJXzPUzgdqjXaWaO3rYuhs3Y13His7H2Hov3C+E85oV6xOypWKzOhwGsC3Wn
vLr9h948cMU8TRBPBFslmzjnwmnsO3WZZ8a74V4q6MS8UdsUrCwtirgCjngf
TBLvbc2tvaa7DErMI/WuGq1srCATmvG+oPZRPpZnZ14CG8zrFLFCJ+NOq9Ph
MN4n1N37iivaVqRBHeaZem4yoyvANAWs8L6ZJnax2Z53TJoE+zHv1JtqGgs7
NOegAu8j6r5bkassYxPBFPswQxwW+AcfFJkAH2IfqAMqK+rjs89AMfaBOqy2
OSS+PxYWsA/UxsvHyrK1X8JO7MNvxPYVdw+cE0dDDvaB+uX/gf8AsUXQJQ==

               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 0.8000000000000005}, {-9.3752874728558, 
             9.3752874728558}}, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{False, True}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameStyle -> {Automatic, Automatic, Automatic, 
             RGBColor[0.922526, 0.385626, 0.209179]}, 
           FrameTicks -> {{None, All}, {None, None}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
           ImageSize -> 200, Method -> {}, 
           PlotRange -> {{0, 0.8000000000000005}, {-9.3752874728558, 
             9.3752874728558}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}]}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.635769981778419*^9, 3.6357700121391363`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 4", "Subsubsection",
 CellChangeTimes->{{3.63577008321192*^9, 3.6357700857077227`*^9}}],

Cell[TextData[{
 "Various values of ",
 StyleBox["PulseLayout", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6357702202358227`*^9, 3.635770228852669*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "1", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", 
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2", ",", 
          RowBox[{"-", "5"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}], ",", "1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.635770109741041*^9, 3.635770150016801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PulseLayout", "\[Rule]", "Row"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6357701539826508`*^9, 3.635770157048945*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
      1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
      0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
      0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 12, 7, 8}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
      2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{11, 12, 9, 10}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
            1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 3.}, {0., 3.}, {0.1, 1.}, {0.2, 1.}, {
      0.2, -1.}, {0.30000000000000004`, -1.}, {0.30000000000000004`, -5.}, {
      0.4, -5.}, {0.4, 1.}, {0.5, 1.}, {0.5, 0.}, {0.2, 0.}, {0.4, 0.}, {0., 
      0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 12, 5, 6, 7, 8}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 12, 5, 6, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 4.}, {0., 4.}, {0.1, -2.}, {0.2, -2.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 1.}, {0.4, 
      1.}, {0.4, -2.}, {0.5, -2.}, {0.5, 0.}, {0.1, 0.}, {0.2, 0.}, {0.4, 
      0.}, {0., 0.}}, {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{13, 12, 3, 4}, {11, 14, 9, 10}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{2, 15, 12, 1}}], 
           PolygonBox[{{13, 14, 8, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 12, 3, 4, 13, 5, 6, 7, 8, 14, 9, 10, 11}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, Method -> {}, 
     PlotRange -> {{0, 0.5}, {-5.300000000000001, 5.300000000000001}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.635770165475712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PulseLayout", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.635770196769701*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{11, 12, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[
            PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
             1}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 3.}, {0., 3.}, {0.1, 1.}, {0.2, 1.}, {
        0.2, -1.}, {0.30000000000000004`, -1.}, {0.30000000000000004`, -5.}, {
        0.4, -5.}, {0.4, 1.}, {0.5, 1.}, {0.5, 0.}, {0.2, 0.}, {0.4, 0.}, {0.,
         0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 5, 6, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 12, 5, 6, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 4.}, {0., 4.}, {0.1, -2.}, {0.2, -2.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 1.}, {0.4, 
        1.}, {0.4, -2.}, {0.5, -2.}, {0.5, 0.}, {0.1, 0.}, {0.2, 0.}, {0.4, 
        0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{13, 12, 3, 4}, {11, 14, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{2, 15, 12, 1}}], 
             PolygonBox[{{13, 14, 8, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 12, 3, 4, 13, 5, 6, 7, 8, 14, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.63577019708915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PulseLayout", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.635770167339096*^9, 3.6357701844009027`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{11, 12, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[
            PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
             1}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 3.}, {0., 3.}, {0.1, 1.}, {0.2, 1.}, {
        0.2, -1.}, {0.30000000000000004`, -1.}, {0.30000000000000004`, -5.}, {
        0.4, -5.}, {0.4, 1.}, {0.5, 1.}, {0.5, 0.}, {0.2, 0.}, {0.4, 0.}, {0.,
         0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 5, 6, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 12, 5, 6, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 4.}, {0., 4.}, {0.1, -2.}, {0.2, -2.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 1.}, {0.4, 
        1.}, {0.4, -2.}, {0.5, -2.}, {0.5, 0.}, {0.1, 0.}, {0.2, 0.}, {0.4, 
        0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{13, 12, 3, 4}, {11, 14, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{2, 15, 12, 1}}], 
             PolygonBox[{{13, 14, 8, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 12, 3, 4, 13, 5, 6, 7, 8, 14, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6357701744699087`*^9, 3.6357701847165203`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PulseLayout", "\[Rule]", "Column"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6357702021459837`*^9, 3.63577020271341*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{11, 12, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], 
           GraphicsGroupBox[
            PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
             1}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 3.}, {0., 3.}, {0.1, 1.}, {0.2, 1.}, {
        0.2, -1.}, {0.30000000000000004`, -1.}, {0.30000000000000004`, -5.}, {
        0.4, -5.}, {0.4, 1.}, {0.5, 1.}, {0.5, 0.}, {0.2, 0.}, {0.4, 0.}, {0.,
         0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{13, 12, 5, 6, 7, 8}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 3, 4, 12, 5, 6, 7, 8, 13, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 4.}, {0., 4.}, {0.1, -2.}, {0.2, -2.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 1.}, {0.4, 
        1.}, {0.4, -2.}, {0.5, -2.}, {0.5, 0.}, {0.1, 0.}, {0.2, 0.}, {0.4, 
        0.}, {0., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{13, 12, 3, 4}, {11, 14, 9, 10}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{2, 15, 12, 1}}], 
             PolygonBox[{{13, 14, 8, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{2, 1, 12, 3, 4, 13, 5, 6, 7, 8, 14, 9, 10, 11}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{},
      PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.635770203195623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"PulseLayout", "\[Rule]", "List"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.635770210978417*^9, 3.635770211278359*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
      1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
      0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
      0.}, {0.4, 0.}, {0., 0.}}, {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[{{13, 12, 7, 8}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.019444444444444445`], AbsoluteThickness[1.6], 
         LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->200,
    Method->{},
    PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
      2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[{{11, 12, 9, 10}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
           1}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.019444444444444445`], AbsoluteThickness[1.6], 
         LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->200,
    Method->{},
    PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 3.}, {0., 3.}, {0.1, 1.}, {0.2, 1.}, {
      0.2, -1.}, {0.30000000000000004`, -1.}, {0.30000000000000004`, -5.}, {
      0.4, -5.}, {0.4, 1.}, {0.5, 1.}, {0.5, 0.}, {0.2, 0.}, {0.4, 0.}, {0., 
      0.}}, {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[{{13, 12, 5, 6, 7, 8}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[{{13, 11, 10, 9}}], 
           PolygonBox[{{2, 14, 12, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.019444444444444445`], AbsoluteThickness[1.6], 
         LineBox[{2, 1, 3, 4, 12, 5, 6, 7, 8, 13, 9, 10, 11}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->200,
    Method->{},
    PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.1, 4.}, {0., 4.}, {0.1, -2.}, {0.2, -2.}, {0.2, 
      2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 1.}, {0.4, 
      1.}, {0.4, -2.}, {0.5, -2.}, {0.5, 0.}, {0.1, 0.}, {0.2, 0.}, {0.4, 
      0.}, {0., 0.}}, {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[{{13, 12, 3, 4}, {11, 14, 9, 10}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[{{2, 15, 12, 1}}], 
           PolygonBox[{{13, 14, 8, 7, 6, 5}}]}]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.019444444444444445`], AbsoluteThickness[1.6], 
         LineBox[{2, 1, 12, 3, 4, 13, 5, 6, 7, 8, 14, 9, 10, 11}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->200,
    Method->{},
    PlotRange->{{0, 0.5}, {-5.300000000000001, 5.300000000000001}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.63577021171523*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 5", "Subsubsection",
 CellChangeTimes->{{3.635770248307951*^9, 3.635770249940708*^9}}],

Cell[TextData[{
 "In this example we demonstrate possibilities for ",
 StyleBox["ChannelMapping", "Input"],
 " when there are more output channels than input channels. The default \
behaviour is to spread out the output channels over the input channels as \
evenly as possible."
}], "Text",
 CellChangeTimes->{{3.635771281268146*^9, 3.63577135719757*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"Pulse", "[", 
    RowBox[{
     RowBox[{"TimeSteps", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.1"}], 
       "}"}]}], ",", 
     RowBox[{"Pulse", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"DistortionOperator", "\[Rule]", 
      RowBox[{"VariableChangeDistortion", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"Abs", "[", "a", "]"}], "]"}], ",", 
          RowBox[{"b", "+", "1"}], ",", 
          RowBox[{"Sin", "[", "a", "]"}], ",", 
          RowBox[{"b", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.635770659388298*^9, 3.635770745523932*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", "\"\<2\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<3\>\"", ",", "\"\<4\>\""}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6357707179003353`*^9, 3.635770731228043*^9}, {
  3.6357709568128633`*^9, 3.6357709880331917`*^9}, {3.635771048017002*^9, 
  3.635771085014065*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 12, 7, 8}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.4142135623730951`}, {0.2, 
             1.4142135623730951`}, {0.2, 1.}, {0.30000000000000004`, 1.}, {
             0.30000000000000004`, 1.}, {0.4, 1.}, {0.4, 
             1.7320508075688772`}, {0.5, 1.7320508075688772`}, {0.5, 0.}}]}, {
           
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{{0., 3.}, {0.1, 3.}, {0.1, 4.}, {0.2, 4.}, {0.2, 3.}, {
             0.30000000000000004`, 3.}, {0.30000000000000004`, 3.}, {0.4, 
             3.}, {0.4, 0.}, {0.5, 0.}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"1\"", "\"2\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{11, 12, 9, 10}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
              1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 0.8414709848078965}, {0.1, 0.8414709848078965}, {
             0.1, 0.9092974268256817}, {0.2, 0.9092974268256817}, {0.2, 
             0.8414709848078965}, {0.30000000000000004`, 
             0.8414709848078965}, {
             0.30000000000000004`, -0.8414709848078965}, {
             0.4, -0.8414709848078965}, {0.4, 0.1411200080598672}, {0.5, 
             0.1411200080598672}, {0.5, 0.}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.5}, {0.2, 1.5}, {0.2, 1.}, {
             0.30000000000000004`, 1.}, {0.30000000000000004`, 1.}, {0.4, 
             1.}, {0.4, -0.5}, {0.5, -0.5}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"3\"", "\"4\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.635771085584016*^9, 3.635771234242256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}], ",", 
   RowBox[{"ChannelMapping", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", "\"\<3\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<2\>\"", ",", "\"\<4\>\""}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.635771105143506*^9, 3.635771121425365*^9}, {
  3.635771246522399*^9, 3.635771248529121*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 12, 7, 8}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.4142135623730951`}, {0.2, 
             1.4142135623730951`}, {0.2, 1.}, {0.30000000000000004`, 1.}, {
             0.30000000000000004`, 1.}, {0.4, 1.}, {0.4, 
             1.7320508075688772`}, {0.5, 1.7320508075688772`}, {0.5, 0.}}]}, {
           
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{{0., 0.8414709848078965}, {0.1, 0.8414709848078965}, {
             0.1, 0.9092974268256817}, {0.2, 0.9092974268256817}, {0.2, 
             0.8414709848078965}, {0.30000000000000004`, 
             0.8414709848078965}, {
             0.30000000000000004`, -0.8414709848078965}, {
             0.4, -0.8414709848078965}, {0.4, 0.1411200080598672}, {0.5, 
             0.1411200080598672}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"1\"", "\"3\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{11, 12, 9, 10}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
              1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 3.}, {0.1, 3.}, {0.1, 4.}, {0.2, 4.}, {0.2, 3.}, {
             0.30000000000000004`, 3.}, {0.30000000000000004`, 3.}, {0.4, 
             3.}, {0.4, 0.}, {0.5, 0.}, {0.5, 0.}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.5}, {0.2, 1.5}, {0.2, 1.}, {
             0.30000000000000004`, 1.}, {0.30000000000000004`, 1.}, {0.4, 
             1.}, {0.4, -0.5}, {0.5, -0.5}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"2\"", "\"4\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.635771122007218*^9, {3.635771235940344*^9, 3.6357712523971043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulsePlot", "[", 
  RowBox[{"pulse", ",", 
   RowBox[{"ShowDistortedPulse", "\[Rule]", "True"}], ",", 
   RowBox[{"ChannelMapping", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\""}], "}"}], ",", 
      
      RowBox[{"{", "\"\<4\>\"", "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6357712618444233`*^9, 3.635771273496523*^9}}],

Cell[BoxData[
 TemplateBox[{OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 1.}, {0., 1.}, {0.1, 2.}, {0.2, 2.}, {0.2, 
        1.}, {0.30000000000000004`, 1.}, {0.30000000000000004`, -1.}, {
        0.4, -1.}, {0.4, 3.}, {0.5, 3.}, {0.5, 0.}, {0.30000000000000004`, 
        0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 12, 7, 8}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{13, 11, 10, 9}}], 
             PolygonBox[{{2, 14, 12, 6, 5, 4, 3, 1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 12, 7, 8, 13, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.4142135623730951`}, {0.2, 
             1.4142135623730951`}, {0.2, 1.}, {0.30000000000000004`, 1.}, {
             0.30000000000000004`, 1.}, {0.4, 1.}, {0.4, 
             1.7320508075688772`}, {0.5, 1.7320508075688772`}, {0.5, 0.}}]}, {
           
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            
            LineBox[{{0., 3.}, {0.1, 3.}, {0.1, 4.}, {0.2, 4.}, {0.2, 3.}, {
             0.30000000000000004`, 3.}, {0.30000000000000004`, 3.}, {0.4, 
             3.}, {0.4, 0.}, {0.5, 0.}, {0.5, 0.}}]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.528488, 0.470624, 0.701351]], 
            
            LineBox[{{0., 0.8414709848078965}, {0.1, 0.8414709848078965}, {
             0.1, 0.9092974268256817}, {0.2, 0.9092974268256817}, {0.2, 
             0.8414709848078965}, {0.30000000000000004`, 
             0.8414709848078965}, {
             0.30000000000000004`, -0.8414709848078965}, {
             0.4, -0.8414709848078965}, {0.4, 0.1411200080598672}, {0.5, 
             0.1411200080598672}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"1\"", "\"2\"", "\"3\""}, "PointLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}],OverlayBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0.1, 2.}, {0., 2.}, {0.1, 3.}, {0.2, 3.}, {0.2, 
        2.}, {0.30000000000000004`, 2.}, {0.30000000000000004`, 2.}, {0.4, 
        2.}, {0.4, -1.}, {0.5, -1.}, {0.5, 0.}, {0.4, 0.}, {0., 0.}}, {{{
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             PolygonBox[{{11, 12, 9, 10}}]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.2]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{2, 13, 12, 8, 7, 6, 5, 4, 3, 
              1}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11}]}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, False}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {Automatic, 
         RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
       ImageSize -> 400, Method -> {}, PlotRange -> {{0, 0.5}, {-3.18, 3.18}},
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.019444444444444445`], 
             AbsoluteThickness[1.6], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            
            LineBox[{{0., 1.}, {0.1, 1.}, {0.1, 1.5}, {0.2, 1.5}, {0.2, 1.}, {
             0.30000000000000004`, 1.}, {0.30000000000000004`, 1.}, {0.4, 
             1.}, {0.4, -0.5}, {0.5, -0.5}, {0.5, 0.}}]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, True}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameStyle -> {Automatic, Automatic, Automatic, 
           RGBColor[0.922526, 0.385626, 0.209179]}, 
         FrameTicks -> {{None, All}, {None, None}}, GridLines -> {None, None},
          GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImagePadding -> {{40, 40}, {40, 10}}, 
         ImageSize -> 400, Method -> {}, 
         PlotRange -> {{0, 0.5}, {-4.24, 4.24}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"4\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended", DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
      True]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.635771274286134*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PulseFourierPlot", "Subsection",
 CellChangeTimes->{{3.635606389420212*^9, 3.635606394986574*^9}}],

Cell["PulseFourierPlot is blah", "Text",
 CellChangeTimes->{{3.635678252162657*^9, 3.6356782569372053`*^9}},
 CellTags->"PulseFourierPlot::usage"]
}, Open  ]],

Cell["RobustnessPlot", "Subsection",
 CellChangeTimes->{{3.6356063985817823`*^9, 3.6356064006755943`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exporters", "Section",
 CellChangeTimes->{{3.634482821775557*^9, 3.634482823301466*^9}}],

Cell[CellGroupData[{

Cell["ExportJCAMP", "Subsection",
 CellChangeTimes->{{3.634570140286075*^9, 3.634570142588636*^9}}],

Cell[TextData[{
 StyleBox["ExportJCAMP[", "Input"],
 StyleBox["filename", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " exports the ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input"],
 " in the JCAMP format as readable by Bruker NMR spectrometers. The ",
 StyleBox["pulse", "Input"],
 " should have two control fields, x and y.\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["JCAMPTitle", "Input"],
 ", ",
 StyleBox["JCAMPDX", "Input"],
 ", ",
 StyleBox["JCAMPDataType", "Input"],
 ", ",
 StyleBox["JCAMPOrigin", "Input"],
 ", ",
 StyleBox["JCAMPUser", "Input"],
 ", ",
 StyleBox["JCAMPDate", "Input"],
 ", ",
 StyleBox["JCAMPTime", "Input"],
 ", ",
 StyleBox["JCAMPShapeExMode", "Input"],
 ", ",
 StyleBox["JCAMPShapeToTrot", "Input"],
 ", ",
 StyleBox["JCAMPShapeBWFac", "Input"],
 ", ",
 StyleBox["JCAMPShapeIntegFac", "Input"],
 ", ",
 StyleBox["JCAMPShapeMode", "Input"],
 ", ",
 StyleBox["JCAMPCalibrationFactor", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6345701494794273`*^9, 3.634570202797042*^9}, {
  3.634570239140877*^9, 3.6345702679965878`*^9}, {3.634570356213738*^9, 
  3.6345705858789473`*^9}},
 CellTags->"ExportJCAMP::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.6345702214926558`*^9, 3.6345702223804607`*^9}}],

Cell[BoxData[GridBox[{
   {
    StyleBox["Option", "Text",
     FontWeight->Bold], 
    StyleBox[
     RowBox[{"Default", " ", "Value"}], "Text",
     FontWeight->Bold], 
    StyleBox["Description", "Text",
     FontWeight->Bold]},
   {"JCAMPTitle", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPTitle", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", 
       " ", "with", " ", "default", " ", "value", " ", "Automatic"}], ",", 
      " ", 
      RowBox[{
      "which", " ", "sets", " ", "the", " ", "title", " ", "to", " ", "the", 
       " ", 
       RowBox[{"filename", ".", "Otherwise"}], " ", "it", " ", "should", " ", 
       "be", " ", "a", " ", 
       RowBox[{"string", "."}]}]}], "Text"]},
   {"JCAMPDX", "\"\<5.00 Bruker JCAMP library\>\"", 
    StyleBox[
     RowBox[{
     "JCAMPDX", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", " ", 
      "with", " ", "default", " ", 
      RowBox[{"value", " ", "'"}], "5.00", " ", "Bruker", " ", "JCAMP", " ", 
      RowBox[{
       RowBox[{"library", "'"}], "."}]}], "Text"]},
   {"JCAMPDataType", "\"\<Shape Data\>\"", 
    StyleBox[
     RowBox[{
     "JCAMPDataType", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option",
       " ", "with", " ", "default", " ", 
      RowBox[{"value", " ", "'"}], "Shape", " ", 
      RowBox[{
       RowBox[{"Data", "'"}], "."}]}], "Text"]},
   {"JCAMPOrigin", "\"\<Quantum-Utils Mathematica GRAPE\>\"", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPOrigin", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", 
       " ", "with", " ", "default", " ", 
       RowBox[{"value", " ", "'"}], "Quantum"}], "-", 
      RowBox[{"Utils", " ", "Mathematica", " ", 
       RowBox[{
        RowBox[{"GRAPE", "'"}], "."}]}]}], "Text"]},
   {"JCAMPUser", "\"\<nmruser\>\"", 
    StyleBox[
     RowBox[{
     "JCAMPUser", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", 
      " ", "with", " ", "default", " ", 
      RowBox[{"value", " ", "'"}], 
      RowBox[{
       RowBox[{"nmruser", "'"}], ".", " ", "Should"}], " ", "be", " ", "your",
       " ", "username", " ", "on", " ", "the", " ", 
      RowBox[{"spectrometer", "."}]}], "Text"]},
   {"JCAMPDate", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPDate", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", 
       " ", "with", " ", "default", " ", "value", " ", "Automatic"}], ",", 
      " ", 
      RowBox[{"which", " ", "sets", " ", "the", " ", "date", " ", "to", " ", 
       RowBox[{"today", "."}]}]}], "Text"]},
   {"JCAMPTime", "Automatic", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPTime", " ", "is", " ", "an", " ", "ExportJCAMP", " ", "option", 
       " ", "with", " ", "default", " ", "value", " ", "Automatic"}], ",", 
      " ", 
      RowBox[{"which", " ", "uses", " ", "the", " ", "current", " ", 
       RowBox[{"time", "."}]}]}], "Text"]},
   {"JCAMPShapeExMode", "\"\<None\>\"", 
    StyleBox[
     RowBox[{
     "JCAMPShapeExMode", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
      "option", " ", "with", " ", "default", " ", 
      RowBox[{"value", " ", "'"}], 
      RowBox[{
       RowBox[{"None", "'"}], "."}]}], "Text"]},
   {"JCAMPShapeToTrot", "\"\<9.000000e+01\>\"", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPShapeToTrot", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
       "option", " ", "with", " ", "default", " ", 
       RowBox[{"value", " ", "'"}], "9.000000", "e"}], "+", 
      RowBox[{
       RowBox[{"01", "'"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"string", ",", " ", 
          RowBox[{"not", " ", "number"}]}], ")"}], "."}]}]}], "Text"]},
   {"JCAMPShapeBWFac", "\"\<1.000000e+00\>\"", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPShapeBWFac", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
       "option", " ", "with", " ", "default", " ", 
       RowBox[{"value", " ", "'"}], "1.000000", "e"}], "+", 
      RowBox[{
       RowBox[{"00", "'"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"string", ",", " ", 
          RowBox[{"not", " ", "number"}]}], ")"}], "."}]}]}], "Text"]},
   {"JCAMPShapeIntegFac", "\"\<1.000000e+00\>\"", 
    StyleBox[
     RowBox[{
      RowBox[{
      "JCAMPShapeIntegFac", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
       "option", " ", "with", " ", "default", " ", 
       RowBox[{"value", " ", "'"}], "1.000000", "e"}], "+", 
      RowBox[{
       RowBox[{"00", "'"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"string", ",", " ", 
          RowBox[{"not", " ", "number"}]}], ")"}], "."}]}]}], "Text"]},
   {"JCAMPShapeMode", "\"\<1\>\"", 
    StyleBox[
     RowBox[{
     "JCAMPShapeMode", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
      "option", " ", "with", " ", "default", " ", 
      RowBox[{"value", " ", "'"}], 
      RowBox[{"1", "'"}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"string", ",", " ", 
         RowBox[{"not", " ", "number"}]}], ")"}], "."}]}], "Text"]},
   {"JCAMPCalibrationFactor", "1", 
    StyleBox[
     RowBox[{
     "JCAMPCalibrationFactor", " ", "is", " ", "an", " ", "ExportJCAMP", " ", 
      "option", " ", "with", " ", "default", " ", "being", " ", "the", " ", 
      "integer", " ", "1.", " ", "This", " ", "is", " ", "the", " ", "number",
       " ", "the", " ", "amplitudes", " ", "are", " ", "divided", " ", "by", 
      " ", "before", " ", "writing", " ", "to", " ", "the", " ", "JCAMP", " ", 
      RowBox[{"file", "."}]}], "Text"]}
  },
  GridBoxAlignment->{"Columns" -> {{Left}}},
  GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {Automatic, Automatic, {
       Scaled[0.5]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
    "RowsIndexed" -> {}}]], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.634570346096311*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExportSHP", "Subsection",
 CellChangeTimes->{{3.6345706490642147`*^9, 3.634570650888245*^9}}],

Cell[TextData[{
 StyleBox["ExportSHP[", "Input"],
 StyleBox["filename", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["scalePower", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["digits", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " exports a ",
 StyleBox["Pulse", "Input"],
 " object ",
 StyleBox["pulse", "Input"],
 " to a ",
 StyleBox[".shp",
  FontSlant->"Italic"],
 " file. This file has two columns, amplitude and phase, where amplitude is \
between 0 and 1 and phase is between 0 and 1 (1 refers to 1 circle, i.e. 2\
\[Pi] in radians). The input pulse is assumed to have two control lines, x \
and y. The arguments ",
 StyleBox["scalePower", "Input"],
 " and ",
 StyleBox["digits", "Input"],
 " are optional. The default value for ",
 StyleBox["scalePower", "Input"],
 " is ",
 StyleBox["Automatic", "Input"],
 ", which divides the amplitudes by the maximum value in ",
 StyleBox["AmplitudeRange", "Input"],
 ". If ",
 StyleBox["scalePower", "Input"],
 " is a number, the amplitudes are normalized by this. The argument ",
 StyleBox["digits", "Input"],
 " sets the number of digits written to file for each amplitude and phase. \
The default is ",
 StyleBox["6", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634570656154717*^9, 3.634570690249646*^9}, {
  3.634570734834426*^9, 3.634570758737123*^9}, {3.63457078875309*^9, 
  3.634571005832945*^9}},
 CellTags->"ExportSHP::usage"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1631, 1026},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AmplitudeRange::usage"->{
  Cell[58626, 1673, 396, 12, 32, "Text",
   CellTags->"AmplitudeRange::usage"]},
 "ChannelMapping::usage"->{
  Cell[380192, 8901, 1018, 20, 92, "Text",
   CellTags->"ChannelMapping::usage"]},
 "CoherentSubspaces::usage"->{
  Cell[71255, 2094, 3331, 101, 238, "Text",
   CellTags->"CoherentSubspaces::usage"]},
 "ComposeDistortions::usage"->{
  Cell[81908, 2427, 983, 32, 51, "Text",
   CellTags->"ComposeDistortions::usage"]},
 "CompositePulseDistortion::usage"->{
  Cell[354701, 8305, 1712, 50, 133, "Text",
   CellTags->"CompositePulseDistortion::usage"]},
 "ControlHamiltonians::usage"->{
  Cell[57417, 1631, 407, 12, 32, "Text",
   CellTags->"ControlHamiltonians::usage"]},
 "ControlLimitPolicy::usage"->{
  Cell[45017, 1228, 706, 18, 53, "Text",
   CellTags->"ControlLimitPolicy::usage"]},
 "ConvolutionDistortion::usage"->{
  Cell[122633, 3637, 3535, 114, 165, "Text",
   CellTags->"ConvolutionDistortion::usage"]},
 "DEDistortion::usage"->{
  Cell[297878, 6996, 4556, 149, 379, "Text",
   CellTags->"DEDistortion::usage"]},
 "DerivativeMask::usage"->{
  Cell[42807, 1164, 428, 10, 32, "Text",
   CellTags->"DerivativeMask::usage"]},
 "DESolverArgs::usage"->{
  Cell[303036, 7168, 631, 18, 53, "Text",
   CellTags->"DESolverArgs::usage"]},
 "DESolver::usage"->{
  Cell[302560, 7152, 473, 14, 32, "Text",
   CellTags->"DESolver::usage"]},
 "DistortionOperator::usage"->{
  Cell[74897, 2208, 5050, 158, 337, "Text",
   CellTags->"DistortionOperator::usage"]},
 "DistributeOption::usage"->{
  Cell[383676, 8993, 767, 19, 52, "Text",
   CellTags->"DistributeOption::usage"]},
 "ExitMessage::usage"->{
  Cell[59263, 1695, 381, 11, 32, "Text",
   CellTags->"ExitMessage::usage"]},
 "ExponentialDistortion::usage"->{
  Cell[126171, 3753, 2496, 85, 133, "Text",
   CellTags->"ExponentialDistortion::usage"]},
 "ExportJCAMP::usage"->{
  Cell[595480, 13387, 1408, 52, 112, "Text",
   CellTags->"ExportJCAMP::usage"]},
 "ExportSHP::usage"->{
  Cell[603058, 13606, 1652, 51, 74, "Text",
   CellTags->"ExportSHP::usage"]},
 "FindPulse::usage"->{
  Cell[5200, 131, 5941, 168, 666, "Text",
   CellTags->"FindPulse::usage"]},
 "ForceDistortionDependence::usage"->{
  Cell[40185, 1078, 870, 22, 53, "Text",
   CellTags->"ForceDistortionDependence::usage"]},
 "FrequencySpaceDistortion::usage"->{
  Cell[315234, 7460, 3650, 125, 98, "Text",
   CellTags->"FrequencySpaceDistortion::usage"]},
 "IdentityDistortion::usage"->{
  Cell[111787, 3282, 495, 14, 32, "Text",
   CellTags->"IdentityDistortion::usage"]},
 "Ignore::usage"->{
  Cell[45726, 1248, 287, 7, 32, "Text",
   CellTags->"Ignore::usage"]},
 "InitialStepSize::usage"->{
  Cell[47655, 1311, 498, 11, 32, "Text",
   CellTags->"InitialStepSize::usage"]},
 "InternalHamiltonian::usage"->{
  Cell[58023, 1652, 410, 12, 32, "Text",
   CellTags->"InternalHamiltonian::usage"]},
 "IQDistortion::usage"->{
  Cell[145996, 4301, 1980, 71, 53, "Text",
   CellTags->"IQDistortion::usage"]},
 "JoinDistortions::usage"->{
  Cell[81089, 2401, 816, 24, 32, "Text",
   CellTags->"JoinDistortions::usage"]},
 "LiftDistortionRank::usage"->{
  Cell[80184, 2375, 902, 24, 52, "Text",
   CellTags->"LiftDistortionRank::usage"]},
 "LineSearchMethod::usage"->{
  Cell[48895, 1349, 414, 10, 32, "Text",
   CellTags->"LineSearchMethod::usage"]},
 "MaximumIterations::usage"->{
  Cell[50982, 1409, 409, 10, 32, "Text",
   CellTags->"MaximumIterations::usage"]},
 "MinimumImprovement::usage"->{
  Cell[49509, 1368, 438, 10, 32, "Text",
   CellTags->"MinimumImprovement::usage"]},
 "MinimumIterations::usage"->{
  Cell[50149, 1387, 632, 13, 52, "Text",
   CellTags->"MinimumIterations::usage"]},
 "MinimumStepSize::usage"->{
  Cell[48301, 1330, 393, 10, 32, "Text",
   CellTags->"MinimumStepSize::usage"]},
 "MonitorFunction::usage"->{
  Cell[46485, 1272, 969, 30, 53, "Text",
   CellTags->"MonitorFunction::usage"]},
 "NonlinearTransferDistortion::usage"->{
  Cell[149580, 4429, 2503, 67, 231, "Text",
   CellTags->"NonlinearTransferDistortion::usage"]},
 "ParameterDistribution::usage"->{
  Cell[38345, 1027, 1654, 42, 212, "Text",
   CellTags->"ParameterDistribution::usage"]},
 "PenaltyValue::usage"->{
  Cell[56355, 1591, 352, 11, 32, "Text",
   CellTags->"PenaltyValue::usage"]},
 "PerturbateDistortion::usage"->{
  Cell[82894, 2461, 1448, 46, 52, "Text",
   CellTags->"PerturbateDistortion::usage"]},
 "PostIterationFunction::usage"->{
  Cell[43440, 1183, 544, 11, 52, "Text",
   CellTags->"PostIterationFunction::usage"]},
 "ProjectGradient::usage"->{
  Cell[46016, 1257, 319, 7, 32, "Text",
   CellTags->"ProjectGradient::usage"]},
 "PropagatorFromPulse::usage"->{
  Cell[69026, 2018, 1078, 36, 91, "Text",
   CellTags->"PropagatorFromPulse::usage"]},
 "PropagatorListFromPulse::usage"->{
  Cell[70107, 2056, 1014, 31, 110, "Text",
   CellTags->"PropagatorListFromPulse::usage"]},
 "PulseFourierPlot::usage"->{
  Cell[594955, 13368, 146, 2, 30, "Text",
   CellTags->"PulseFourierPlot::usage"]},
 "PulseLayout::usage"->{
  Cell[382365, 8956, 628, 18, 53, "Text",
   CellTags->"PulseLayout::usage"]},
 "PulseLegalizer::usage"->{
  Cell[44205, 1203, 633, 16, 32, "Text",
   CellTags->"PulseLegalizer::usage"]},
 "PulsePaddingMultiplier::usage"->{
  Cell[382996, 8976, 677, 15, 53, "Text",
   CellTags->"PulsePaddingMultiplier::usage"]},
 "PulsePenalty::usage"->{
  Cell[41250, 1109, 1382, 46, 93, "Text",
   CellTags->"PulsePenalty::usage"]},
 "PulsePhaseRamp::usage"->{
  Cell[64199, 1870, 724, 22, 32, "Text",
   CellTags->"PulsePhaseRamp::usage"]},
 "PulsePhaseRotate::usage"->{
  Cell[63414, 1845, 782, 23, 52, "Text",
   CellTags->"PulsePhaseRotate::usage"]},
 "PulsePlot::usage"->{
  Cell[373592, 8726, 5467, 140, 463, "Text",
   CellTags->"PulsePlot::usage"]},
 "PulseRemoveKeys::usage"->{
  Cell[61535, 1776, 889, 30, 32, "Text",
   CellTags->"PulseRemoveKeys::usage"]},
 "PulseReplaceKey::usage"->{
  Cell[62427, 1808, 839, 29, 32, "Text",
   CellTags->"PulseReplaceKey::usage"]},
 "PulseScaling::usage"->{
  Cell[381213, 8923, 1149, 31, 74, "Text",
   CellTags->"PulseScaling::usage"]},
 "Pulse::usage"->{
  Cell[52842, 1472, 2081, 68, 472, "Text",
   CellTags->"Pulse::usage"]},
 "Repetitions::usage"->{
  Cell[37566, 1005, 575, 13, 32, "Text",
   CellTags->"Repetitions::usage"]},
 "ShowDistortedPulse::usage"->{
  Cell[379185, 8873, 1004, 26, 53, "Text",
   CellTags->"ShowDistortedPulse::usage"]},
 "SimForm::usage"->{
  Cell[60447, 1737, 840, 29, 52, "Text",
   CellTags->"SimForm::usage"]},
 "SkipChecks::usage"->{
  Cell[51587, 1428, 417, 11, 32, "Text",
   CellTags->"SkipChecks::usage"]},
 "Target::usage"->{
  Cell[56894, 1611, 323, 11, 32, "Text",
   CellTags->"Target::usage"]},
 "TimeScaleDistortion::usage"->{
  Cell[114342, 3375, 611, 18, 32, "Text",
   CellTags->"TimeScaleDistortion::usage"]},
 "TimeSteps::usage"->{
  Cell[55274, 1554, 369, 10, 32, "Text",
   CellTags->"TimeSteps::usage"]},
 "ToPulse::usage"->{
  Cell[59850, 1716, 594, 19, 32, "Text",
   CellTags->"ToPulse::usage"]},
 "UtilityGradient::usage"->{
  Cell[67410, 1966, 1613, 50, 53, "Text",
   CellTags->"UtilityGradient::usage"]},
 "UtilityValue::usage"->{
  Cell[55839, 1573, 324, 9, 32, "Text",
   CellTags->"UtilityValue::usage"]},
 "Utility::usage"->{
  Cell[65354, 1905, 2053, 59, 135, "Text",
   CellTags->"Utility::usage"]},
 "VariableChangeDistortion::usage"->{
  Cell[114956, 3395, 1684, 40, 193, "Text",
   CellTags->"VariableChangeDistortion::usage"]},
 "VerboseAscent::usage"->{
  Cell[52201, 1448, 478, 14, 32, "Text",
   CellTags->"VerboseAscent::usage"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AmplitudeRange::usage", 605047, 13672},
 {"ChannelMapping::usage", 605156, 13675},
 {"CoherentSubspaces::usage", 605270, 13678},
 {"ComposeDistortions::usage", 605389, 13681},
 {"CompositePulseDistortion::usage", 605512, 13684},
 {"ControlHamiltonians::usage", 605639, 13687},
 {"ControlLimitPolicy::usage", 605757, 13690},
 {"ConvolutionDistortion::usage", 605877, 13693},
 {"DEDistortion::usage", 605995, 13696},
 {"DerivativeMask::usage", 606106, 13699},
 {"DESolverArgs::usage", 606213, 13702},
 {"DESolver::usage", 606315, 13705},
 {"DistortionOperator::usage", 606423, 13708},
 {"DistributeOption::usage", 606541, 13711},
 {"ExitMessage::usage", 606650, 13714},
 {"ExponentialDistortion::usage", 606763, 13717},
 {"ExportJCAMP::usage", 606879, 13720},
 {"ExportSHP::usage", 606984, 13723},
 {"FindPulse::usage", 607086, 13726},
 {"ForceDistortionDependence::usage", 607202, 13729},
 {"FrequencySpaceDistortion::usage", 607332, 13732},
 {"IdentityDistortion::usage", 607458, 13735},
 {"Ignore::usage", 607564, 13738},
 {"InitialStepSize::usage", 607665, 13741},
 {"InternalHamiltonian::usage", 607780, 13744},
 {"IQDistortion::usage", 607892, 13747},
 {"JoinDistortions::usage", 608002, 13750},
 {"LiftDistortionRank::usage", 608116, 13753},
 {"LineSearchMethod::usage", 608231, 13756},
 {"MaximumIterations::usage", 608345, 13759},
 {"MinimumImprovement::usage", 608461, 13762},
 {"MinimumIterations::usage", 608577, 13765},
 {"MinimumStepSize::usage", 608690, 13768},
 {"MonitorFunction::usage", 608801, 13771},
 {"NonlinearTransferDistortion::usage", 608924, 13774},
 {"ParameterDistribution::usage", 609056, 13777},
 {"PenaltyValue::usage", 609172, 13780},
 {"PerturbateDistortion::usage", 609285, 13783},
 {"PostIterationFunction::usage", 609408, 13786},
 {"ProjectGradient::usage", 609525, 13789},
 {"PropagatorFromPulse::usage", 609639, 13792},
 {"PropagatorListFromPulse::usage", 609763, 13795},
 {"PulseFourierPlot::usage", 609885, 13798},
 {"PulseLayout::usage", 609994, 13801},
 {"PulseLegalizer::usage", 610101, 13804},
 {"PulsePaddingMultiplier::usage", 610218, 13807},
 {"PulsePenalty::usage", 610334, 13810},
 {"PulsePhaseRamp::usage", 610442, 13813},
 {"PulsePhaseRotate::usage", 610553, 13816},
 {"PulsePlot::usage", 610659, 13819},
 {"PulseRemoveKeys::usage", 610768, 13822},
 {"PulseReplaceKey::usage", 610879, 13825},
 {"PulseScaling::usage", 610987, 13828},
 {"Pulse::usage", 611087, 13831},
 {"Repetitions::usage", 611186, 13834},
 {"ShowDistortedPulse::usage", 611296, 13837},
 {"SimForm::usage", 611404, 13840},
 {"SkipChecks::usage", 611502, 13843},
 {"Target::usage", 611599, 13846},
 {"TimeScaleDistortion::usage", 611705, 13849},
 {"TimeSteps::usage", 611815, 13852},
 {"ToPulse::usage", 611912, 13855},
 {"UtilityGradient::usage", 612015, 13858},
 {"UtilityValue::usage", 612124, 13861},
 {"Utility::usage", 612223, 13864},
 {"VariableChangeDistortion::usage", 612337, 13867},
 {"VerboseAscent::usage", 612458, 13870}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 251, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[698, 22, 242, 3, 44, "Subsection"],
Cell[943, 27, 331, 5, 32, "Input"],
Cell[1277, 34, 182, 4, 31, "Text"],
Cell[1462, 40, 272, 4, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1771, 49, 101, 1, 36, "Subsection"],
Cell[1875, 52, 531, 12, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[2443, 69, 110, 1, 51, "Section"],
Cell[2556, 72, 1593, 24, 172, "Text"],
Cell[CellGroupData[{
Cell[4174, 100, 103, 1, 35, "Subsubsection"],
Cell[4280, 103, 436, 9, 67, "Text"],
Cell[4719, 114, 232, 6, 51, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[5000, 126, 197, 3, 51, "Section"],
Cell[5200, 131, 5941, 168, 666, "Text",
 CellTags->"FindPulse::usage"],
Cell[CellGroupData[{
Cell[11166, 303, 95, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[11286, 308, 102, 1, 35, "Subsubsection"],
Cell[11391, 311, 25931, 684, 1673, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[37359, 1000, 204, 3, 29, "Subsubsection"],
Cell[37566, 1005, 575, 13, 32, "Text",
 CellTags->"Repetitions::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38178, 1023, 164, 2, 35, "Subsubsection"],
Cell[38345, 1027, 1654, 42, 212, "Text",
 CellTags->"ParameterDistribution::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40036, 1074, 146, 2, 35, "Subsubsection"],
Cell[40185, 1078, 870, 22, 53, "Text",
 CellTags->"ForceDistortionDependence::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41092, 1105, 155, 2, 35, "Subsubsection"],
Cell[41250, 1109, 1382, 46, 93, "Text",
 CellTags->"PulsePenalty::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42669, 1160, 135, 2, 35, "Subsubsection"],
Cell[42807, 1164, 428, 10, 32, "Text",
 CellTags->"DerivativeMask::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43272, 1179, 165, 2, 35, "Subsubsection"],
Cell[43440, 1183, 544, 11, 52, "Text",
 CellTags->"PostIterationFunction::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44021, 1199, 181, 2, 35, "Subsubsection"],
Cell[44205, 1203, 633, 16, 32, "Text",
 CellTags->"PulseLegalizer::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44875, 1224, 139, 2, 35, "Subsubsection"],
Cell[45017, 1228, 706, 18, 53, "Text",
 CellTags->"ControlLimitPolicy::usage"],
Cell[45726, 1248, 287, 7, 32, "Text",
 CellTags->"Ignore::usage"],
Cell[46016, 1257, 319, 7, 32, "Text",
 CellTags->"ProjectGradient::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46372, 1269, 110, 1, 35, "Subsubsection"],
Cell[46485, 1272, 969, 30, 53, "Text",
 CellTags->"MonitorFunction::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47491, 1307, 161, 2, 35, "Subsubsection"],
Cell[47655, 1311, 498, 11, 32, "Text",
 CellTags->"InitialStepSize::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48190, 1327, 108, 1, 35, "Subsubsection"],
Cell[48301, 1330, 393, 10, 32, "Text",
 CellTags->"MinimumStepSize::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48731, 1345, 161, 2, 35, "Subsubsection"],
Cell[48895, 1349, 414, 10, 32, "Text",
 CellTags->"LineSearchMethod::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49346, 1364, 160, 2, 35, "Subsubsection"],
Cell[49509, 1368, 438, 10, 32, "Text",
 CellTags->"MinimumImprovement::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49984, 1383, 162, 2, 35, "Subsubsection"],
Cell[50149, 1387, 632, 13, 52, "Text",
 CellTags->"MinimumIterations::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50818, 1405, 161, 2, 35, "Subsubsection"],
Cell[50982, 1409, 409, 10, 32, "Text",
 CellTags->"MaximumIterations::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51428, 1424, 156, 2, 35, "Subsubsection"],
Cell[51587, 1428, 417, 11, 32, "Text",
 CellTags->"SkipChecks::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52041, 1444, 157, 2, 35, "Subsubsection"],
Cell[52201, 1448, 478, 14, 32, "Text",
 CellTags->"VerboseAscent::usage"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52740, 1469, 99, 1, 65, "Section"],
Cell[52842, 1472, 2081, 68, 472, "Text",
 CellTags->"Pulse::usage"],
Cell[CellGroupData[{
Cell[54948, 1544, 145, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[55118, 1550, 153, 2, 35, "Subsubsection"],
Cell[55274, 1554, 369, 10, 32, "Text",
 CellTags->"TimeSteps::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55680, 1569, 156, 2, 35, "Subsubsection"],
Cell[55839, 1573, 324, 9, 32, "Text",
 CellTags->"UtilityValue::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56200, 1587, 152, 2, 35, "Subsubsection"],
Cell[56355, 1591, 352, 11, 32, "Text",
 CellTags->"PenaltyValue::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56744, 1607, 147, 2, 35, "Subsubsection"],
Cell[56894, 1611, 323, 11, 32, "Text",
 CellTags->"Target::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57254, 1627, 160, 2, 35, "Subsubsection"],
Cell[57417, 1631, 407, 12, 32, "Text",
 CellTags->"ControlHamiltonians::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57861, 1648, 159, 2, 35, "Subsubsection"],
Cell[58023, 1652, 410, 12, 32, "Text",
 CellTags->"InternalHamiltonian::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58470, 1669, 153, 2, 35, "Subsubsection"],
Cell[58626, 1673, 396, 12, 32, "Text",
 CellTags->"AmplitudeRange::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59059, 1690, 201, 3, 35, "Subsubsection"],
Cell[59263, 1695, 381, 11, 32, "Text",
 CellTags->"ExitMessage::usage"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59693, 1712, 154, 2, 36, "Subsection"],
Cell[59850, 1716, 594, 19, 32, "Text",
 CellTags->"ToPulse::usage"],
Cell[60447, 1737, 840, 29, 52, "Text",
 CellTags->"SimForm::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61324, 1771, 208, 3, 45, "Subsection"],
Cell[61535, 1776, 889, 30, 32, "Text",
 CellTags->"PulseRemoveKeys::usage"],
Cell[62427, 1808, 839, 29, 32, "Text",
 CellTags->"PulseReplaceKey::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63303, 1842, 108, 1, 45, "Subsection"],
Cell[63414, 1845, 782, 23, 52, "Text",
 CellTags->"PulsePhaseRotate::usage"],
Cell[64199, 1870, 724, 22, 32, "Text",
 CellTags->"PulsePhaseRamp::usage"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64972, 1898, 379, 5, 65, "Section"],
Cell[65354, 1905, 2053, 59, 135, "Text",
 CellTags->"Utility::usage"],
Cell[67410, 1966, 1613, 50, 53, "Text",
 CellTags->"UtilityGradient::usage"],
Cell[69026, 2018, 1078, 36, 91, "Text",
 CellTags->"PropagatorFromPulse::usage"],
Cell[70107, 2056, 1014, 31, 110, "Text",
 CellTags->"PropagatorListFromPulse::usage"],
Cell[CellGroupData[{
Cell[71146, 2091, 106, 1, 45, "Subsection"],
Cell[71255, 2094, 3331, 101, 238, "Text",
 CellTags->"CoherentSubspaces::usage"]
}, Open  ]],
Cell[74601, 2198, 100, 1, 44, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74738, 2204, 156, 2, 65, "Section"],
Cell[74897, 2208, 5050, 158, 337, "Text",
 CellTags->"DistortionOperator::usage"],
Cell[CellGroupData[{
Cell[79972, 2370, 209, 3, 45, "Subsection"],
Cell[80184, 2375, 902, 24, 52, "Text",
 CellTags->"LiftDistortionRank::usage"],
Cell[81089, 2401, 816, 24, 32, "Text",
 CellTags->"JoinDistortions::usage"],
Cell[81908, 2427, 983, 32, 51, "Text",
 CellTags->"ComposeDistortions::usage"],
Cell[82894, 2461, 1448, 46, 52, "Text",
 CellTags->"PerturbateDistortion::usage"],
Cell[CellGroupData[{
Cell[84367, 2511, 100, 1, 35, "Subsubsection"],
Cell[84470, 2514, 157, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[84652, 2521, 474, 9, 55, "Input"],
Cell[85129, 2532, 220, 8, 32, "Output"],
Cell[85352, 2542, 458, 16, 35, "Output"]
}, Open  ]],
Cell[85825, 2561, 243, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[86093, 2570, 675, 19, 32, "Input"],
Cell[86771, 2591, 1230, 28, 32, "Output"]
}, Open  ]],
Cell[88016, 2622, 240, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[88281, 2633, 547, 16, 32, "Input"],
Cell[88831, 2651, 1286, 34, 55, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[90166, 2691, 99, 1, 29, "Subsubsection"],
Cell[90268, 2694, 199, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[90492, 2702, 483, 10, 32, "Input"],
Cell[90978, 2714, 1378, 48, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92393, 2767, 546, 16, 32, "Input"],
Cell[92942, 2785, 1217, 33, 55, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94208, 2824, 100, 1, 29, "Subsubsection"],
Cell[94311, 2827, 119, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[94455, 2832, 516, 11, 32, "Input"],
Cell[94974, 2845, 750, 24, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95761, 2874, 496, 16, 32, "Input"],
Cell[96260, 2892, 11438, 241, 121, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107747, 3139, 100, 1, 29, "Subsubsection"],
Cell[107850, 3142, 239, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[108114, 3151, 865, 21, 55, "Input"],
Cell[108982, 3174, 164, 2, 32, "Output"],
Cell[109149, 3178, 353, 13, 32, "Output"]
}, Open  ]],
Cell[109517, 3194, 295, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[109837, 3205, 352, 11, 32, "Input"],
Cell[110192, 3218, 262, 8, 32, "Output"]
}, Open  ]],
Cell[110469, 3229, 140, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[110634, 3238, 304, 10, 32, "Input"],
Cell[110941, 3250, 623, 21, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111625, 3278, 159, 2, 45, "Subsection"],
Cell[111787, 3282, 495, 14, 32, "Text",
 CellTags->"IdentityDistortion::usage"],
Cell[CellGroupData[{
Cell[112307, 3300, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[112430, 3305, 513, 15, 55, "Input"],
Cell[112946, 3322, 236, 9, 32, "Output"],
Cell[113185, 3333, 974, 32, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114220, 3372, 119, 1, 45, "Subsection"],
Cell[114342, 3375, 611, 18, 32, "Text",
 CellTags->"TimeScaleDistortion::usage"],
Cell[114956, 3395, 1684, 40, 193, "Text",
 CellTags->"VariableChangeDistortion::usage"],
Cell[CellGroupData[{
Cell[116665, 3439, 151, 2, 35, "Subsubsection"],
Cell[116819, 3443, 118, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[116962, 3448, 465, 14, 55, "Input"],
Cell[117430, 3464, 219, 8, 32, "Output"],
Cell[117652, 3474, 296, 9, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[117997, 3489, 151, 2, 29, "Subsubsection"],
Cell[118151, 3493, 264, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[118440, 3502, 1058, 32, 55, "Input"],
Cell[119501, 3536, 611, 19, 32, "Output"],
Cell[120115, 3557, 2348, 70, 48, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122524, 3634, 106, 1, 44, "Subsection"],
Cell[122633, 3637, 3535, 114, 165, "Text",
 CellTags->"ConvolutionDistortion::usage"],
Cell[126171, 3753, 2496, 85, 133, "Text",
 CellTags->"ExponentialDistortion::usage"],
Cell[CellGroupData[{
Cell[128692, 3842, 150, 2, 35, "Subsubsection"],
Cell[128845, 3846, 207, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[129077, 3855, 1110, 31, 55, "Input"],
Cell[130190, 3888, 2214, 62, 68, "Output"],
Cell[132407, 3952, 1449, 46, 51, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133905, 4004, 100, 1, 29, "Subsubsection"],
Cell[134008, 4007, 164, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[134197, 4014, 1740, 45, 55, "Input"],
Cell[135940, 4061, 2653, 74, 72, "Output"],
Cell[138596, 4137, 214, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[138859, 4148, 102, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[138986, 4153, 1248, 32, 77, "Input"],
Cell[140237, 4187, 5544, 103, 263, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145842, 4297, 151, 2, 44, "Subsection"],
Cell[145996, 4301, 1980, 71, 53, "Text",
 CellTags->"IQDistortion::usage"],
Cell[147979, 4374, 104, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[148108, 4379, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[148233, 4384, 218, 5, 32, "Input"],
Cell[148454, 4391, 947, 28, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149462, 4426, 115, 1, 44, "Subsection"],
Cell[149580, 4429, 2503, 67, 231, "Text",
 CellTags->"NonlinearTransferDistortion::usage"],
Cell[CellGroupData[{
Cell[152108, 4500, 100, 1, 35, "Subsubsection"],
Cell[152211, 4503, 119, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[152355, 4508, 1199, 34, 59, "Input"],
Cell[153557, 4544, 127740, 2091, 308, "Output"]
}, Open  ]],
Cell[281312, 6638, 261, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[281598, 6647, 1729, 47, 99, "Input"],
Cell[283330, 6696, 14382, 290, 231, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297773, 6993, 102, 1, 44, "Subsection"],
Cell[297878, 6996, 4556, 149, 379, "Text",
 CellTags->"DEDistortion::usage"],
Cell[CellGroupData[{
Cell[302459, 7149, 98, 1, 35, "Subsubsection"],
Cell[302560, 7152, 473, 14, 32, "Text",
 CellTags->"DESolver::usage"],
Cell[303036, 7168, 631, 18, 53, "Text",
 CellTags->"DESolverArgs::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303704, 7191, 98, 1, 35, "Subsubsection"],
Cell[303805, 7194, 251, 5, 31, "Text"],
Cell[304059, 7201, 1598, 44, 187, "Input"],
Cell[305660, 7247, 155, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[305840, 7254, 515, 13, 32, "Input"],
Cell[306358, 7269, 621, 17, 32, "Output"]
}, Open  ]],
Cell[306994, 7289, 124, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[307143, 7294, 688, 17, 32, "Input"],
Cell[307834, 7313, 7222, 137, 281, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315117, 7457, 114, 1, 45, "Subsection"],
Cell[315234, 7460, 3650, 125, 98, "Text",
 CellTags->"FrequencySpaceDistortion::usage"],
Cell[CellGroupData[{
Cell[318909, 7589, 97, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[319031, 7594, 319, 8, 32, "Input"],
Cell[319353, 7604, 334, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319724, 7620, 2220, 66, 143, "Input"],
Cell[321947, 7688, 7900, 143, 265, "Output"],
Cell[329850, 7833, 7787, 141, 265, "Output"],
Cell[337640, 7976, 7942, 144, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345619, 8125, 907, 24, 55, "Input"],
Cell[346529, 8151, 7996, 144, 265, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[354586, 8302, 112, 1, 45, "Subsection"],
Cell[354701, 8305, 1712, 50, 133, "Text",
 CellTags->"CompositePulseDistortion::usage"],
Cell[356416, 8357, 106, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[356547, 8362, 98, 1, 35, "Subsubsection"],
Cell[356648, 8365, 567, 20, 32, "Text"],
Cell[357218, 8387, 762, 24, 32, "Input"],
Cell[CellGroupData[{
Cell[358005, 8415, 1148, 34, 77, "Input"],
Cell[359156, 8451, 13932, 253, 265, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[373139, 8710, 97, 1, 65, "Section"],
Cell[373239, 8713, 102, 1, 51, "Section"],
Cell[CellGroupData[{
Cell[373366, 8718, 99, 1, 51, "Section"],
Cell[CellGroupData[{
Cell[373490, 8723, 99, 1, 44, "Subsection"],
Cell[373592, 8726, 5467, 140, 463, "Text",
 CellTags->"PulsePlot::usage"],
Cell[CellGroupData[{
Cell[379084, 8870, 98, 1, 35, "Subsubsection"],
Cell[379185, 8873, 1004, 26, 53, "Text",
 CellTags->"ShowDistortedPulse::usage"],
Cell[380192, 8901, 1018, 20, 92, "Text",
 CellTags->"ChannelMapping::usage"],
Cell[381213, 8923, 1149, 31, 74, "Text",
 CellTags->"PulseScaling::usage"],
Cell[382365, 8956, 628, 18, 53, "Text",
 CellTags->"PulseLayout::usage"],
Cell[382996, 8976, 677, 15, 53, "Text",
 CellTags->"PulsePaddingMultiplier::usage"],
Cell[383676, 8993, 767, 19, 52, "Text",
 CellTags->"DistributeOption::usage"]
}, Closed]],
Cell[CellGroupData[{
Cell[384480, 9017, 101, 1, 29, "Subsubsection"],
Cell[384584, 9020, 103, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[384712, 9025, 878, 26, 55, "Input"],
Cell[385593, 9053, 3618, 75, 248, "Output"]
}, Open  ]],
Cell[389226, 9131, 237, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[389488, 9141, 1581, 45, 77, "Input"],
Cell[391072, 9188, 4313, 88, 288, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[395434, 9282, 202, 3, 29, "Subsubsection"],
Cell[395639, 9287, 384, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[396048, 9302, 2579, 62, 165, "Input"],
Cell[398630, 9366, 26290, 483, 635, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[424969, 9855, 128, 2, 29, "Subsubsection"],
Cell[425100, 9859, 160, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[425285, 9868, 1270, 37, 55, "Input"],
Cell[426558, 9907, 12009, 235, 379, "Output"]
}, Open  ]],
Cell[438582, 10145, 219, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[438826, 10156, 1675, 47, 77, "Input"],
Cell[440504, 10205, 31758, 596, 410, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[472311, 10807, 101, 1, 29, "Subsubsection"],
Cell[472415, 10810, 158, 5, 32, "Text"],
Cell[472576, 10817, 1010, 28, 32, "Input"],
Cell[CellGroupData[{
Cell[473611, 10849, 249, 5, 32, "Input"],
Cell[473863, 10856, 7420, 151, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481320, 11012, 272, 7, 32, "Input"],
Cell[481595, 11021, 6195, 130, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487827, 11156, 298, 7, 32, "Input"],
Cell[488128, 11165, 6248, 130, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494413, 11300, 251, 5, 32, "Input"],
Cell[494667, 11307, 6265, 133, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500969, 11445, 248, 5, 32, "Input"],
Cell[501220, 11452, 5835, 123, 124, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[507104, 11581, 100, 1, 29, "Subsubsection"],
Cell[507207, 11584, 355, 7, 52, "Text"],
Cell[507565, 11593, 1266, 37, 55, "Input"],
Cell[CellGroupData[{
Cell[508856, 11634, 575, 14, 32, "Input"],
Cell[509434, 11650, 27987, 553, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537458, 12208, 734, 20, 32, "Input"],
Cell[538195, 12230, 28016, 554, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566248, 12789, 655, 17, 32, "Input"],
Cell[566906, 12808, 27881, 550, 265, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[594848, 13365, 104, 1, 44, "Subsection"],
Cell[594955, 13368, 146, 2, 30, "Text",
 CellTags->"PulseFourierPlot::usage"]
}, Open  ]],
Cell[595116, 13373, 106, 1, 44, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595259, 13379, 94, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[595378, 13384, 99, 1, 45, "Subsection"],
Cell[595480, 13387, 1408, 52, 112, "Text",
 CellTags->"ExportJCAMP::usage"],
Cell[CellGroupData[{
Cell[596913, 13443, 102, 1, 35, "Subsubsection"],
Cell[597018, 13446, 5889, 151, 563, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602956, 13603, 99, 1, 45, "Subsection"],
Cell[603058, 13606, 1652, 51, 74, "Text",
 CellTags->"ExportSHP::usage"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

